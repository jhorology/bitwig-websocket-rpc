{
  "reportedOn": "Dec 3, 2019, 8:19:33 AM",
  "host": {
    "apiVersion": 10,
    "product": "Bitwig Studio",
    "vendor": "Bitwig",
    "version": "3.1 Beta 2",
    "platformType": "WINDOWS"
  },
  "extension": {
    "name": "WebSocket RPC API 10",
    "author": "Masafumi",
    "version": "0.2.0-SNAPSHOT",
    "id": "11797f46-6987-4795-ba94-0a6a0c4e8ac5",
    "requiredApiVersion": 10,
    "hardwareVendor": "WebSocket RPC",
    "hardwareModel": "WebSocket RPC",
    "usingBetaAPI": true,
    "shouldFailOnDeprecatedUse": true
  },
  "methods": [{
    "method": "rpc.log",
    "params": [],
    "result": "object",
    "expression": "StringValue Rpc#log()"
  }, {
    "method": "rpc.log.get",
    "params": [],
    "result": "string",
    "expression": "String Rpc#log().get()"
  }, {
    "method": "rpc.log.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Rpc#log().getLimited(int)"
  }, {
    "method": "rpc.log.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Rpc#log().isSubscribed()"
  }, {
    "method": "rpc.log.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Rpc#log().subscribe()"
  }, {
    "method": "rpc.log.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Rpc#log().unsubscribe()"
  }, {
    "method": "rpc.log.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Rpc#log().setIsSubscribed(boolean)"
  }, {
    "method": "rpc.off",
    "params": ["string[]"],
    "result": "object",
    "expression": "Map Rpc#off(java.lang.String[])"
  }, {
    "method": "rpc.on",
    "params": ["string[]"],
    "result": "object",
    "expression": "Map Rpc#on(java.lang.String[])"
  }, {
    "method": "rpc.config",
    "params": [],
    "result": "object",
    "expression": "Config Rpc#config()"
  }, {
    "method": "rpc.config",
    "params": ["object"],
    "result": "void",
    "expression": "void Rpc#config(com.github.jhorology.bitwig.Config)"
  }, {
    "method": "rpc.broadcast",
    "params": ["string", "any[]"],
    "result": "void",
    "expression": "void Rpc#broadcast(java.lang.String, java.lang.Object[])"
  }, {
    "method": "rpc.report",
    "params": [],
    "result": "any",
    "expression": "Object Rpc#report()"
  }, {
    "method": "rpc.echo",
    "params": ["string"],
    "result": "string",
    "expression": "String Rpc#echo(java.lang.String)"
  }, {
    "method": "test.concat",
    "params": ["string", "string"],
    "result": "string",
    "expression": "String Test#concat(java.lang.String, java.lang.String)"
  }, {
    "method": "test.concat",
    "params": ["string[]"],
    "result": "string",
    "expression": "String Test#concat(java.lang.String[])"
  }, {
    "method": "test.concat",
    "params": ["object"],
    "result": "string",
    "expression": "String Test#concat(com.github.jhorology.bitwig.rpc.test.GenericPair<java.lang.String, java.lang.String>)"
  }, {
    "method": "test.repeat",
    "params": ["object"],
    "result": "string",
    "expression": "String Test#repeat(com.github.jhorology.bitwig.rpc.test.GenericPair<java.lang.String, java.lang.Integer>)"
  }, {
    "method": "test.repeat",
    "params": ["string", "number"],
    "result": "string",
    "expression": "String Test#repeat(java.lang.String, int)"
  }, {
    "method": "test.sum",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "int Test#sum(int, int, int)"
  }, {
    "method": "test.sum",
    "params": ["object"],
    "result": "number",
    "expression": "int Test#sum(com.github.jhorology.bitwig.rpc.test.IntPair)"
  }, {
    "method": "test.sum",
    "params": ["number[]"],
    "result": "number",
    "expression": "int Test#sum(int[])"
  }, {
    "method": "test.sum",
    "params": ["number", "number"],
    "result": "number",
    "expression": "int Test#sum(int, int)"
  }, {
    "method": "test.hello",
    "params": [],
    "result": "string",
    "expression": "String Test#hello()"
  }, {
    "method": "test.consume",
    "params": ["number"],
    "result": "void",
    "expression": "void Test#consume(int)"
  }, {
    "method": "test.consume",
    "params": ["number[]"],
    "result": "void",
    "expression": "void Test#consume(java.lang.Number[])"
  }, {
    "method": "test.consume",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Test#consume(double, double)"
  }, {
    "method": "test.consume",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Test#consume(java.lang.Number, java.lang.Number, java.lang.Number)"
  }, {
    "method": "test.echo",
    "params": ["string"],
    "result": "string",
    "expression": "String Test#echo(java.lang.String)"
  }, {
    "method": "test.nop",
    "params": [],
    "result": "void",
    "expression": "void Test#nop()"
  }, {
    "method": "host.showPopupNotification",
    "params": ["string"],
    "result": "void",
    "expression": "void ControllerHost#showPopupNotification(java.lang.String)"
  }, {
    "method": "host.getNotificationSettings.setShouldShowPresetNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowPresetNotifications(boolean)"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue ControllerHost#getNotificationSettings().getUserNotificationsEnabled()"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().getUserNotificationsEnabled().set(boolean)"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().getUserNotificationsEnabled().toggle()"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ControllerHost#getNotificationSettings().getUserNotificationsEnabled().get()"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ControllerHost#getNotificationSettings().getUserNotificationsEnabled().getAsBoolean()"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ControllerHost#getNotificationSettings().getUserNotificationsEnabled().isSubscribed()"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().getUserNotificationsEnabled().subscribe()"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().getUserNotificationsEnabled().unsubscribe()"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().getUserNotificationsEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "host.getNotificationSettings.getUserNotificationsEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().getUserNotificationsEnabled().invoke()"
  }, {
    "method": "host.getNotificationSettings.setShouldShowMappingNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowMappingNotifications(boolean)"
  }, {
    "method": "host.getNotificationSettings.setShouldShowValueNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowValueNotifications(boolean)"
  }, {
    "method": "host.getNotificationSettings.setShouldShowDeviceLayerSelectionNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowDeviceLayerSelectionNotifications(boolean)"
  }, {
    "method": "host.getNotificationSettings.setShouldShowSelectionNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowSelectionNotifications(boolean)"
  }, {
    "method": "host.getNotificationSettings.setShouldShowTrackSelectionNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowTrackSelectionNotifications(boolean)"
  }, {
    "method": "host.getNotificationSettings.setShouldShowChannelSelectionNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowChannelSelectionNotifications(boolean)"
  }, {
    "method": "host.getNotificationSettings.setShouldShowDeviceSelectionNotifications",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ControllerHost#getNotificationSettings().setShouldShowDeviceSelectionNotifications(boolean)"
  }, {
    "method": "application.remove",
    "params": [],
    "result": "void",
    "expression": "void Application#remove()"
  }, {
    "method": "application.getActions",
    "params": [],
    "result": "object[]",
    "expression": "Action[] Application#getActions()"
  }, {
    "method": "application.copy",
    "params": [],
    "result": "void",
    "expression": "void Application#copy()"
  }, {
    "method": "application.duplicate",
    "params": [],
    "result": "void",
    "expression": "void Application#duplicate()"
  }, {
    "method": "application.rename",
    "params": [],
    "result": "void",
    "expression": "void Application#rename()"
  }, {
    "method": "application.escape",
    "params": [],
    "result": "void",
    "expression": "void Application#escape()"
  }, {
    "method": "application.activateEngine",
    "params": [],
    "result": "void",
    "expression": "void Application#activateEngine()"
  }, {
    "method": "application.arrowKeyDown",
    "params": [],
    "result": "void",
    "expression": "void Application#arrowKeyDown()"
  }, {
    "method": "application.focusPanelToLeft",
    "params": [],
    "result": "void",
    "expression": "void Application#focusPanelToLeft()"
  }, {
    "method": "application.displayProfile",
    "params": [],
    "result": "object",
    "expression": "StringValue Application#displayProfile()"
  }, {
    "method": "application.displayProfile.get",
    "params": [],
    "result": "string",
    "expression": "String Application#displayProfile().get()"
  }, {
    "method": "application.displayProfile.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Application#displayProfile().getLimited(int)"
  }, {
    "method": "application.displayProfile.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#displayProfile().isSubscribed()"
  }, {
    "method": "application.displayProfile.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#displayProfile().subscribe()"
  }, {
    "method": "application.displayProfile.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#displayProfile().unsubscribe()"
  }, {
    "method": "application.displayProfile.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#displayProfile().setIsSubscribed(boolean)"
  }, {
    "method": "application.panelLayout",
    "params": [],
    "result": "object",
    "expression": "StringValue Application#panelLayout()"
  }, {
    "method": "application.panelLayout.get",
    "params": [],
    "result": "string",
    "expression": "String Application#panelLayout().get()"
  }, {
    "method": "application.panelLayout.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Application#panelLayout().getLimited(int)"
  }, {
    "method": "application.panelLayout.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#panelLayout().isSubscribed()"
  }, {
    "method": "application.panelLayout.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#panelLayout().subscribe()"
  }, {
    "method": "application.panelLayout.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#panelLayout().unsubscribe()"
  }, {
    "method": "application.panelLayout.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#panelLayout().setIsSubscribed(boolean)"
  }, {
    "method": "application.getActionCategory",
    "params": ["string"],
    "result": "object",
    "expression": "ActionCategory Application#getActionCategory(java.lang.String)"
  }, {
    "method": "application.getActionCategory.getName",
    "params": ["string"],
    "result": "string",
    "expression": "String Application#getActionCategory(java.lang.String).getName()"
  }, {
    "method": "application.getActionCategory.getActions",
    "params": ["string"],
    "result": "object[]",
    "expression": "Action[] Application#getActionCategory(java.lang.String).getActions()"
  }, {
    "method": "application.getActionCategory.getId",
    "params": ["string"],
    "result": "string",
    "expression": "String Application#getActionCategory(java.lang.String).getId()"
  }, {
    "method": "application.arrowKeyLeft",
    "params": [],
    "result": "void",
    "expression": "void Application#arrowKeyLeft()"
  }, {
    "method": "application.projectName",
    "params": [],
    "result": "object",
    "expression": "StringValue Application#projectName()"
  }, {
    "method": "application.projectName.get",
    "params": [],
    "result": "string",
    "expression": "String Application#projectName().get()"
  }, {
    "method": "application.projectName.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Application#projectName().getLimited(int)"
  }, {
    "method": "application.projectName.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#projectName().isSubscribed()"
  }, {
    "method": "application.projectName.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#projectName().subscribe()"
  }, {
    "method": "application.projectName.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#projectName().unsubscribe()"
  }, {
    "method": "application.projectName.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#projectName().setIsSubscribed(boolean)"
  }, {
    "method": "application.previousProject",
    "params": [],
    "result": "void",
    "expression": "void Application#previousProject()"
  }, {
    "method": "application.setPanelLayout",
    "params": ["string"],
    "result": "void",
    "expression": "void Application#setPanelLayout(java.lang.String)"
  }, {
    "method": "application.focusPanelAbove",
    "params": [],
    "result": "void",
    "expression": "void Application#focusPanelAbove()"
  }, {
    "method": "application.createAudioTrack",
    "params": ["number"],
    "result": "void",
    "expression": "void Application#createAudioTrack(int)"
  }, {
    "method": "application.createEffectTrack",
    "params": ["number"],
    "result": "void",
    "expression": "void Application#createEffectTrack(int)"
  }, {
    "method": "application.focusPanelBelow",
    "params": [],
    "result": "void",
    "expression": "void Application#focusPanelBelow()"
  }, {
    "method": "application.focusPanelToRight",
    "params": [],
    "result": "void",
    "expression": "void Application#focusPanelToRight()"
  }, {
    "method": "application.arrowKeyUp",
    "params": [],
    "result": "void",
    "expression": "void Application#arrowKeyUp()"
  }, {
    "method": "application.arrowKeyRight",
    "params": [],
    "result": "void",
    "expression": "void Application#arrowKeyRight()"
  }, {
    "method": "application.hasActiveEngine",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Application#hasActiveEngine()"
  }, {
    "method": "application.hasActiveEngine.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#hasActiveEngine().get()"
  }, {
    "method": "application.hasActiveEngine.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#hasActiveEngine().getAsBoolean()"
  }, {
    "method": "application.hasActiveEngine.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#hasActiveEngine().isSubscribed()"
  }, {
    "method": "application.hasActiveEngine.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#hasActiveEngine().subscribe()"
  }, {
    "method": "application.hasActiveEngine.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#hasActiveEngine().unsubscribe()"
  }, {
    "method": "application.hasActiveEngine.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#hasActiveEngine().setIsSubscribed(boolean)"
  }, {
    "method": "application.previousSubPanel",
    "params": [],
    "result": "void",
    "expression": "void Application#previousSubPanel()"
  }, {
    "method": "application.selectAll",
    "params": [],
    "result": "void",
    "expression": "void Application#selectAll()"
  }, {
    "method": "application.selectNone",
    "params": [],
    "result": "void",
    "expression": "void Application#selectNone()"
  }, {
    "method": "application.toggleFullScreen",
    "params": [],
    "result": "void",
    "expression": "void Application#toggleFullScreen()"
  }, {
    "method": "application.zoomIn",
    "params": [],
    "result": "void",
    "expression": "void Application#zoomIn()"
  }, {
    "method": "application.zoomOut",
    "params": [],
    "result": "void",
    "expression": "void Application#zoomOut()"
  }, {
    "method": "application.deactivateEngine",
    "params": [],
    "result": "void",
    "expression": "void Application#deactivateEngine()"
  }, {
    "method": "application.zoomToFit",
    "params": [],
    "result": "void",
    "expression": "void Application#zoomToFit()"
  }, {
    "method": "application.zoomToSelection",
    "params": [],
    "result": "void",
    "expression": "void Application#zoomToSelection()"
  }, {
    "method": "application.undo",
    "params": [],
    "result": "void",
    "expression": "void Application#undo()"
  }, {
    "method": "application.cut",
    "params": [],
    "result": "void",
    "expression": "void Application#cut()"
  }, {
    "method": "application.paste",
    "params": [],
    "result": "void",
    "expression": "void Application#paste()"
  }, {
    "method": "application.redo",
    "params": [],
    "result": "void",
    "expression": "void Application#redo()"
  }, {
    "method": "application.enter",
    "params": [],
    "result": "void",
    "expression": "void Application#enter()"
  }, {
    "method": "application.previousPanelLayout",
    "params": [],
    "result": "void",
    "expression": "void Application#previousPanelLayout()"
  }, {
    "method": "application.recordQuantizeNoteLength",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Application#recordQuantizeNoteLength()"
  }, {
    "method": "application.recordQuantizeNoteLength.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#recordQuantizeNoteLength().set(boolean)"
  }, {
    "method": "application.recordQuantizeNoteLength.toggle",
    "params": [],
    "result": "void",
    "expression": "void Application#recordQuantizeNoteLength().toggle()"
  }, {
    "method": "application.recordQuantizeNoteLength.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#recordQuantizeNoteLength().get()"
  }, {
    "method": "application.recordQuantizeNoteLength.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#recordQuantizeNoteLength().getAsBoolean()"
  }, {
    "method": "application.recordQuantizeNoteLength.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#recordQuantizeNoteLength().isSubscribed()"
  }, {
    "method": "application.recordQuantizeNoteLength.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#recordQuantizeNoteLength().subscribe()"
  }, {
    "method": "application.recordQuantizeNoteLength.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#recordQuantizeNoteLength().unsubscribe()"
  }, {
    "method": "application.recordQuantizeNoteLength.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#recordQuantizeNoteLength().setIsSubscribed(boolean)"
  }, {
    "method": "application.recordQuantizeNoteLength.invoke",
    "params": [],
    "result": "void",
    "expression": "void Application#recordQuantizeNoteLength().invoke()"
  }, {
    "method": "application.getActionCategories",
    "params": [],
    "result": "object[]",
    "expression": "ActionCategory[] Application#getActionCategories()"
  }, {
    "method": "application.createInstrumentTrack",
    "params": ["number"],
    "result": "void",
    "expression": "void Application#createInstrumentTrack(int)"
  }, {
    "method": "application.navigateToParentTrackGroup",
    "params": [],
    "result": "void",
    "expression": "void Application#navigateToParentTrackGroup()"
  }, {
    "method": "application.recordQuantizationGrid",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Application#recordQuantizationGrid()"
  }, {
    "method": "application.recordQuantizationGrid.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Application#recordQuantizationGrid().set(java.lang.String)"
  }, {
    "method": "application.recordQuantizationGrid.get",
    "params": [],
    "result": "string",
    "expression": "String Application#recordQuantizationGrid().get()"
  }, {
    "method": "application.recordQuantizationGrid.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#recordQuantizationGrid().isSubscribed()"
  }, {
    "method": "application.recordQuantizationGrid.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#recordQuantizationGrid().subscribe()"
  }, {
    "method": "application.recordQuantizationGrid.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#recordQuantizationGrid().unsubscribe()"
  }, {
    "method": "application.recordQuantizationGrid.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#recordQuantizationGrid().setIsSubscribed(boolean)"
  }, {
    "method": "application.toggleNoteEditor",
    "params": [],
    "result": "void",
    "expression": "void Application#toggleNoteEditor()"
  }, {
    "method": "application.toggleDevices",
    "params": [],
    "result": "void",
    "expression": "void Application#toggleDevices()"
  }, {
    "method": "application.nextPanelLayout",
    "params": [],
    "result": "void",
    "expression": "void Application#nextPanelLayout()"
  }, {
    "method": "application.toggleMixer",
    "params": [],
    "result": "void",
    "expression": "void Application#toggleMixer()"
  }, {
    "method": "application.nextProject",
    "params": [],
    "result": "void",
    "expression": "void Application#nextProject()"
  }, {
    "method": "application.toggleInspector",
    "params": [],
    "result": "void",
    "expression": "void Application#toggleInspector()"
  }, {
    "method": "application.nextSubPanel",
    "params": [],
    "result": "void",
    "expression": "void Application#nextSubPanel()"
  }, {
    "method": "application.toggleAutomationEditor",
    "params": [],
    "result": "void",
    "expression": "void Application#toggleAutomationEditor()"
  }, {
    "method": "application.toggleBrowserVisibility",
    "params": [],
    "result": "void",
    "expression": "void Application#toggleBrowserVisibility()"
  }, {
    "method": "application.observedAction",
    "params": [],
    "result": "object",
    "expression": "ObservedActionValue Application#observedAction()"
  }, {
    "method": "application.observedAction.isEnabled",
    "params": ["string"],
    "result": "boolean",
    "expression": "boolean Application#observedAction().isEnabled(java.lang.String)"
  }, {
    "method": "application.observedAction.setObservedIds",
    "params": ["string[]"],
    "result": "void",
    "expression": "void Application#observedAction().setObservedIds(java.lang.String[])"
  }, {
    "method": "application.observedAction.values",
    "params": [],
    "result": "object",
    "expression": "Collection Application#observedAction().values()"
  }, {
    "method": "application.observedAction.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Application#observedAction().isSubscribed()"
  }, {
    "method": "application.observedAction.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#observedAction().subscribe()"
  }, {
    "method": "application.observedAction.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Application#observedAction().unsubscribe()"
  }, {
    "method": "application.observedAction.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Application#observedAction().setIsSubscribed(boolean)"
  }, {
    "method": "transport.stop",
    "params": [],
    "result": "void",
    "expression": "void Transport#stop()"
  }, {
    "method": "transport.rewind",
    "params": [],
    "result": "void",
    "expression": "void Transport#rewind()"
  }, {
    "method": "transport.preRoll",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Transport#preRoll()"
  }, {
    "method": "transport.preRoll.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Transport#preRoll().set(java.lang.String)"
  }, {
    "method": "transport.preRoll.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#preRoll().get()"
  }, {
    "method": "transport.preRoll.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#preRoll().isSubscribed()"
  }, {
    "method": "transport.preRoll.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#preRoll().subscribe()"
  }, {
    "method": "transport.preRoll.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#preRoll().unsubscribe()"
  }, {
    "method": "transport.preRoll.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#preRoll().setIsSubscribed(boolean)"
  }, {
    "method": "transport.continuePlayback",
    "params": [],
    "result": "void",
    "expression": "void Transport#continuePlayback()"
  }, {
    "method": "transport.metronomeVolume",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Transport#metronomeVolume()"
  }, {
    "method": "transport.metronomeVolume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.metronomeVolume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().set(double)"
  }, {
    "method": "transport.metronomeVolume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.metronomeVolume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().inc(double)"
  }, {
    "method": "transport.metronomeVolume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().setRaw(double)"
  }, {
    "method": "transport.metronomeVolume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().setImmediately(double)"
  }, {
    "method": "transport.metronomeVolume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().incRaw(double)"
  }, {
    "method": "transport.metronomeVolume.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#metronomeVolume().get()"
  }, {
    "method": "transport.metronomeVolume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Transport#metronomeVolume().getRaw()"
  }, {
    "method": "transport.metronomeVolume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#metronomeVolume().getAsDouble()"
  }, {
    "method": "transport.metronomeVolume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#metronomeVolume().displayedValue()"
  }, {
    "method": "transport.metronomeVolume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#metronomeVolume().displayedValue().get()"
  }, {
    "method": "transport.metronomeVolume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#metronomeVolume().displayedValue().getLimited(int)"
  }, {
    "method": "transport.metronomeVolume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#metronomeVolume().displayedValue().isSubscribed()"
  }, {
    "method": "transport.metronomeVolume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#metronomeVolume().displayedValue().subscribe()"
  }, {
    "method": "transport.metronomeVolume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#metronomeVolume().displayedValue().unsubscribe()"
  }, {
    "method": "transport.metronomeVolume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.metronomeVolume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#metronomeVolume().isSubscribed()"
  }, {
    "method": "transport.metronomeVolume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#metronomeVolume().subscribe()"
  }, {
    "method": "transport.metronomeVolume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#metronomeVolume().unsubscribe()"
  }, {
    "method": "transport.metronomeVolume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#metronomeVolume().setIsSubscribed(boolean)"
  }, {
    "method": "transport.setPosition",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#setPosition(double)"
  }, {
    "method": "transport.timeSignature.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#timeSignature().get()"
  }, {
    "method": "transport.timeSignature.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Transport#timeSignature().set(java.lang.String)"
  }, {
    "method": "transport.timeSignature.ticks",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue Transport#timeSignature().ticks()"
  }, {
    "method": "transport.timeSignature.ticks.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#timeSignature().ticks().set(int)"
  }, {
    "method": "transport.timeSignature.ticks.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#timeSignature().ticks().inc(int)"
  }, {
    "method": "transport.timeSignature.ticks.get",
    "params": [],
    "result": "number",
    "expression": "int Transport#timeSignature().ticks().get()"
  }, {
    "method": "transport.timeSignature.ticks.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Transport#timeSignature().ticks().getAsInt()"
  }, {
    "method": "transport.timeSignature.ticks.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#timeSignature().ticks().isSubscribed()"
  }, {
    "method": "transport.timeSignature.ticks.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().ticks().subscribe()"
  }, {
    "method": "transport.timeSignature.ticks.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().ticks().unsubscribe()"
  }, {
    "method": "transport.timeSignature.ticks.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#timeSignature().ticks().setIsSubscribed(boolean)"
  }, {
    "method": "transport.timeSignature.denominator",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue Transport#timeSignature().denominator()"
  }, {
    "method": "transport.timeSignature.denominator.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#timeSignature().denominator().set(int)"
  }, {
    "method": "transport.timeSignature.denominator.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#timeSignature().denominator().inc(int)"
  }, {
    "method": "transport.timeSignature.denominator.get",
    "params": [],
    "result": "number",
    "expression": "int Transport#timeSignature().denominator().get()"
  }, {
    "method": "transport.timeSignature.denominator.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Transport#timeSignature().denominator().getAsInt()"
  }, {
    "method": "transport.timeSignature.denominator.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#timeSignature().denominator().isSubscribed()"
  }, {
    "method": "transport.timeSignature.denominator.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().denominator().subscribe()"
  }, {
    "method": "transport.timeSignature.denominator.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().denominator().unsubscribe()"
  }, {
    "method": "transport.timeSignature.denominator.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#timeSignature().denominator().setIsSubscribed(boolean)"
  }, {
    "method": "transport.timeSignature.numerator",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue Transport#timeSignature().numerator()"
  }, {
    "method": "transport.timeSignature.numerator.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#timeSignature().numerator().set(int)"
  }, {
    "method": "transport.timeSignature.numerator.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#timeSignature().numerator().inc(int)"
  }, {
    "method": "transport.timeSignature.numerator.get",
    "params": [],
    "result": "number",
    "expression": "int Transport#timeSignature().numerator().get()"
  }, {
    "method": "transport.timeSignature.numerator.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Transport#timeSignature().numerator().getAsInt()"
  }, {
    "method": "transport.timeSignature.numerator.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#timeSignature().numerator().isSubscribed()"
  }, {
    "method": "transport.timeSignature.numerator.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().numerator().subscribe()"
  }, {
    "method": "transport.timeSignature.numerator.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().numerator().unsubscribe()"
  }, {
    "method": "transport.timeSignature.numerator.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#timeSignature().numerator().setIsSubscribed(boolean)"
  }, {
    "method": "transport.timeSignature.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#timeSignature().isSubscribed()"
  }, {
    "method": "transport.timeSignature.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().subscribe()"
  }, {
    "method": "transport.timeSignature.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#timeSignature().unsubscribe()"
  }, {
    "method": "transport.timeSignature.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#timeSignature().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo",
    "params": [],
    "result": "object",
    "expression": "Parameter Transport#tempo()"
  }, {
    "method": "transport.tempo.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#tempo().name()"
  }, {
    "method": "transport.tempo.name.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#tempo().name().get()"
  }, {
    "method": "transport.tempo.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#tempo().name().getLimited(int)"
  }, {
    "method": "transport.tempo.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().name().isSubscribed()"
  }, {
    "method": "transport.tempo.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().name().subscribe()"
  }, {
    "method": "transport.tempo.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().name().unsubscribe()"
  }, {
    "method": "transport.tempo.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().name().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Transport#tempo().value()"
  }, {
    "method": "transport.tempo.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#tempo().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.tempo.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().value().set(double)"
  }, {
    "method": "transport.tempo.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#tempo().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.tempo.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().value().inc(double)"
  }, {
    "method": "transport.tempo.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().value().setRaw(double)"
  }, {
    "method": "transport.tempo.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().value().setImmediately(double)"
  }, {
    "method": "transport.tempo.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().value().incRaw(double)"
  }, {
    "method": "transport.tempo.value.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().value().get()"
  }, {
    "method": "transport.tempo.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().value().getRaw()"
  }, {
    "method": "transport.tempo.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().value().getAsDouble()"
  }, {
    "method": "transport.tempo.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#tempo().value().displayedValue()"
  }, {
    "method": "transport.tempo.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#tempo().value().displayedValue().get()"
  }, {
    "method": "transport.tempo.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#tempo().value().displayedValue().getLimited(int)"
  }, {
    "method": "transport.tempo.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().value().displayedValue().isSubscribed()"
  }, {
    "method": "transport.tempo.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().value().displayedValue().subscribe()"
  }, {
    "method": "transport.tempo.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().value().displayedValue().unsubscribe()"
  }, {
    "method": "transport.tempo.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().value().isSubscribed()"
  }, {
    "method": "transport.tempo.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().value().subscribe()"
  }, {
    "method": "transport.tempo.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().value().unsubscribe()"
  }, {
    "method": "transport.tempo.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().value().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo.reset",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().reset()"
  }, {
    "method": "transport.tempo.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().touch(boolean)"
  }, {
    "method": "transport.tempo.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().restoreAutomationControl()"
  }, {
    "method": "transport.tempo.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Transport#tempo().modulatedValue()"
  }, {
    "method": "transport.tempo.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().modulatedValue().get()"
  }, {
    "method": "transport.tempo.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().modulatedValue().getRaw()"
  }, {
    "method": "transport.tempo.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().modulatedValue().getAsDouble()"
  }, {
    "method": "transport.tempo.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#tempo().modulatedValue().displayedValue()"
  }, {
    "method": "transport.tempo.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#tempo().modulatedValue().displayedValue().get()"
  }, {
    "method": "transport.tempo.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#tempo().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "transport.tempo.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "transport.tempo.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "transport.tempo.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "transport.tempo.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().modulatedValue().isSubscribed()"
  }, {
    "method": "transport.tempo.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().modulatedValue().subscribe()"
  }, {
    "method": "transport.tempo.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().modulatedValue().unsubscribe()"
  }, {
    "method": "transport.tempo.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().setIndication(boolean)"
  }, {
    "method": "transport.tempo.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Transport#tempo().exists()"
  }, {
    "method": "transport.tempo.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().exists().get()"
  }, {
    "method": "transport.tempo.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().exists().getAsBoolean()"
  }, {
    "method": "transport.tempo.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().exists().isSubscribed()"
  }, {
    "method": "transport.tempo.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().exists().subscribe()"
  }, {
    "method": "transport.tempo.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().exists().unsubscribe()"
  }, {
    "method": "transport.tempo.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().exists().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().isSubscribed()"
  }, {
    "method": "transport.tempo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().subscribe()"
  }, {
    "method": "transport.tempo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().unsubscribe()"
  }, {
    "method": "transport.tempo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().setIsSubscribed(boolean)"
  }, {
    "method": "transport.tempo.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#tempo().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.tempo.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().set(double)"
  }, {
    "method": "transport.tempo.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#tempo().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.tempo.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().inc(double)"
  }, {
    "method": "transport.tempo.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().setRaw(double)"
  }, {
    "method": "transport.tempo.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().setImmediately(double)"
  }, {
    "method": "transport.tempo.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#tempo().incRaw(double)"
  }, {
    "method": "transport.tempo.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().get()"
  }, {
    "method": "transport.tempo.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().getRaw()"
  }, {
    "method": "transport.tempo.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#tempo().getAsDouble()"
  }, {
    "method": "transport.tempo.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#tempo().displayedValue()"
  }, {
    "method": "transport.tempo.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#tempo().displayedValue().get()"
  }, {
    "method": "transport.tempo.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#tempo().displayedValue().getLimited(int)"
  }, {
    "method": "transport.tempo.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#tempo().displayedValue().isSubscribed()"
  }, {
    "method": "transport.tempo.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().displayedValue().subscribe()"
  }, {
    "method": "transport.tempo.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#tempo().displayedValue().unsubscribe()"
  }, {
    "method": "transport.tempo.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#tempo().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade",
    "params": [],
    "result": "object",
    "expression": "Parameter Transport#crossfade()"
  }, {
    "method": "transport.crossfade.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#crossfade().name()"
  }, {
    "method": "transport.crossfade.name.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#crossfade().name().get()"
  }, {
    "method": "transport.crossfade.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#crossfade().name().getLimited(int)"
  }, {
    "method": "transport.crossfade.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().name().isSubscribed()"
  }, {
    "method": "transport.crossfade.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().name().subscribe()"
  }, {
    "method": "transport.crossfade.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().name().unsubscribe()"
  }, {
    "method": "transport.crossfade.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().name().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Transport#crossfade().value()"
  }, {
    "method": "transport.crossfade.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#crossfade().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.crossfade.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().value().set(double)"
  }, {
    "method": "transport.crossfade.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#crossfade().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.crossfade.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().value().inc(double)"
  }, {
    "method": "transport.crossfade.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().value().setRaw(double)"
  }, {
    "method": "transport.crossfade.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().value().setImmediately(double)"
  }, {
    "method": "transport.crossfade.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().value().incRaw(double)"
  }, {
    "method": "transport.crossfade.value.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().value().get()"
  }, {
    "method": "transport.crossfade.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().value().getRaw()"
  }, {
    "method": "transport.crossfade.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().value().getAsDouble()"
  }, {
    "method": "transport.crossfade.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#crossfade().value().displayedValue()"
  }, {
    "method": "transport.crossfade.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#crossfade().value().displayedValue().get()"
  }, {
    "method": "transport.crossfade.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#crossfade().value().displayedValue().getLimited(int)"
  }, {
    "method": "transport.crossfade.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().value().displayedValue().isSubscribed()"
  }, {
    "method": "transport.crossfade.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().value().displayedValue().subscribe()"
  }, {
    "method": "transport.crossfade.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().value().displayedValue().unsubscribe()"
  }, {
    "method": "transport.crossfade.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().value().isSubscribed()"
  }, {
    "method": "transport.crossfade.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().value().subscribe()"
  }, {
    "method": "transport.crossfade.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().value().unsubscribe()"
  }, {
    "method": "transport.crossfade.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().value().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade.reset",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().reset()"
  }, {
    "method": "transport.crossfade.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().touch(boolean)"
  }, {
    "method": "transport.crossfade.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().restoreAutomationControl()"
  }, {
    "method": "transport.crossfade.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Transport#crossfade().modulatedValue()"
  }, {
    "method": "transport.crossfade.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().modulatedValue().get()"
  }, {
    "method": "transport.crossfade.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().modulatedValue().getRaw()"
  }, {
    "method": "transport.crossfade.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().modulatedValue().getAsDouble()"
  }, {
    "method": "transport.crossfade.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#crossfade().modulatedValue().displayedValue()"
  }, {
    "method": "transport.crossfade.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#crossfade().modulatedValue().displayedValue().get()"
  }, {
    "method": "transport.crossfade.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#crossfade().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "transport.crossfade.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "transport.crossfade.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "transport.crossfade.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "transport.crossfade.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().modulatedValue().isSubscribed()"
  }, {
    "method": "transport.crossfade.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().modulatedValue().subscribe()"
  }, {
    "method": "transport.crossfade.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().modulatedValue().unsubscribe()"
  }, {
    "method": "transport.crossfade.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().setIndication(boolean)"
  }, {
    "method": "transport.crossfade.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Transport#crossfade().exists()"
  }, {
    "method": "transport.crossfade.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().exists().get()"
  }, {
    "method": "transport.crossfade.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().exists().getAsBoolean()"
  }, {
    "method": "transport.crossfade.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().exists().isSubscribed()"
  }, {
    "method": "transport.crossfade.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().exists().subscribe()"
  }, {
    "method": "transport.crossfade.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().exists().unsubscribe()"
  }, {
    "method": "transport.crossfade.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().exists().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().isSubscribed()"
  }, {
    "method": "transport.crossfade.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().subscribe()"
  }, {
    "method": "transport.crossfade.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().unsubscribe()"
  }, {
    "method": "transport.crossfade.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().setIsSubscribed(boolean)"
  }, {
    "method": "transport.crossfade.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#crossfade().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.crossfade.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().set(double)"
  }, {
    "method": "transport.crossfade.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#crossfade().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.crossfade.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().inc(double)"
  }, {
    "method": "transport.crossfade.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().setRaw(double)"
  }, {
    "method": "transport.crossfade.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().setImmediately(double)"
  }, {
    "method": "transport.crossfade.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#crossfade().incRaw(double)"
  }, {
    "method": "transport.crossfade.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().get()"
  }, {
    "method": "transport.crossfade.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().getRaw()"
  }, {
    "method": "transport.crossfade.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#crossfade().getAsDouble()"
  }, {
    "method": "transport.crossfade.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Transport#crossfade().displayedValue()"
  }, {
    "method": "transport.crossfade.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#crossfade().displayedValue().get()"
  }, {
    "method": "transport.crossfade.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Transport#crossfade().displayedValue().getLimited(int)"
  }, {
    "method": "transport.crossfade.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#crossfade().displayedValue().isSubscribed()"
  }, {
    "method": "transport.crossfade.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().displayedValue().subscribe()"
  }, {
    "method": "transport.crossfade.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#crossfade().displayedValue().unsubscribe()"
  }, {
    "method": "transport.crossfade.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#crossfade().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "transport.play",
    "params": [],
    "result": "void",
    "expression": "void Transport#play()"
  }, {
    "method": "transport.record",
    "params": [],
    "result": "void",
    "expression": "void Transport#record()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isClipLauncherAutomationWriteEnabled()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isClipLauncherAutomationWriteEnabled().set(boolean)"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherAutomationWriteEnabled().toggle()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isClipLauncherAutomationWriteEnabled().get()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isClipLauncherAutomationWriteEnabled().getAsBoolean()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isClipLauncherAutomationWriteEnabled().isSubscribed()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherAutomationWriteEnabled().subscribe()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherAutomationWriteEnabled().unsubscribe()"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isClipLauncherAutomationWriteEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isClipLauncherAutomationWriteEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherAutomationWriteEnabled().invoke()"
  }, {
    "method": "transport.restart",
    "params": [],
    "result": "void",
    "expression": "void Transport#restart()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isClipLauncherOverdubEnabled()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isClipLauncherOverdubEnabled().set(boolean)"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherOverdubEnabled().toggle()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isClipLauncherOverdubEnabled().get()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isClipLauncherOverdubEnabled().getAsBoolean()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isClipLauncherOverdubEnabled().isSubscribed()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherOverdubEnabled().subscribe()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherOverdubEnabled().unsubscribe()"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isClipLauncherOverdubEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isClipLauncherOverdubEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isClipLauncherOverdubEnabled().invoke()"
  }, {
    "method": "transport.defaultLaunchQuantization",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Transport#defaultLaunchQuantization()"
  }, {
    "method": "transport.defaultLaunchQuantization.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Transport#defaultLaunchQuantization().set(java.lang.String)"
  }, {
    "method": "transport.defaultLaunchQuantization.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#defaultLaunchQuantization().get()"
  }, {
    "method": "transport.defaultLaunchQuantization.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#defaultLaunchQuantization().isSubscribed()"
  }, {
    "method": "transport.defaultLaunchQuantization.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#defaultLaunchQuantization().subscribe()"
  }, {
    "method": "transport.defaultLaunchQuantization.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#defaultLaunchQuantization().unsubscribe()"
  }, {
    "method": "transport.defaultLaunchQuantization.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#defaultLaunchQuantization().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isArrangerRecordEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isArrangerRecordEnabled()"
  }, {
    "method": "transport.isArrangerRecordEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerRecordEnabled().set(boolean)"
  }, {
    "method": "transport.isArrangerRecordEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerRecordEnabled().toggle()"
  }, {
    "method": "transport.isArrangerRecordEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerRecordEnabled().get()"
  }, {
    "method": "transport.isArrangerRecordEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerRecordEnabled().getAsBoolean()"
  }, {
    "method": "transport.isArrangerRecordEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerRecordEnabled().isSubscribed()"
  }, {
    "method": "transport.isArrangerRecordEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerRecordEnabled().subscribe()"
  }, {
    "method": "transport.isArrangerRecordEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerRecordEnabled().unsubscribe()"
  }, {
    "method": "transport.isArrangerRecordEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerRecordEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isArrangerRecordEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerRecordEnabled().invoke()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isArrangerAutomationWriteEnabled()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerAutomationWriteEnabled().set(boolean)"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerAutomationWriteEnabled().toggle()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerAutomationWriteEnabled().get()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerAutomationWriteEnabled().getAsBoolean()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerAutomationWriteEnabled().isSubscribed()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerAutomationWriteEnabled().subscribe()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerAutomationWriteEnabled().unsubscribe()"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerAutomationWriteEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isArrangerAutomationWriteEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerAutomationWriteEnabled().invoke()"
  }, {
    "method": "transport.returnToArrangement",
    "params": [],
    "result": "void",
    "expression": "void Transport#returnToArrangement()"
  }, {
    "method": "transport.isArrangerOverdubEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isArrangerOverdubEnabled()"
  }, {
    "method": "transport.isArrangerOverdubEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerOverdubEnabled().set(boolean)"
  }, {
    "method": "transport.isArrangerOverdubEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerOverdubEnabled().toggle()"
  }, {
    "method": "transport.isArrangerOverdubEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerOverdubEnabled().get()"
  }, {
    "method": "transport.isArrangerOverdubEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerOverdubEnabled().getAsBoolean()"
  }, {
    "method": "transport.isArrangerOverdubEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerOverdubEnabled().isSubscribed()"
  }, {
    "method": "transport.isArrangerOverdubEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerOverdubEnabled().subscribe()"
  }, {
    "method": "transport.isArrangerOverdubEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerOverdubEnabled().unsubscribe()"
  }, {
    "method": "transport.isArrangerOverdubEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerOverdubEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isArrangerOverdubEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerOverdubEnabled().invoke()"
  }, {
    "method": "transport.clipLauncherPostRecordingAction",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Transport#clipLauncherPostRecordingAction()"
  }, {
    "method": "transport.clipLauncherPostRecordingAction.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Transport#clipLauncherPostRecordingAction().set(java.lang.String)"
  }, {
    "method": "transport.clipLauncherPostRecordingAction.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#clipLauncherPostRecordingAction().get()"
  }, {
    "method": "transport.clipLauncherPostRecordingAction.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#clipLauncherPostRecordingAction().isSubscribed()"
  }, {
    "method": "transport.clipLauncherPostRecordingAction.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#clipLauncherPostRecordingAction().subscribe()"
  }, {
    "method": "transport.clipLauncherPostRecordingAction.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#clipLauncherPostRecordingAction().unsubscribe()"
  }, {
    "method": "transport.clipLauncherPostRecordingAction.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#clipLauncherPostRecordingAction().setIsSubscribed(boolean)"
  }, {
    "method": "transport.toggleWriteClipLauncherAutomation",
    "params": [],
    "result": "void",
    "expression": "void Transport#toggleWriteClipLauncherAutomation()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isMetronomeAudibleDuringPreRoll()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isMetronomeAudibleDuringPreRoll().set(boolean)"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeAudibleDuringPreRoll().toggle()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeAudibleDuringPreRoll().get()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeAudibleDuringPreRoll().getAsBoolean()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeAudibleDuringPreRoll().isSubscribed()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeAudibleDuringPreRoll().subscribe()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeAudibleDuringPreRoll().unsubscribe()"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isMetronomeAudibleDuringPreRoll().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isMetronomeAudibleDuringPreRoll.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeAudibleDuringPreRoll().invoke()"
  }, {
    "method": "transport.toggleWriteArrangerAutomation",
    "params": [],
    "result": "void",
    "expression": "void Transport#toggleWriteArrangerAutomation()"
  }, {
    "method": "transport.toggleLatchAutomationWriteMode",
    "params": [],
    "result": "void",
    "expression": "void Transport#toggleLatchAutomationWriteMode()"
  }, {
    "method": "transport.resetAutomationOverrides",
    "params": [],
    "result": "void",
    "expression": "void Transport#resetAutomationOverrides()"
  }, {
    "method": "transport.isAutomationOverrideActive",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Transport#isAutomationOverrideActive()"
  }, {
    "method": "transport.isAutomationOverrideActive.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isAutomationOverrideActive().get()"
  }, {
    "method": "transport.isAutomationOverrideActive.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isAutomationOverrideActive().getAsBoolean()"
  }, {
    "method": "transport.isAutomationOverrideActive.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isAutomationOverrideActive().isSubscribed()"
  }, {
    "method": "transport.isAutomationOverrideActive.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isAutomationOverrideActive().subscribe()"
  }, {
    "method": "transport.isAutomationOverrideActive.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isAutomationOverrideActive().unsubscribe()"
  }, {
    "method": "transport.isAutomationOverrideActive.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isAutomationOverrideActive().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isMetronomeTickPlaybackEnabled()"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isMetronomeTickPlaybackEnabled().set(boolean)"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeTickPlaybackEnabled().toggle()"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeTickPlaybackEnabled().get()"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeTickPlaybackEnabled().getAsBoolean()"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeTickPlaybackEnabled().isSubscribed()"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeTickPlaybackEnabled().subscribe()"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeTickPlaybackEnabled().unsubscribe()"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isMetronomeTickPlaybackEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isMetronomeTickPlaybackEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeTickPlaybackEnabled().invoke()"
  }, {
    "method": "transport.getPosition",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Transport#getPosition()"
  }, {
    "method": "transport.getPosition.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Transport#getPosition().getFormatted()"
  }, {
    "method": "transport.getPosition.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#getPosition().get()"
  }, {
    "method": "transport.getPosition.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#getPosition().getAsDouble()"
  }, {
    "method": "transport.getPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#getPosition().isSubscribed()"
  }, {
    "method": "transport.getPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getPosition().subscribe()"
  }, {
    "method": "transport.getPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getPosition().unsubscribe()"
  }, {
    "method": "transport.getPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#getPosition().setIsSubscribed(boolean)"
  }, {
    "method": "transport.getPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getPosition().set(double)"
  }, {
    "method": "transport.getPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getPosition().inc(double)"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Transport#getClipLauncherPostRecordingTimeOffset()"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Transport#getClipLauncherPostRecordingTimeOffset().getFormatted()"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#getClipLauncherPostRecordingTimeOffset().get()"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#getClipLauncherPostRecordingTimeOffset().getAsDouble()"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#getClipLauncherPostRecordingTimeOffset().isSubscribed()"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getClipLauncherPostRecordingTimeOffset().subscribe()"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getClipLauncherPostRecordingTimeOffset().unsubscribe()"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#getClipLauncherPostRecordingTimeOffset().setIsSubscribed(boolean)"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getClipLauncherPostRecordingTimeOffset().set(double)"
  }, {
    "method": "transport.getClipLauncherPostRecordingTimeOffset.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getClipLauncherPostRecordingTimeOffset().inc(double)"
  }, {
    "method": "transport.isArrangerLoopEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isArrangerLoopEnabled()"
  }, {
    "method": "transport.isArrangerLoopEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerLoopEnabled().set(boolean)"
  }, {
    "method": "transport.isArrangerLoopEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerLoopEnabled().toggle()"
  }, {
    "method": "transport.isArrangerLoopEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerLoopEnabled().get()"
  }, {
    "method": "transport.isArrangerLoopEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerLoopEnabled().getAsBoolean()"
  }, {
    "method": "transport.isArrangerLoopEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isArrangerLoopEnabled().isSubscribed()"
  }, {
    "method": "transport.isArrangerLoopEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerLoopEnabled().subscribe()"
  }, {
    "method": "transport.isArrangerLoopEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerLoopEnabled().unsubscribe()"
  }, {
    "method": "transport.isArrangerLoopEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isArrangerLoopEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isArrangerLoopEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isArrangerLoopEnabled().invoke()"
  }, {
    "method": "transport.togglePlay",
    "params": [],
    "result": "void",
    "expression": "void Transport#togglePlay()"
  }, {
    "method": "transport.getOutPosition",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Transport#getOutPosition()"
  }, {
    "method": "transport.getOutPosition.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Transport#getOutPosition().getFormatted()"
  }, {
    "method": "transport.getOutPosition.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#getOutPosition().get()"
  }, {
    "method": "transport.getOutPosition.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#getOutPosition().getAsDouble()"
  }, {
    "method": "transport.getOutPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#getOutPosition().isSubscribed()"
  }, {
    "method": "transport.getOutPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getOutPosition().subscribe()"
  }, {
    "method": "transport.getOutPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getOutPosition().unsubscribe()"
  }, {
    "method": "transport.getOutPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#getOutPosition().setIsSubscribed(boolean)"
  }, {
    "method": "transport.getOutPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getOutPosition().set(double)"
  }, {
    "method": "transport.getOutPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getOutPosition().inc(double)"
  }, {
    "method": "transport.increaseTempo",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Transport#increaseTempo(java.lang.Number, java.lang.Number)"
  }, {
    "method": "transport.getInPosition",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Transport#getInPosition()"
  }, {
    "method": "transport.getInPosition.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Transport#getInPosition().getFormatted()"
  }, {
    "method": "transport.getInPosition.get",
    "params": [],
    "result": "number",
    "expression": "double Transport#getInPosition().get()"
  }, {
    "method": "transport.getInPosition.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Transport#getInPosition().getAsDouble()"
  }, {
    "method": "transport.getInPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#getInPosition().isSubscribed()"
  }, {
    "method": "transport.getInPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getInPosition().subscribe()"
  }, {
    "method": "transport.getInPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#getInPosition().unsubscribe()"
  }, {
    "method": "transport.getInPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#getInPosition().setIsSubscribed(boolean)"
  }, {
    "method": "transport.getInPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getInPosition().set(double)"
  }, {
    "method": "transport.getInPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Transport#getInPosition().inc(double)"
  }, {
    "method": "transport.incPosition",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void Transport#incPosition(double, boolean)"
  }, {
    "method": "transport.isPunchInEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isPunchInEnabled()"
  }, {
    "method": "transport.isPunchInEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isPunchInEnabled().set(boolean)"
  }, {
    "method": "transport.isPunchInEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchInEnabled().toggle()"
  }, {
    "method": "transport.isPunchInEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPunchInEnabled().get()"
  }, {
    "method": "transport.isPunchInEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPunchInEnabled().getAsBoolean()"
  }, {
    "method": "transport.isPunchInEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPunchInEnabled().isSubscribed()"
  }, {
    "method": "transport.isPunchInEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchInEnabled().subscribe()"
  }, {
    "method": "transport.isPunchInEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchInEnabled().unsubscribe()"
  }, {
    "method": "transport.isPunchInEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isPunchInEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isPunchInEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchInEnabled().invoke()"
  }, {
    "method": "transport.isPunchOutEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isPunchOutEnabled()"
  }, {
    "method": "transport.isPunchOutEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isPunchOutEnabled().set(boolean)"
  }, {
    "method": "transport.isPunchOutEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchOutEnabled().toggle()"
  }, {
    "method": "transport.isPunchOutEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPunchOutEnabled().get()"
  }, {
    "method": "transport.isPunchOutEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPunchOutEnabled().getAsBoolean()"
  }, {
    "method": "transport.isPunchOutEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPunchOutEnabled().isSubscribed()"
  }, {
    "method": "transport.isPunchOutEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchOutEnabled().subscribe()"
  }, {
    "method": "transport.isPunchOutEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchOutEnabled().unsubscribe()"
  }, {
    "method": "transport.isPunchOutEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isPunchOutEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isPunchOutEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPunchOutEnabled().invoke()"
  }, {
    "method": "transport.tapTempo",
    "params": [],
    "result": "void",
    "expression": "void Transport#tapTempo()"
  }, {
    "method": "transport.automationWriteMode",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Transport#automationWriteMode()"
  }, {
    "method": "transport.automationWriteMode.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Transport#automationWriteMode().set(java.lang.String)"
  }, {
    "method": "transport.automationWriteMode.get",
    "params": [],
    "result": "string",
    "expression": "String Transport#automationWriteMode().get()"
  }, {
    "method": "transport.automationWriteMode.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#automationWriteMode().isSubscribed()"
  }, {
    "method": "transport.automationWriteMode.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#automationWriteMode().subscribe()"
  }, {
    "method": "transport.automationWriteMode.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#automationWriteMode().unsubscribe()"
  }, {
    "method": "transport.automationWriteMode.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#automationWriteMode().setIsSubscribed(boolean)"
  }, {
    "method": "transport.fastForward",
    "params": [],
    "result": "void",
    "expression": "void Transport#fastForward()"
  }, {
    "method": "transport.isPlaying",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isPlaying()"
  }, {
    "method": "transport.isPlaying.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isPlaying().set(boolean)"
  }, {
    "method": "transport.isPlaying.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPlaying().toggle()"
  }, {
    "method": "transport.isPlaying.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPlaying().get()"
  }, {
    "method": "transport.isPlaying.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPlaying().getAsBoolean()"
  }, {
    "method": "transport.isPlaying.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isPlaying().isSubscribed()"
  }, {
    "method": "transport.isPlaying.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPlaying().subscribe()"
  }, {
    "method": "transport.isPlaying.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPlaying().unsubscribe()"
  }, {
    "method": "transport.isPlaying.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isPlaying().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isPlaying.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isPlaying().invoke()"
  }, {
    "method": "transport.isMetronomeEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Transport#isMetronomeEnabled()"
  }, {
    "method": "transport.isMetronomeEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isMetronomeEnabled().set(boolean)"
  }, {
    "method": "transport.isMetronomeEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeEnabled().toggle()"
  }, {
    "method": "transport.isMetronomeEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeEnabled().get()"
  }, {
    "method": "transport.isMetronomeEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeEnabled().getAsBoolean()"
  }, {
    "method": "transport.isMetronomeEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isMetronomeEnabled().isSubscribed()"
  }, {
    "method": "transport.isMetronomeEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeEnabled().subscribe()"
  }, {
    "method": "transport.isMetronomeEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeEnabled().unsubscribe()"
  }, {
    "method": "transport.isMetronomeEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#isMetronomeEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isMetronomeEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Transport#isMetronomeEnabled().invoke()"
  }, {
    "method": "transport.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Transport#exists()"
  }, {
    "method": "transport.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#exists().get()"
  }, {
    "method": "transport.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#exists().getAsBoolean()"
  }, {
    "method": "transport.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#exists().isSubscribed()"
  }, {
    "method": "transport.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#exists().subscribe()"
  }, {
    "method": "transport.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#exists().unsubscribe()"
  }, {
    "method": "transport.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#exists().setIsSubscribed(boolean)"
  }, {
    "method": "transport.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Transport#isSubscribed()"
  }, {
    "method": "transport.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#subscribe()"
  }, {
    "method": "transport.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Transport#unsubscribe()"
  }, {
    "method": "transport.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Transport#setIsSubscribed(boolean)"
  }, {
    "method": "arranger.isTimelineVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Arranger#isTimelineVisible()"
  }, {
    "method": "arranger.isTimelineVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isTimelineVisible().set(boolean)"
  }, {
    "method": "arranger.isTimelineVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isTimelineVisible().toggle()"
  }, {
    "method": "arranger.isTimelineVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isTimelineVisible().get()"
  }, {
    "method": "arranger.isTimelineVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isTimelineVisible().getAsBoolean()"
  }, {
    "method": "arranger.isTimelineVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isTimelineVisible().isSubscribed()"
  }, {
    "method": "arranger.isTimelineVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isTimelineVisible().subscribe()"
  }, {
    "method": "arranger.isTimelineVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isTimelineVisible().unsubscribe()"
  }, {
    "method": "arranger.isTimelineVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isTimelineVisible().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.isTimelineVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isTimelineVisible().invoke()"
  }, {
    "method": "arranger.isIoSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Arranger#isIoSectionVisible()"
  }, {
    "method": "arranger.isIoSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isIoSectionVisible().set(boolean)"
  }, {
    "method": "arranger.isIoSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isIoSectionVisible().toggle()"
  }, {
    "method": "arranger.isIoSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isIoSectionVisible().get()"
  }, {
    "method": "arranger.isIoSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isIoSectionVisible().getAsBoolean()"
  }, {
    "method": "arranger.isIoSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isIoSectionVisible().isSubscribed()"
  }, {
    "method": "arranger.isIoSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isIoSectionVisible().subscribe()"
  }, {
    "method": "arranger.isIoSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isIoSectionVisible().unsubscribe()"
  }, {
    "method": "arranger.isIoSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isIoSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.isIoSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isIoSectionVisible().invoke()"
  }, {
    "method": "arranger.areCueMarkersVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Arranger#areCueMarkersVisible()"
  }, {
    "method": "arranger.areCueMarkersVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#areCueMarkersVisible().set(boolean)"
  }, {
    "method": "arranger.areCueMarkersVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areCueMarkersVisible().toggle()"
  }, {
    "method": "arranger.areCueMarkersVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#areCueMarkersVisible().get()"
  }, {
    "method": "arranger.areCueMarkersVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#areCueMarkersVisible().getAsBoolean()"
  }, {
    "method": "arranger.areCueMarkersVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#areCueMarkersVisible().isSubscribed()"
  }, {
    "method": "arranger.areCueMarkersVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areCueMarkersVisible().subscribe()"
  }, {
    "method": "arranger.areCueMarkersVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areCueMarkersVisible().unsubscribe()"
  }, {
    "method": "arranger.areCueMarkersVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#areCueMarkersVisible().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.areCueMarkersVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areCueMarkersVisible().invoke()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Arranger#isPlaybackFollowEnabled()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isPlaybackFollowEnabled().set(boolean)"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isPlaybackFollowEnabled().toggle()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isPlaybackFollowEnabled().get()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isPlaybackFollowEnabled().getAsBoolean()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isPlaybackFollowEnabled().isSubscribed()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isPlaybackFollowEnabled().subscribe()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isPlaybackFollowEnabled().unsubscribe()"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isPlaybackFollowEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.isPlaybackFollowEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isPlaybackFollowEnabled().invoke()"
  }, {
    "method": "arranger.areEffectTracksVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Arranger#areEffectTracksVisible()"
  }, {
    "method": "arranger.areEffectTracksVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#areEffectTracksVisible().set(boolean)"
  }, {
    "method": "arranger.areEffectTracksVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areEffectTracksVisible().toggle()"
  }, {
    "method": "arranger.areEffectTracksVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#areEffectTracksVisible().get()"
  }, {
    "method": "arranger.areEffectTracksVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#areEffectTracksVisible().getAsBoolean()"
  }, {
    "method": "arranger.areEffectTracksVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#areEffectTracksVisible().isSubscribed()"
  }, {
    "method": "arranger.areEffectTracksVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areEffectTracksVisible().subscribe()"
  }, {
    "method": "arranger.areEffectTracksVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areEffectTracksVisible().unsubscribe()"
  }, {
    "method": "arranger.areEffectTracksVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#areEffectTracksVisible().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.areEffectTracksVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Arranger#areEffectTracksVisible().invoke()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Arranger#hasDoubleRowTrackHeight()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#hasDoubleRowTrackHeight().set(boolean)"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.toggle",
    "params": [],
    "result": "void",
    "expression": "void Arranger#hasDoubleRowTrackHeight().toggle()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#hasDoubleRowTrackHeight().get()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#hasDoubleRowTrackHeight().getAsBoolean()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#hasDoubleRowTrackHeight().isSubscribed()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#hasDoubleRowTrackHeight().subscribe()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#hasDoubleRowTrackHeight().unsubscribe()"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#hasDoubleRowTrackHeight().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.hasDoubleRowTrackHeight.invoke",
    "params": [],
    "result": "void",
    "expression": "void Arranger#hasDoubleRowTrackHeight().invoke()"
  }, {
    "method": "arranger.isClipLauncherVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Arranger#isClipLauncherVisible()"
  }, {
    "method": "arranger.isClipLauncherVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isClipLauncherVisible().set(boolean)"
  }, {
    "method": "arranger.isClipLauncherVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isClipLauncherVisible().toggle()"
  }, {
    "method": "arranger.isClipLauncherVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isClipLauncherVisible().get()"
  }, {
    "method": "arranger.isClipLauncherVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isClipLauncherVisible().getAsBoolean()"
  }, {
    "method": "arranger.isClipLauncherVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Arranger#isClipLauncherVisible().isSubscribed()"
  }, {
    "method": "arranger.isClipLauncherVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isClipLauncherVisible().subscribe()"
  }, {
    "method": "arranger.isClipLauncherVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isClipLauncherVisible().unsubscribe()"
  }, {
    "method": "arranger.isClipLauncherVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Arranger#isClipLauncherVisible().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.isClipLauncherVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Arranger#isClipLauncherVisible().invoke()"
  }, {
    "method": "arranger.cueMarkerBank.scrollToMarker",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#scrollToMarker(int)"
  }, {
    "method": "arranger.cueMarkerBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#getSizeOfBank()"
  }, {
    "method": "arranger.cueMarkerBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#getCapacityOfBank()"
  }, {
    "method": "arranger.cueMarkerBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#scrollPageBackwards()"
  }, {
    "method": "arranger.cueMarkerBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#setSizeOfBank(int)"
  }, {
    "method": "arranger.cueMarkerBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue CueMarkerBank#itemCount()"
  }, {
    "method": "arranger.cueMarkerBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#itemCount().get()"
  }, {
    "method": "arranger.cueMarkerBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#itemCount().getAsInt()"
  }, {
    "method": "arranger.cueMarkerBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#itemCount().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#itemCount().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#itemCount().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getName",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue CueMarkerBank#getItemAt(int).getName()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getName.get",
    "params": ["number"],
    "result": "string",
    "expression": "String CueMarkerBank#getItemAt(int).getName().get()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getName.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String CueMarkerBank#getItemAt(int).getName().getLimited(int)"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getName.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#getItemAt(int).getName().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getName.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).getName().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getName.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).getName().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getName.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).getName().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor",
    "params": ["number"],
    "result": "object",
    "expression": "ColorValue CueMarkerBank#getItemAt(int).getColor()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.red",
    "params": ["number"],
    "result": "number",
    "expression": "float CueMarkerBank#getItemAt(int).getColor().red()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float CueMarkerBank#getItemAt(int).getColor().alpha()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.green",
    "params": ["number"],
    "result": "number",
    "expression": "float CueMarkerBank#getItemAt(int).getColor().green()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float CueMarkerBank#getItemAt(int).getColor().blue()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#getItemAt(int).getColor().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).getColor().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).getColor().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.getColor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).getColor().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.launch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).launch(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue CueMarkerBank#getItemAt(int).exists()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#getItemAt(int).exists().get()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue CueMarkerBank#cursorIndex()"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#cursorIndex().set(int)"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#cursorIndex().inc(int)"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#cursorIndex().get()"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#cursorIndex().getAsInt()"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#cursorIndex().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#cursorIndex().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#cursorIndex().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#scrollPageForwards()"
  }, {
    "method": "arranger.cueMarkerBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CueMarkerBank#exists()"
  }, {
    "method": "arranger.cueMarkerBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#exists().get()"
  }, {
    "method": "arranger.cueMarkerBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#exists().getAsBoolean()"
  }, {
    "method": "arranger.cueMarkerBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#exists().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#exists().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#exists().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#scrollBy(int)"
  }, {
    "method": "arranger.cueMarkerBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#scrollByPages(int)"
  }, {
    "method": "arranger.cueMarkerBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#scrollIntoView(int)"
  }, {
    "method": "arranger.cueMarkerBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CueMarkerBank#canScrollBackwards()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#canScrollBackwards().get()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#canScrollBackwards().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CueMarkerBank#canScrollForwards()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#canScrollForwards().get()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#canScrollForwards().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue CueMarkerBank#scrollPosition()"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#scrollPosition().set(int)"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CueMarkerBank#scrollPosition().inc(int)"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#scrollPosition().get()"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int CueMarkerBank#scrollPosition().getAsInt()"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CueMarkerBank#scrollPosition().isSubscribed()"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#scrollPosition().subscribe()"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#scrollPosition().unsubscribe()"
  }, {
    "method": "arranger.cueMarkerBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CueMarkerBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "arranger.cueMarkerBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#scrollForwards()"
  }, {
    "method": "arranger.cueMarkerBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void CueMarkerBank#scrollBackwards()"
  }, {
    "method": "groove.getEnabled",
    "params": [],
    "result": "object",
    "expression": "Parameter Groove#getEnabled()"
  }, {
    "method": "groove.getEnabled.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getEnabled().name()"
  }, {
    "method": "groove.getEnabled.name.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getEnabled().name().get()"
  }, {
    "method": "groove.getEnabled.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getEnabled().name().getLimited(int)"
  }, {
    "method": "groove.getEnabled.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().name().isSubscribed()"
  }, {
    "method": "groove.getEnabled.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().name().subscribe()"
  }, {
    "method": "groove.getEnabled.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().name().unsubscribe()"
  }, {
    "method": "groove.getEnabled.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().name().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getEnabled.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Groove#getEnabled().value()"
  }, {
    "method": "groove.getEnabled.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getEnabled.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().set(double)"
  }, {
    "method": "groove.getEnabled.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getEnabled.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().inc(double)"
  }, {
    "method": "groove.getEnabled.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().setRaw(double)"
  }, {
    "method": "groove.getEnabled.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().setImmediately(double)"
  }, {
    "method": "groove.getEnabled.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().incRaw(double)"
  }, {
    "method": "groove.getEnabled.value.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().value().get()"
  }, {
    "method": "groove.getEnabled.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().value().getRaw()"
  }, {
    "method": "groove.getEnabled.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().value().getAsDouble()"
  }, {
    "method": "groove.getEnabled.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getEnabled().value().displayedValue()"
  }, {
    "method": "groove.getEnabled.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getEnabled().value().displayedValue().get()"
  }, {
    "method": "groove.getEnabled.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getEnabled().value().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getEnabled.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().value().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getEnabled.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().value().displayedValue().subscribe()"
  }, {
    "method": "groove.getEnabled.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().value().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getEnabled.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getEnabled.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().value().isSubscribed()"
  }, {
    "method": "groove.getEnabled.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().value().subscribe()"
  }, {
    "method": "groove.getEnabled.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().value().unsubscribe()"
  }, {
    "method": "groove.getEnabled.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().value().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getEnabled.reset",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().reset()"
  }, {
    "method": "groove.getEnabled.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().touch(boolean)"
  }, {
    "method": "groove.getEnabled.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().restoreAutomationControl()"
  }, {
    "method": "groove.getEnabled.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Groove#getEnabled().modulatedValue()"
  }, {
    "method": "groove.getEnabled.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().modulatedValue().get()"
  }, {
    "method": "groove.getEnabled.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().modulatedValue().getRaw()"
  }, {
    "method": "groove.getEnabled.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().modulatedValue().getAsDouble()"
  }, {
    "method": "groove.getEnabled.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getEnabled().modulatedValue().displayedValue()"
  }, {
    "method": "groove.getEnabled.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getEnabled().modulatedValue().displayedValue().get()"
  }, {
    "method": "groove.getEnabled.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getEnabled().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getEnabled.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getEnabled.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "groove.getEnabled.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getEnabled.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getEnabled.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().modulatedValue().isSubscribed()"
  }, {
    "method": "groove.getEnabled.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().modulatedValue().subscribe()"
  }, {
    "method": "groove.getEnabled.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().modulatedValue().unsubscribe()"
  }, {
    "method": "groove.getEnabled.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getEnabled.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().setIndication(boolean)"
  }, {
    "method": "groove.getEnabled.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Groove#getEnabled().exists()"
  }, {
    "method": "groove.getEnabled.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().exists().get()"
  }, {
    "method": "groove.getEnabled.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().exists().getAsBoolean()"
  }, {
    "method": "groove.getEnabled.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().exists().isSubscribed()"
  }, {
    "method": "groove.getEnabled.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().exists().subscribe()"
  }, {
    "method": "groove.getEnabled.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().exists().unsubscribe()"
  }, {
    "method": "groove.getEnabled.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().exists().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().isSubscribed()"
  }, {
    "method": "groove.getEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().subscribe()"
  }, {
    "method": "groove.getEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().unsubscribe()"
  }, {
    "method": "groove.getEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getEnabled.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getEnabled().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getEnabled.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().set(double)"
  }, {
    "method": "groove.getEnabled.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getEnabled().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getEnabled.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().inc(double)"
  }, {
    "method": "groove.getEnabled.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().setRaw(double)"
  }, {
    "method": "groove.getEnabled.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().setImmediately(double)"
  }, {
    "method": "groove.getEnabled.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getEnabled().incRaw(double)"
  }, {
    "method": "groove.getEnabled.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().get()"
  }, {
    "method": "groove.getEnabled.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().getRaw()"
  }, {
    "method": "groove.getEnabled.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getEnabled().getAsDouble()"
  }, {
    "method": "groove.getEnabled.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getEnabled().displayedValue()"
  }, {
    "method": "groove.getEnabled.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getEnabled().displayedValue().get()"
  }, {
    "method": "groove.getEnabled.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getEnabled().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getEnabled.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getEnabled().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getEnabled.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().displayedValue().subscribe()"
  }, {
    "method": "groove.getEnabled.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getEnabled().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getEnabled.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getEnabled().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount",
    "params": [],
    "result": "object",
    "expression": "Parameter Groove#getAccentAmount()"
  }, {
    "method": "groove.getAccentAmount.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentAmount().name()"
  }, {
    "method": "groove.getAccentAmount.name.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentAmount().name().get()"
  }, {
    "method": "groove.getAccentAmount.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentAmount().name().getLimited(int)"
  }, {
    "method": "groove.getAccentAmount.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().name().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().name().subscribe()"
  }, {
    "method": "groove.getAccentAmount.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().name().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().name().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Groove#getAccentAmount().value()"
  }, {
    "method": "groove.getAccentAmount.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentAmount.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().set(double)"
  }, {
    "method": "groove.getAccentAmount.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentAmount.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().inc(double)"
  }, {
    "method": "groove.getAccentAmount.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().setRaw(double)"
  }, {
    "method": "groove.getAccentAmount.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().setImmediately(double)"
  }, {
    "method": "groove.getAccentAmount.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().incRaw(double)"
  }, {
    "method": "groove.getAccentAmount.value.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().value().get()"
  }, {
    "method": "groove.getAccentAmount.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().value().getRaw()"
  }, {
    "method": "groove.getAccentAmount.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().value().getAsDouble()"
  }, {
    "method": "groove.getAccentAmount.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentAmount().value().displayedValue()"
  }, {
    "method": "groove.getAccentAmount.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentAmount().value().displayedValue().get()"
  }, {
    "method": "groove.getAccentAmount.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentAmount().value().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentAmount.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().value().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentAmount.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().value().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().subscribe()"
  }, {
    "method": "groove.getAccentAmount.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().value().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount.reset",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().reset()"
  }, {
    "method": "groove.getAccentAmount.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().touch(boolean)"
  }, {
    "method": "groove.getAccentAmount.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().restoreAutomationControl()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Groove#getAccentAmount().modulatedValue()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().modulatedValue().get()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().modulatedValue().getRaw()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().modulatedValue().getAsDouble()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentAmount().modulatedValue().displayedValue()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentAmount().modulatedValue().displayedValue().get()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentAmount().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().modulatedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().modulatedValue().subscribe()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().modulatedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().setIndication(boolean)"
  }, {
    "method": "groove.getAccentAmount.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Groove#getAccentAmount().exists()"
  }, {
    "method": "groove.getAccentAmount.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().exists().get()"
  }, {
    "method": "groove.getAccentAmount.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().exists().getAsBoolean()"
  }, {
    "method": "groove.getAccentAmount.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().exists().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().exists().subscribe()"
  }, {
    "method": "groove.getAccentAmount.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().exists().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().exists().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().subscribe()"
  }, {
    "method": "groove.getAccentAmount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentAmount.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentAmount.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().set(double)"
  }, {
    "method": "groove.getAccentAmount.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentAmount.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().inc(double)"
  }, {
    "method": "groove.getAccentAmount.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().setRaw(double)"
  }, {
    "method": "groove.getAccentAmount.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().setImmediately(double)"
  }, {
    "method": "groove.getAccentAmount.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().incRaw(double)"
  }, {
    "method": "groove.getAccentAmount.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().get()"
  }, {
    "method": "groove.getAccentAmount.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().getRaw()"
  }, {
    "method": "groove.getAccentAmount.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentAmount().getAsDouble()"
  }, {
    "method": "groove.getAccentAmount.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentAmount().displayedValue()"
  }, {
    "method": "groove.getAccentAmount.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentAmount().displayedValue().get()"
  }, {
    "method": "groove.getAccentAmount.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentAmount().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentAmount.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentAmount().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentAmount.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentAmount.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentAmount().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentAmount.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentAmount().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase",
    "params": [],
    "result": "object",
    "expression": "Parameter Groove#getAccentPhase()"
  }, {
    "method": "groove.getAccentPhase.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentPhase().name()"
  }, {
    "method": "groove.getAccentPhase.name.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentPhase().name().get()"
  }, {
    "method": "groove.getAccentPhase.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentPhase().name().getLimited(int)"
  }, {
    "method": "groove.getAccentPhase.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().name().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().name().subscribe()"
  }, {
    "method": "groove.getAccentPhase.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().name().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().name().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Groove#getAccentPhase().value()"
  }, {
    "method": "groove.getAccentPhase.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentPhase.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().set(double)"
  }, {
    "method": "groove.getAccentPhase.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentPhase.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().inc(double)"
  }, {
    "method": "groove.getAccentPhase.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().setRaw(double)"
  }, {
    "method": "groove.getAccentPhase.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().setImmediately(double)"
  }, {
    "method": "groove.getAccentPhase.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().incRaw(double)"
  }, {
    "method": "groove.getAccentPhase.value.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().value().get()"
  }, {
    "method": "groove.getAccentPhase.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().value().getRaw()"
  }, {
    "method": "groove.getAccentPhase.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().value().getAsDouble()"
  }, {
    "method": "groove.getAccentPhase.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentPhase().value().displayedValue()"
  }, {
    "method": "groove.getAccentPhase.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentPhase().value().displayedValue().get()"
  }, {
    "method": "groove.getAccentPhase.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentPhase().value().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentPhase.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().value().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentPhase.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().value().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().subscribe()"
  }, {
    "method": "groove.getAccentPhase.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().value().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase.reset",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().reset()"
  }, {
    "method": "groove.getAccentPhase.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().touch(boolean)"
  }, {
    "method": "groove.getAccentPhase.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().restoreAutomationControl()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Groove#getAccentPhase().modulatedValue()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().modulatedValue().get()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().modulatedValue().getRaw()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().modulatedValue().getAsDouble()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentPhase().modulatedValue().displayedValue()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentPhase().modulatedValue().displayedValue().get()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentPhase().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().modulatedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().modulatedValue().subscribe()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().modulatedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().setIndication(boolean)"
  }, {
    "method": "groove.getAccentPhase.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Groove#getAccentPhase().exists()"
  }, {
    "method": "groove.getAccentPhase.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().exists().get()"
  }, {
    "method": "groove.getAccentPhase.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().exists().getAsBoolean()"
  }, {
    "method": "groove.getAccentPhase.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().exists().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().exists().subscribe()"
  }, {
    "method": "groove.getAccentPhase.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().exists().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().exists().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().subscribe()"
  }, {
    "method": "groove.getAccentPhase.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentPhase.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentPhase.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().set(double)"
  }, {
    "method": "groove.getAccentPhase.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentPhase.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().inc(double)"
  }, {
    "method": "groove.getAccentPhase.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().setRaw(double)"
  }, {
    "method": "groove.getAccentPhase.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().setImmediately(double)"
  }, {
    "method": "groove.getAccentPhase.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().incRaw(double)"
  }, {
    "method": "groove.getAccentPhase.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().get()"
  }, {
    "method": "groove.getAccentPhase.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().getRaw()"
  }, {
    "method": "groove.getAccentPhase.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentPhase().getAsDouble()"
  }, {
    "method": "groove.getAccentPhase.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentPhase().displayedValue()"
  }, {
    "method": "groove.getAccentPhase.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentPhase().displayedValue().get()"
  }, {
    "method": "groove.getAccentPhase.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentPhase().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentPhase.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentPhase().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentPhase.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentPhase.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentPhase().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentPhase.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentPhase().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate",
    "params": [],
    "result": "object",
    "expression": "Parameter Groove#getShuffleRate()"
  }, {
    "method": "groove.getShuffleRate.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleRate().name()"
  }, {
    "method": "groove.getShuffleRate.name.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleRate().name().get()"
  }, {
    "method": "groove.getShuffleRate.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleRate().name().getLimited(int)"
  }, {
    "method": "groove.getShuffleRate.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().name().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().name().subscribe()"
  }, {
    "method": "groove.getShuffleRate.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().name().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().name().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Groove#getShuffleRate().value()"
  }, {
    "method": "groove.getShuffleRate.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleRate.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().set(double)"
  }, {
    "method": "groove.getShuffleRate.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleRate.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().inc(double)"
  }, {
    "method": "groove.getShuffleRate.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().setRaw(double)"
  }, {
    "method": "groove.getShuffleRate.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().setImmediately(double)"
  }, {
    "method": "groove.getShuffleRate.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().incRaw(double)"
  }, {
    "method": "groove.getShuffleRate.value.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().value().get()"
  }, {
    "method": "groove.getShuffleRate.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().value().getRaw()"
  }, {
    "method": "groove.getShuffleRate.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().value().getAsDouble()"
  }, {
    "method": "groove.getShuffleRate.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleRate().value().displayedValue()"
  }, {
    "method": "groove.getShuffleRate.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleRate().value().displayedValue().get()"
  }, {
    "method": "groove.getShuffleRate.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleRate().value().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getShuffleRate.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().value().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().displayedValue().subscribe()"
  }, {
    "method": "groove.getShuffleRate.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().value().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().subscribe()"
  }, {
    "method": "groove.getShuffleRate.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().value().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate.reset",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().reset()"
  }, {
    "method": "groove.getShuffleRate.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().touch(boolean)"
  }, {
    "method": "groove.getShuffleRate.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().restoreAutomationControl()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Groove#getShuffleRate().modulatedValue()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().modulatedValue().get()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().modulatedValue().getRaw()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().modulatedValue().getAsDouble()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleRate().modulatedValue().displayedValue()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleRate().modulatedValue().displayedValue().get()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleRate().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().modulatedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().modulatedValue().subscribe()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().modulatedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().setIndication(boolean)"
  }, {
    "method": "groove.getShuffleRate.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Groove#getShuffleRate().exists()"
  }, {
    "method": "groove.getShuffleRate.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().exists().get()"
  }, {
    "method": "groove.getShuffleRate.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().exists().getAsBoolean()"
  }, {
    "method": "groove.getShuffleRate.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().exists().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().exists().subscribe()"
  }, {
    "method": "groove.getShuffleRate.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().exists().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().exists().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().subscribe()"
  }, {
    "method": "groove.getShuffleRate.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleRate.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleRate.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().set(double)"
  }, {
    "method": "groove.getShuffleRate.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleRate.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().inc(double)"
  }, {
    "method": "groove.getShuffleRate.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().setRaw(double)"
  }, {
    "method": "groove.getShuffleRate.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().setImmediately(double)"
  }, {
    "method": "groove.getShuffleRate.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().incRaw(double)"
  }, {
    "method": "groove.getShuffleRate.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().get()"
  }, {
    "method": "groove.getShuffleRate.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().getRaw()"
  }, {
    "method": "groove.getShuffleRate.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleRate().getAsDouble()"
  }, {
    "method": "groove.getShuffleRate.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleRate().displayedValue()"
  }, {
    "method": "groove.getShuffleRate.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleRate().displayedValue().get()"
  }, {
    "method": "groove.getShuffleRate.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleRate().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getShuffleRate.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleRate().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleRate.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().displayedValue().subscribe()"
  }, {
    "method": "groove.getShuffleRate.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleRate().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleRate.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleRate().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate",
    "params": [],
    "result": "object",
    "expression": "Parameter Groove#getAccentRate()"
  }, {
    "method": "groove.getAccentRate.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentRate().name()"
  }, {
    "method": "groove.getAccentRate.name.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentRate().name().get()"
  }, {
    "method": "groove.getAccentRate.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentRate().name().getLimited(int)"
  }, {
    "method": "groove.getAccentRate.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().name().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().name().subscribe()"
  }, {
    "method": "groove.getAccentRate.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().name().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().name().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Groove#getAccentRate().value()"
  }, {
    "method": "groove.getAccentRate.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentRate.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().set(double)"
  }, {
    "method": "groove.getAccentRate.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentRate.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().inc(double)"
  }, {
    "method": "groove.getAccentRate.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().setRaw(double)"
  }, {
    "method": "groove.getAccentRate.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().setImmediately(double)"
  }, {
    "method": "groove.getAccentRate.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().incRaw(double)"
  }, {
    "method": "groove.getAccentRate.value.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().value().get()"
  }, {
    "method": "groove.getAccentRate.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().value().getRaw()"
  }, {
    "method": "groove.getAccentRate.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().value().getAsDouble()"
  }, {
    "method": "groove.getAccentRate.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentRate().value().displayedValue()"
  }, {
    "method": "groove.getAccentRate.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentRate().value().displayedValue().get()"
  }, {
    "method": "groove.getAccentRate.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentRate().value().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentRate.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().value().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentRate.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().value().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().subscribe()"
  }, {
    "method": "groove.getAccentRate.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().value().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate.reset",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().reset()"
  }, {
    "method": "groove.getAccentRate.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().touch(boolean)"
  }, {
    "method": "groove.getAccentRate.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().restoreAutomationControl()"
  }, {
    "method": "groove.getAccentRate.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Groove#getAccentRate().modulatedValue()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().modulatedValue().get()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().modulatedValue().getRaw()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().modulatedValue().getAsDouble()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentRate().modulatedValue().displayedValue()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentRate().modulatedValue().displayedValue().get()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentRate().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentRate.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().modulatedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().modulatedValue().subscribe()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().modulatedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().setIndication(boolean)"
  }, {
    "method": "groove.getAccentRate.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Groove#getAccentRate().exists()"
  }, {
    "method": "groove.getAccentRate.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().exists().get()"
  }, {
    "method": "groove.getAccentRate.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().exists().getAsBoolean()"
  }, {
    "method": "groove.getAccentRate.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().exists().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().exists().subscribe()"
  }, {
    "method": "groove.getAccentRate.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().exists().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().exists().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().subscribe()"
  }, {
    "method": "groove.getAccentRate.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getAccentRate.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentRate.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().set(double)"
  }, {
    "method": "groove.getAccentRate.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getAccentRate.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().inc(double)"
  }, {
    "method": "groove.getAccentRate.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().setRaw(double)"
  }, {
    "method": "groove.getAccentRate.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().setImmediately(double)"
  }, {
    "method": "groove.getAccentRate.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getAccentRate().incRaw(double)"
  }, {
    "method": "groove.getAccentRate.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().get()"
  }, {
    "method": "groove.getAccentRate.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().getRaw()"
  }, {
    "method": "groove.getAccentRate.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getAccentRate().getAsDouble()"
  }, {
    "method": "groove.getAccentRate.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getAccentRate().displayedValue()"
  }, {
    "method": "groove.getAccentRate.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getAccentRate().displayedValue().get()"
  }, {
    "method": "groove.getAccentRate.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getAccentRate().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getAccentRate.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getAccentRate().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getAccentRate.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().displayedValue().subscribe()"
  }, {
    "method": "groove.getAccentRate.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getAccentRate().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getAccentRate.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getAccentRate().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount",
    "params": [],
    "result": "object",
    "expression": "Parameter Groove#getShuffleAmount()"
  }, {
    "method": "groove.getShuffleAmount.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleAmount().name()"
  }, {
    "method": "groove.getShuffleAmount.name.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().name().get()"
  }, {
    "method": "groove.getShuffleAmount.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().name().getLimited(int)"
  }, {
    "method": "groove.getShuffleAmount.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().name().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().name().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().name().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().name().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Groove#getShuffleAmount().value()"
  }, {
    "method": "groove.getShuffleAmount.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleAmount.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().set(double)"
  }, {
    "method": "groove.getShuffleAmount.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleAmount.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().inc(double)"
  }, {
    "method": "groove.getShuffleAmount.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().setRaw(double)"
  }, {
    "method": "groove.getShuffleAmount.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().setImmediately(double)"
  }, {
    "method": "groove.getShuffleAmount.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().incRaw(double)"
  }, {
    "method": "groove.getShuffleAmount.value.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().value().get()"
  }, {
    "method": "groove.getShuffleAmount.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().value().getRaw()"
  }, {
    "method": "groove.getShuffleAmount.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().value().getAsDouble()"
  }, {
    "method": "groove.getShuffleAmount.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleAmount().value().displayedValue()"
  }, {
    "method": "groove.getShuffleAmount.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().value().displayedValue().get()"
  }, {
    "method": "groove.getShuffleAmount.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().value().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getShuffleAmount.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().value().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().displayedValue().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().value().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().value().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount.reset",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().reset()"
  }, {
    "method": "groove.getShuffleAmount.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().touch(boolean)"
  }, {
    "method": "groove.getShuffleAmount.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().restoreAutomationControl()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Groove#getShuffleAmount().modulatedValue()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().modulatedValue().get()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().modulatedValue().getRaw()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().modulatedValue().getAsDouble()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleAmount().modulatedValue().displayedValue()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().modulatedValue().displayedValue().get()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().modulatedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().modulatedValue().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().modulatedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().setIndication(boolean)"
  }, {
    "method": "groove.getShuffleAmount.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Groove#getShuffleAmount().exists()"
  }, {
    "method": "groove.getShuffleAmount.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().exists().get()"
  }, {
    "method": "groove.getShuffleAmount.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().exists().getAsBoolean()"
  }, {
    "method": "groove.getShuffleAmount.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().exists().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().exists().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().exists().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().exists().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().setIsSubscribed(boolean)"
  }, {
    "method": "groove.getShuffleAmount.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleAmount.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().set(double)"
  }, {
    "method": "groove.getShuffleAmount.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "groove.getShuffleAmount.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().inc(double)"
  }, {
    "method": "groove.getShuffleAmount.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().setRaw(double)"
  }, {
    "method": "groove.getShuffleAmount.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().setImmediately(double)"
  }, {
    "method": "groove.getShuffleAmount.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().incRaw(double)"
  }, {
    "method": "groove.getShuffleAmount.get",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().get()"
  }, {
    "method": "groove.getShuffleAmount.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().getRaw()"
  }, {
    "method": "groove.getShuffleAmount.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Groove#getShuffleAmount().getAsDouble()"
  }, {
    "method": "groove.getShuffleAmount.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Groove#getShuffleAmount().displayedValue()"
  }, {
    "method": "groove.getShuffleAmount.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().displayedValue().get()"
  }, {
    "method": "groove.getShuffleAmount.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Groove#getShuffleAmount().displayedValue().getLimited(int)"
  }, {
    "method": "groove.getShuffleAmount.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Groove#getShuffleAmount().displayedValue().isSubscribed()"
  }, {
    "method": "groove.getShuffleAmount.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().displayedValue().subscribe()"
  }, {
    "method": "groove.getShuffleAmount.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().displayedValue().unsubscribe()"
  }, {
    "method": "groove.getShuffleAmount.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Groove#getShuffleAmount().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mixer.isIoSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Mixer#isIoSectionVisible()"
  }, {
    "method": "mixer.isIoSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isIoSectionVisible().set(boolean)"
  }, {
    "method": "mixer.isIoSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isIoSectionVisible().toggle()"
  }, {
    "method": "mixer.isIoSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isIoSectionVisible().get()"
  }, {
    "method": "mixer.isIoSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isIoSectionVisible().getAsBoolean()"
  }, {
    "method": "mixer.isIoSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isIoSectionVisible().isSubscribed()"
  }, {
    "method": "mixer.isIoSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isIoSectionVisible().subscribe()"
  }, {
    "method": "mixer.isIoSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isIoSectionVisible().unsubscribe()"
  }, {
    "method": "mixer.isIoSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isIoSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "mixer.isIoSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isIoSectionVisible().invoke()"
  }, {
    "method": "mixer.isSendSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Mixer#isSendSectionVisible()"
  }, {
    "method": "mixer.isSendSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isSendSectionVisible().set(boolean)"
  }, {
    "method": "mixer.isSendSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isSendSectionVisible().toggle()"
  }, {
    "method": "mixer.isSendSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isSendSectionVisible().get()"
  }, {
    "method": "mixer.isSendSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isSendSectionVisible().getAsBoolean()"
  }, {
    "method": "mixer.isSendSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isSendSectionVisible().isSubscribed()"
  }, {
    "method": "mixer.isSendSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isSendSectionVisible().subscribe()"
  }, {
    "method": "mixer.isSendSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isSendSectionVisible().unsubscribe()"
  }, {
    "method": "mixer.isSendSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isSendSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "mixer.isSendSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isSendSectionVisible().invoke()"
  }, {
    "method": "mixer.isDeviceSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Mixer#isDeviceSectionVisible()"
  }, {
    "method": "mixer.isDeviceSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isDeviceSectionVisible().set(boolean)"
  }, {
    "method": "mixer.isDeviceSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isDeviceSectionVisible().toggle()"
  }, {
    "method": "mixer.isDeviceSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isDeviceSectionVisible().get()"
  }, {
    "method": "mixer.isDeviceSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isDeviceSectionVisible().getAsBoolean()"
  }, {
    "method": "mixer.isDeviceSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isDeviceSectionVisible().isSubscribed()"
  }, {
    "method": "mixer.isDeviceSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isDeviceSectionVisible().subscribe()"
  }, {
    "method": "mixer.isDeviceSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isDeviceSectionVisible().unsubscribe()"
  }, {
    "method": "mixer.isDeviceSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isDeviceSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "mixer.isDeviceSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isDeviceSectionVisible().invoke()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Mixer#isCrossFadeSectionVisible()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isCrossFadeSectionVisible().set(boolean)"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isCrossFadeSectionVisible().toggle()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isCrossFadeSectionVisible().get()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isCrossFadeSectionVisible().getAsBoolean()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isCrossFadeSectionVisible().isSubscribed()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isCrossFadeSectionVisible().subscribe()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isCrossFadeSectionVisible().unsubscribe()"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isCrossFadeSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "mixer.isCrossFadeSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isCrossFadeSectionVisible().invoke()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Mixer#isClipLauncherSectionVisible()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isClipLauncherSectionVisible().set(boolean)"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isClipLauncherSectionVisible().toggle()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isClipLauncherSectionVisible().get()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isClipLauncherSectionVisible().getAsBoolean()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isClipLauncherSectionVisible().isSubscribed()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isClipLauncherSectionVisible().subscribe()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isClipLauncherSectionVisible().unsubscribe()"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isClipLauncherSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "mixer.isClipLauncherSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isClipLauncherSectionVisible().invoke()"
  }, {
    "method": "mixer.isMeterSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Mixer#isMeterSectionVisible()"
  }, {
    "method": "mixer.isMeterSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isMeterSectionVisible().set(boolean)"
  }, {
    "method": "mixer.isMeterSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isMeterSectionVisible().toggle()"
  }, {
    "method": "mixer.isMeterSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isMeterSectionVisible().get()"
  }, {
    "method": "mixer.isMeterSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isMeterSectionVisible().getAsBoolean()"
  }, {
    "method": "mixer.isMeterSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Mixer#isMeterSectionVisible().isSubscribed()"
  }, {
    "method": "mixer.isMeterSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isMeterSectionVisible().subscribe()"
  }, {
    "method": "mixer.isMeterSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isMeterSectionVisible().unsubscribe()"
  }, {
    "method": "mixer.isMeterSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Mixer#isMeterSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "mixer.isMeterSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void Mixer#isMeterSectionVisible().invoke()"
  }, {
    "method": "arrangerCursorClip.setName",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#setName(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.duplicate",
    "params": [],
    "result": "void",
    "expression": "void Clip#duplicate()"
  }, {
    "method": "arrangerCursorClip.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue Clip#color()"
  }, {
    "method": "arrangerCursorClip.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#color().set(float, float, float)"
  }, {
    "method": "arrangerCursorClip.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#color().set(float, float, float, float)"
  }, {
    "method": "arrangerCursorClip.color.red",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().red()"
  }, {
    "method": "arrangerCursorClip.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().alpha()"
  }, {
    "method": "arrangerCursorClip.color.green",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().green()"
  }, {
    "method": "arrangerCursorClip.color.blue",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().blue()"
  }, {
    "method": "arrangerCursorClip.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#color().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#color().subscribe()"
  }, {
    "method": "arrangerCursorClip.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#color().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#color().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.duplicateContent",
    "params": [],
    "result": "void",
    "expression": "void Clip#duplicateContent()"
  }, {
    "method": "arrangerCursorClip.getStep",
    "params": ["number", "number", "number"],
    "result": "object",
    "expression": "NoteStep Clip#getStep(int, int, int)"
  }, {
    "method": "arrangerCursorClip.getStep.x",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "int Clip#getStep(int, int, int).x()"
  }, {
    "method": "arrangerCursorClip.getStep.state",
    "params": ["number", "number", "number"],
    "result": "string",
    "expression": "NoteStep$State Clip#getStep(int, int, int).state()"
  }, {
    "method": "arrangerCursorClip.getStep.y",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "int Clip#getStep(int, int, int).y()"
  }, {
    "method": "arrangerCursorClip.getStep.channel",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "int Clip#getStep(int, int, int).channel()"
  }, {
    "method": "arrangerCursorClip.getStep.duration",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).duration()"
  }, {
    "method": "arrangerCursorClip.getStep.transpose",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).transpose()"
  }, {
    "method": "arrangerCursorClip.getStep.pressure",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).pressure()"
  }, {
    "method": "arrangerCursorClip.getStep.timbre",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).timbre()"
  }, {
    "method": "arrangerCursorClip.getStep.pan",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).pan()"
  }, {
    "method": "arrangerCursorClip.getStep.volume",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).volume()"
  }, {
    "method": "arrangerCursorClip.getStep.velocity",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).velocity()"
  }, {
    "method": "arrangerCursorClip.getStep.setReleaseVelocity",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setReleaseVelocity(double)"
  }, {
    "method": "arrangerCursorClip.getStep.setDuration",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setDuration(double)"
  }, {
    "method": "arrangerCursorClip.getStep.setTranspose",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setTranspose(double)"
  }, {
    "method": "arrangerCursorClip.getStep.setVolume",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setVolume(double)"
  }, {
    "method": "arrangerCursorClip.getStep.setPan",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setPan(double)"
  }, {
    "method": "arrangerCursorClip.getStep.releaseVelocity",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).releaseVelocity()"
  }, {
    "method": "arrangerCursorClip.getStep.setPressure",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setPressure(double)"
  }, {
    "method": "arrangerCursorClip.getStep.setTimbre",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setTimbre(double)"
  }, {
    "method": "arrangerCursorClip.getStep.isIsSelected",
    "params": ["number", "number", "number"],
    "result": "boolean",
    "expression": "boolean Clip#getStep(int, int, int).isIsSelected()"
  }, {
    "method": "arrangerCursorClip.getStep.setVelocity",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setVelocity(double)"
  }, {
    "method": "arrangerCursorClip.getShuffle",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getShuffle()"
  }, {
    "method": "arrangerCursorClip.getShuffle.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getShuffle().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getShuffle.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().toggle()"
  }, {
    "method": "arrangerCursorClip.getShuffle.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getShuffle().get()"
  }, {
    "method": "arrangerCursorClip.getShuffle.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getShuffle().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getShuffle.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getShuffle().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getShuffle.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().subscribe()"
  }, {
    "method": "arrangerCursorClip.getShuffle.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getShuffle.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getShuffle().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getShuffle.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().invoke()"
  }, {
    "method": "arrangerCursorClip.launchMode",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Clip#launchMode()"
  }, {
    "method": "arrangerCursorClip.launchMode.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#launchMode().set(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.launchMode.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#launchMode().get()"
  }, {
    "method": "arrangerCursorClip.launchMode.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#launchMode().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.launchMode.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchMode().subscribe()"
  }, {
    "method": "arrangerCursorClip.launchMode.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchMode().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.launchMode.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#launchMode().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.launchQuantization",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Clip#launchQuantization()"
  }, {
    "method": "arrangerCursorClip.launchQuantization.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#launchQuantization().set(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.launchQuantization.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#launchQuantization().get()"
  }, {
    "method": "arrangerCursorClip.launchQuantization.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#launchQuantization().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.launchQuantization.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchQuantization().subscribe()"
  }, {
    "method": "arrangerCursorClip.launchQuantization.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchQuantization().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.launchQuantization.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#launchQuantization().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.scrollKeysPageDown",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysPageDown()"
  }, {
    "method": "arrangerCursorClip.clearStep",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#clearStep(int, int, int)"
  }, {
    "method": "arrangerCursorClip.clearStep",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#clearStep(int, int)"
  }, {
    "method": "arrangerCursorClip.clearStepsAtY",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#clearStepsAtY(int, int)"
  }, {
    "method": "arrangerCursorClip.getAccent",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Clip#getAccent()"
  }, {
    "method": "arrangerCursorClip.getAccent.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getAccent().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getAccent.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().set(double)"
  }, {
    "method": "arrangerCursorClip.getAccent.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getAccent().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getAccent.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().inc(double)"
  }, {
    "method": "arrangerCursorClip.getAccent.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().setRaw(double)"
  }, {
    "method": "arrangerCursorClip.getAccent.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().setImmediately(double)"
  }, {
    "method": "arrangerCursorClip.getAccent.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().incRaw(double)"
  }, {
    "method": "arrangerCursorClip.getAccent.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getAccent().get()"
  }, {
    "method": "arrangerCursorClip.getAccent.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getAccent().getRaw()"
  }, {
    "method": "arrangerCursorClip.getAccent.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getAccent().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getAccent.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getAccent().displayedValue()"
  }, {
    "method": "arrangerCursorClip.getAccent.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getAccent().displayedValue().get()"
  }, {
    "method": "arrangerCursorClip.getAccent.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getAccent().displayedValue().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getAccent.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getAccent().displayedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getAccent.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().displayedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getAccent.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().displayedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getAccent.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getAccent().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getAccent.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getAccent().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getAccent.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().subscribe()"
  }, {
    "method": "arrangerCursorClip.getAccent.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getAccent.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getAccent().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#isLoopEnabled()"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().set(boolean)"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().toggle()"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isLoopEnabled().get()"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isLoopEnabled().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isLoopEnabled().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().subscribe()"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.isLoopEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().invoke()"
  }, {
    "method": "arrangerCursorClip.clearSteps",
    "params": [],
    "result": "void",
    "expression": "void Clip#clearSteps()"
  }, {
    "method": "arrangerCursorClip.scrollKeysPageUp",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysPageUp()"
  }, {
    "method": "arrangerCursorClip.scrollKeysStepDown",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysStepDown()"
  }, {
    "method": "arrangerCursorClip.scrollKeysStepUp",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysStepUp()"
  }, {
    "method": "arrangerCursorClip.clearStepsAtX",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#clearStepsAtX(int, int)"
  }, {
    "method": "arrangerCursorClip.selectStepContents",
    "params": ["number", "number", "number", "boolean"],
    "result": "void",
    "expression": "void Clip#selectStepContents(int, int, int, boolean)"
  }, {
    "method": "arrangerCursorClip.selectStepContents",
    "params": ["number", "number", "boolean"],
    "result": "void",
    "expression": "void Clip#selectStepContents(int, int, boolean)"
  }, {
    "method": "arrangerCursorClip.setStep",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#setStep(int, int, int, double)"
  }, {
    "method": "arrangerCursorClip.setStep",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#setStep(int, int, int, int, double)"
  }, {
    "method": "arrangerCursorClip.transpose",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#transpose(int)"
  }, {
    "method": "arrangerCursorClip.launch",
    "params": [],
    "result": "void",
    "expression": "void Clip#launch()"
  }, {
    "method": "arrangerCursorClip.quantize",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#quantize(double)"
  }, {
    "method": "arrangerCursorClip.scrollStepsStepBackwards",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsStepBackwards()"
  }, {
    "method": "arrangerCursorClip.scrollStepsPageForward",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsPageForward()"
  }, {
    "method": "arrangerCursorClip.scrollStepsStepForward",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsStepForward()"
  }, {
    "method": "arrangerCursorClip.scrollStepsPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsPageBackwards()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#useLoopStartAsQuantizationReference()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().set(boolean)"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().toggle()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#useLoopStartAsQuantizationReference().get()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#useLoopStartAsQuantizationReference().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#useLoopStartAsQuantizationReference().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().subscribe()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.useLoopStartAsQuantizationReference.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().invoke()"
  }, {
    "method": "arrangerCursorClip.scrollToKey",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#scrollToKey(int)"
  }, {
    "method": "arrangerCursorClip.scrollToStep",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#scrollToStep(int)"
  }, {
    "method": "arrangerCursorClip.canScrollKeysDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollKeysDown()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysDown().get()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysDown().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysDown().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysDown().subscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysDown().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollKeysDown().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.toggleStep",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#toggleStep(int, int, int)"
  }, {
    "method": "arrangerCursorClip.toggleStep",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#toggleStep(int, int, int, int)"
  }, {
    "method": "arrangerCursorClip.canScrollKeysUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollKeysUp()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysUp().get()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysUp().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysUp().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysUp().subscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysUp().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollKeysUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollKeysUp().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getLoopStart",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getLoopStart()"
  }, {
    "method": "arrangerCursorClip.getLoopStart.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getLoopStart().getFormatted()"
  }, {
    "method": "arrangerCursorClip.getLoopStart.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopStart().get()"
  }, {
    "method": "arrangerCursorClip.getLoopStart.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopStart().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getLoopStart.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getLoopStart().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getLoopStart.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopStart().subscribe()"
  }, {
    "method": "arrangerCursorClip.getLoopStart.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopStart().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getLoopStart.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getLoopStart().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getLoopStart.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopStart().set(double)"
  }, {
    "method": "arrangerCursorClip.getLoopStart.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopStart().inc(double)"
  }, {
    "method": "arrangerCursorClip.getPlayStart",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getPlayStart()"
  }, {
    "method": "arrangerCursorClip.getPlayStart.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getPlayStart().getFormatted()"
  }, {
    "method": "arrangerCursorClip.getPlayStart.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStart().get()"
  }, {
    "method": "arrangerCursorClip.getPlayStart.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStart().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getPlayStart.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getPlayStart().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getPlayStart.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStart().subscribe()"
  }, {
    "method": "arrangerCursorClip.getPlayStart.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStart().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getPlayStart.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getPlayStart().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getPlayStart.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStart().set(double)"
  }, {
    "method": "arrangerCursorClip.getPlayStart.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStart().inc(double)"
  }, {
    "method": "arrangerCursorClip.playingStep",
    "params": [],
    "result": "object",
    "expression": "IntegerValue Clip#playingStep()"
  }, {
    "method": "arrangerCursorClip.playingStep.get",
    "params": [],
    "result": "number",
    "expression": "int Clip#playingStep().get()"
  }, {
    "method": "arrangerCursorClip.playingStep.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Clip#playingStep().getAsInt()"
  }, {
    "method": "arrangerCursorClip.playingStep.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#playingStep().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.playingStep.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#playingStep().subscribe()"
  }, {
    "method": "arrangerCursorClip.playingStep.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#playingStep().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.playingStep.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#playingStep().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getPlayStop",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getPlayStop()"
  }, {
    "method": "arrangerCursorClip.getPlayStop.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getPlayStop().getFormatted()"
  }, {
    "method": "arrangerCursorClip.getPlayStop.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStop().get()"
  }, {
    "method": "arrangerCursorClip.getPlayStop.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStop().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getPlayStop.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getPlayStop().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getPlayStop.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStop().subscribe()"
  }, {
    "method": "arrangerCursorClip.getPlayStop.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStop().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getPlayStop.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getPlayStop().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getPlayStop.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStop().set(double)"
  }, {
    "method": "arrangerCursorClip.getPlayStop.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStop().inc(double)"
  }, {
    "method": "arrangerCursorClip.getLoopLength",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getLoopLength()"
  }, {
    "method": "arrangerCursorClip.getLoopLength.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getLoopLength().getFormatted()"
  }, {
    "method": "arrangerCursorClip.getLoopLength.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopLength().get()"
  }, {
    "method": "arrangerCursorClip.getLoopLength.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopLength().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getLoopLength.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getLoopLength().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getLoopLength.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopLength().subscribe()"
  }, {
    "method": "arrangerCursorClip.getLoopLength.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopLength().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getLoopLength.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getLoopLength().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getLoopLength.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopLength().set(double)"
  }, {
    "method": "arrangerCursorClip.getLoopLength.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopLength().inc(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.position",
    "params": [],
    "result": "object",
    "expression": "IntegerValue Clip#getTrack().position()"
  }, {
    "method": "arrangerCursorClip.getTrack.position.get",
    "params": [],
    "result": "number",
    "expression": "int Clip#getTrack().position().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.position.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Clip#getTrack().position().getAsInt()"
  }, {
    "method": "arrangerCursorClip.getTrack.position.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().position().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.position.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().position().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.position.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().position().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.position.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().position().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.stop",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().stop()"
  }, {
    "method": "arrangerCursorClip.getTrack.setName",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().setName(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().canHoldAudioData()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldAudioData().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldAudioData().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldAudioData().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldAudioData.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().autoMonitor()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().autoMonitor().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().autoMonitor().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().autoMonitor().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.autoMonitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().canHoldNoteData()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldNoteData().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldNoteData().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldNoteData().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.canHoldNoteData.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.createNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().createNewClip(int, int)"
  }, {
    "method": "arrangerCursorClip.getTrack.createNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void Clip#getTrack().createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().getIsPreFader()"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().getIsPreFader().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().getIsPreFader().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().getIsPreFader().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.getIsPreFader.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.recordNewClip",
    "params": ["number", "object"],
    "result": "void",
    "expression": "void Clip#getTrack().recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "arrangerCursorClip.getTrack.recordNewClip",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().recordNewClip(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.trackType",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().trackType()"
  }, {
    "method": "arrangerCursorClip.getTrack.trackType.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().trackType().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.trackType.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().trackType().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.trackType.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().trackType().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.trackType.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().trackType().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.trackType.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().trackType().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.trackType.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().trackType().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.stopNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().stopNote(int, int)"
  }, {
    "method": "arrangerCursorClip.getTrack.isQueuedForStop",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isQueuedForStop()"
  }, {
    "method": "arrangerCursorClip.getTrack.isQueuedForStop.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isQueuedForStop().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.isQueuedForStop.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isQueuedForStop().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.isQueuedForStop.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isQueuedForStop().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.isQueuedForStop.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isQueuedForStop().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isQueuedForStop.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isQueuedForStop().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isQueuedForStop.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.startNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().startNote(int, int)"
  }, {
    "method": "arrangerCursorClip.getTrack.selectSlot",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().selectSlot(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().sourceSelector().exists()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().exists().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().exists().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().exists().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().exists().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.sourceSelector.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.isStopped",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isStopped()"
  }, {
    "method": "arrangerCursorClip.getTrack.isStopped.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isStopped().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.isStopped.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isStopped().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.isStopped.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isStopped().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.isStopped.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isStopped().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isStopped.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isStopped().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isStopped.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.arm",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().arm()"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().arm().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().arm().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().arm().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().arm().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().arm().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.arm.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().monitor()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().monitor().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().monitor().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().monitor().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.monitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.returnToArrangement",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().returnToArrangement()"
  }, {
    "method": "arrangerCursorClip.getTrack.afterTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().paste()"
  }, {
    "method": "arrangerCursorClip.getTrack.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.afterTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.afterTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.afterTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().browse()"
  }, {
    "method": "arrangerCursorClip.getTrack.beforeTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().paste()"
  }, {
    "method": "arrangerCursorClip.getTrack.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.beforeTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.beforeTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().browse()"
  }, {
    "method": "arrangerCursorClip.getTrack.playNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().playNote(int, int)"
  }, {
    "method": "arrangerCursorClip.getTrack.sendMidi",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().sendMidi(int, int, int)"
  }, {
    "method": "arrangerCursorClip.getTrack.crossFadeMode",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Clip#getTrack().crossFadeMode()"
  }, {
    "method": "arrangerCursorClip.getTrack.crossFadeMode.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().set(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.crossFadeMode.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().crossFadeMode().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.crossFadeMode.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().crossFadeMode().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.crossFadeMode.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.crossFadeMode.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.crossFadeMode.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.isGroup",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isGroup()"
  }, {
    "method": "arrangerCursorClip.getTrack.isGroup.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isGroup().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.isGroup.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isGroup().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.isGroup.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isGroup().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.isGroup.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isGroup().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isGroup.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isGroup().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isGroup.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.duplicate",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().duplicate()"
  }, {
    "method": "arrangerCursorClip.getTrack.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue Clip#getTrack().color()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().color().set(float, float, float)"
  }, {
    "method": "arrangerCursorClip.getTrack.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().color().set(float, float, float, float)"
  }, {
    "method": "arrangerCursorClip.getTrack.color.red",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().red()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().alpha()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.green",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().green()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.blue",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().blue()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().color().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().color().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().color().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().color().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().isActivated()"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isActivated().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isActivated().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isActivated().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.isActivated.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.makeVisibleInMixer",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().makeVisibleInMixer()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan",
    "params": [],
    "result": "object",
    "expression": "Parameter Clip#getTrack().pan()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().name()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().name().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().name().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().name().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().name().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().name().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Clip#getTrack().pan().value()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().set(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().inc(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().setRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().setImmediately(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().incRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().value().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().value().getRaw()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().value().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().value().displayedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().value().displayedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().displayedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().value().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.reset",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().reset()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().touch(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().restoreAutomationControl()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Clip#getTrack().pan().modulatedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().modulatedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().modulatedValue().getRaw()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().modulatedValue().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().modulatedValue().displayedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().modulatedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setIndication(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().pan().exists()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().exists().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().exists().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().exists().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().exists().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().exists().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().set(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().inc(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setImmediately(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().incRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().getRaw()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().displayedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().displayedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().displayedValue().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().displayedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().displayedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().displayedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.pan.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.mute",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().mute()"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().mute().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().mute().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().mute().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().mute().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().mute().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.mute.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo",
    "params": [],
    "result": "object",
    "expression": "SoloValue Clip#getTrack().solo()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.toggle",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().solo().toggle(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().solo().set(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().toggle()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().solo().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().solo().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().solo().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().solo().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.solo.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().invoke()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume",
    "params": [],
    "result": "object",
    "expression": "Parameter Clip#getTrack().volume()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().name()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().name().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().name().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().name().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().name().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().name().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Clip#getTrack().volume().value()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().set(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().inc(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().setRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().setImmediately(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().incRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().value().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().value().getRaw()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().value().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().value().displayedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().value().displayedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().displayedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().value().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.reset",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().reset()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().touch(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().restoreAutomationControl()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Clip#getTrack().volume().modulatedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().modulatedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().modulatedValue().getRaw()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().modulatedValue().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().modulatedValue().displayedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().modulatedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setIndication(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().volume().exists()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().exists().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().exists().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().exists().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().exists().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().exists().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().set(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().inc(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setImmediately(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().incRaw(double)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().getRaw()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().getAsDouble()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().displayedValue()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().displayedValue().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().displayedValue().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().displayedValue().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().displayedValue().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().displayedValue().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.volume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.makeVisibleInArranger",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().makeVisibleInArranger()"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.isNotePlaying",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().playingNotes().isNotePlaying(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.get",
    "params": [],
    "result": "any[]",
    "expression": "Object[] Clip#getTrack().playingNotes().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object Clip#getTrack().playingNotes().get(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().playingNotes().isEmpty()"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().playingNotes().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().playingNotes().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().playingNotes().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.playingNotes.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.isMutedBySolo",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isMutedBySolo()"
  }, {
    "method": "arrangerCursorClip.getTrack.isMutedBySolo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isMutedBySolo().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.isMutedBySolo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isMutedBySolo().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.isMutedBySolo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isMutedBySolo().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.isMutedBySolo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isMutedBySolo().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isMutedBySolo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isMutedBySolo().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.isMutedBySolo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.selectInMixer",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().selectInMixer()"
  }, {
    "method": "arrangerCursorClip.getTrack.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().deleteObject()"
  }, {
    "method": "arrangerCursorClip.getTrack.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue Clip#getTrack().name()"
  }, {
    "method": "arrangerCursorClip.getTrack.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().name().set(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().name().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().name().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().name().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().name().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().name().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().name().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().selectInEditor()"
  }, {
    "method": "arrangerCursorClip.getTrack.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "arrangerCursorClip.getTrack.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "arrangerCursorClip.getTrack.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "arrangerCursorClip.getTrack.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "arrangerCursorClip.getTrack.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.getTrack.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "arrangerCursorClip.getTrack.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().exists()"
  }, {
    "method": "arrangerCursorClip.getTrack.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().exists().get()"
  }, {
    "method": "arrangerCursorClip.getTrack.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().exists().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.getTrack.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().exists().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().exists().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().exists().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().exists().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.vuMeter",
    "params": [],
    "result": "object",
    "expression": "VuMeterValue Clip#getTrack().vuMeter()"
  }, {
    "method": "arrangerCursorClip.getTrack.vuMeter.get",
    "params": ["number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel Clip#getTrack().vuMeter().get(int, boolean)"
  }, {
    "method": "arrangerCursorClip.getTrack.vuMeter.values",
    "params": [],
    "result": "object",
    "expression": "Collection Clip#getTrack().vuMeter().values()"
  }, {
    "method": "arrangerCursorClip.getTrack.vuMeter.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().vuMeter().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.getTrack.vuMeter.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().vuMeter().subscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.vuMeter.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().vuMeter().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.getTrack.vuMeter.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue Clip#clipLauncherSlot().color()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().set(float, float, float)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().set(float, float, float, float)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.red",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().red()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().alpha()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.green",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().green()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.blue",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().blue()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().color().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.select",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().select()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.record",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().record()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.browseToInsertClip",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().browseToInsertClip()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.duplicateClip",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().duplicateClip()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.showInEditor",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().showInEditor()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.createEmptyClip",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().createEmptyClip(int)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isSelected()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSelected().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSelected().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSelected().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isSelected().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isSelected().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaying",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isPlaying()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaying.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaying().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaying.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaying().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaying.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaying().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaying.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaying().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaying.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaying().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaying.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaying().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isPlaybackQueued()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaybackQueued().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaybackQueued().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaybackQueued().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaybackQueued().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaybackQueued().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaybackQueued().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isStopQueued",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isStopQueued()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isStopQueued.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isStopQueued().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isStopQueued.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isStopQueued().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isStopQueued.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isStopQueued().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isStopQueued.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isStopQueued().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isStopQueued.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isStopQueued().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isStopQueued.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isStopQueued().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isRecordingQueued()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecordingQueued().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecordingQueued().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecordingQueued().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecordingQueued().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecordingQueued().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecordingQueued().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecording",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isRecording()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecording.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecording().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecording.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecording().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecording.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecording().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecording.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecording().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecording.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecording().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isRecording.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecording().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.hasContent",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().hasContent()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.hasContent.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().hasContent().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.hasContent.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().hasContent().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.hasContent.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().hasContent().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.hasContent.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().hasContent().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.hasContent.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().hasContent().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.hasContent.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().hasContent().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#clipLauncherSlot().name()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#clipLauncherSlot().name().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#clipLauncherSlot().name().getLimited(int)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().name().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().name().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().name().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().name().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.launch",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().launch()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.previousSceneInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().paste()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.previousSceneInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.previousSceneInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.previousSceneInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.previousSceneInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().browse()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.replaceInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().paste()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.replaceInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.replaceInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.replaceInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.replaceInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().browse()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.nextSceneInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().paste()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.nextSceneInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.nextSceneInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.nextSceneInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.nextSceneInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().browse()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.sceneIndex",
    "params": [],
    "result": "object",
    "expression": "IntegerValue Clip#clipLauncherSlot().sceneIndex()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.sceneIndex.get",
    "params": [],
    "result": "number",
    "expression": "int Clip#clipLauncherSlot().sceneIndex().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.sceneIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Clip#clipLauncherSlot().sceneIndex().getAsInt()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.sceneIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().sceneIndex().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.sceneIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().sceneIndex().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.sceneIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().sceneIndex().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.sceneIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().sceneIndex().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().setIndication(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().deleteObject()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().exists()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().exists().get()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().exists().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().exists().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().exists().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().exists().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().exists().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().subscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.clipLauncherSlot.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.canScrollStepsBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollStepsBackwards()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsBackwards().get()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsBackwards().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsBackwards().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsBackwards().subscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsBackwards().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollStepsBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.canScrollStepsForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollStepsForwards()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsForwards().get()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsForwards().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsForwards().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsForwards().subscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsForwards().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.canScrollStepsForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollStepsForwards().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.setStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#setStepSize(double)"
  }, {
    "method": "arrangerCursorClip.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#exists()"
  }, {
    "method": "arrangerCursorClip.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#exists().get()"
  }, {
    "method": "arrangerCursorClip.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#exists().getAsBoolean()"
  }, {
    "method": "arrangerCursorClip.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#exists().isSubscribed()"
  }, {
    "method": "arrangerCursorClip.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#exists().subscribe()"
  }, {
    "method": "arrangerCursorClip.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#exists().unsubscribe()"
  }, {
    "method": "arrangerCursorClip.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#exists().setIsSubscribed(boolean)"
  }, {
    "method": "arrangerCursorClip.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isSubscribed()"
  }, {
    "method": "arrangerCursorClip.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#subscribe()"
  }, {
    "method": "arrangerCursorClip.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#unsubscribe()"
  }, {
    "method": "arrangerCursorClip.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.setName",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#setName(java.lang.String)"
  }, {
    "method": "launcherCursorClip.duplicate",
    "params": [],
    "result": "void",
    "expression": "void Clip#duplicate()"
  }, {
    "method": "launcherCursorClip.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue Clip#color()"
  }, {
    "method": "launcherCursorClip.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#color().set(float, float, float)"
  }, {
    "method": "launcherCursorClip.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#color().set(float, float, float, float)"
  }, {
    "method": "launcherCursorClip.color.red",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().red()"
  }, {
    "method": "launcherCursorClip.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().alpha()"
  }, {
    "method": "launcherCursorClip.color.green",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().green()"
  }, {
    "method": "launcherCursorClip.color.blue",
    "params": [],
    "result": "number",
    "expression": "float Clip#color().blue()"
  }, {
    "method": "launcherCursorClip.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#color().isSubscribed()"
  }, {
    "method": "launcherCursorClip.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#color().subscribe()"
  }, {
    "method": "launcherCursorClip.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#color().unsubscribe()"
  }, {
    "method": "launcherCursorClip.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#color().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.duplicateContent",
    "params": [],
    "result": "void",
    "expression": "void Clip#duplicateContent()"
  }, {
    "method": "launcherCursorClip.getStep",
    "params": ["number", "number", "number"],
    "result": "object",
    "expression": "NoteStep Clip#getStep(int, int, int)"
  }, {
    "method": "launcherCursorClip.getStep.x",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "int Clip#getStep(int, int, int).x()"
  }, {
    "method": "launcherCursorClip.getStep.state",
    "params": ["number", "number", "number"],
    "result": "string",
    "expression": "NoteStep$State Clip#getStep(int, int, int).state()"
  }, {
    "method": "launcherCursorClip.getStep.y",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "int Clip#getStep(int, int, int).y()"
  }, {
    "method": "launcherCursorClip.getStep.channel",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "int Clip#getStep(int, int, int).channel()"
  }, {
    "method": "launcherCursorClip.getStep.duration",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).duration()"
  }, {
    "method": "launcherCursorClip.getStep.transpose",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).transpose()"
  }, {
    "method": "launcherCursorClip.getStep.pressure",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).pressure()"
  }, {
    "method": "launcherCursorClip.getStep.timbre",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).timbre()"
  }, {
    "method": "launcherCursorClip.getStep.pan",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).pan()"
  }, {
    "method": "launcherCursorClip.getStep.volume",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).volume()"
  }, {
    "method": "launcherCursorClip.getStep.velocity",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).velocity()"
  }, {
    "method": "launcherCursorClip.getStep.setReleaseVelocity",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setReleaseVelocity(double)"
  }, {
    "method": "launcherCursorClip.getStep.setDuration",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setDuration(double)"
  }, {
    "method": "launcherCursorClip.getStep.setTranspose",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setTranspose(double)"
  }, {
    "method": "launcherCursorClip.getStep.setVolume",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setVolume(double)"
  }, {
    "method": "launcherCursorClip.getStep.setPan",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setPan(double)"
  }, {
    "method": "launcherCursorClip.getStep.releaseVelocity",
    "params": ["number", "number", "number"],
    "result": "number",
    "expression": "double Clip#getStep(int, int, int).releaseVelocity()"
  }, {
    "method": "launcherCursorClip.getStep.setPressure",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setPressure(double)"
  }, {
    "method": "launcherCursorClip.getStep.setTimbre",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setTimbre(double)"
  }, {
    "method": "launcherCursorClip.getStep.isIsSelected",
    "params": ["number", "number", "number"],
    "result": "boolean",
    "expression": "boolean Clip#getStep(int, int, int).isIsSelected()"
  }, {
    "method": "launcherCursorClip.getStep.setVelocity",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getStep(int, int, int).setVelocity(double)"
  }, {
    "method": "launcherCursorClip.getShuffle",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getShuffle()"
  }, {
    "method": "launcherCursorClip.getShuffle.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getShuffle().set(boolean)"
  }, {
    "method": "launcherCursorClip.getShuffle.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().toggle()"
  }, {
    "method": "launcherCursorClip.getShuffle.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getShuffle().get()"
  }, {
    "method": "launcherCursorClip.getShuffle.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getShuffle().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getShuffle.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getShuffle().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getShuffle.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().subscribe()"
  }, {
    "method": "launcherCursorClip.getShuffle.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getShuffle.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getShuffle().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getShuffle.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getShuffle().invoke()"
  }, {
    "method": "launcherCursorClip.launchMode",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Clip#launchMode()"
  }, {
    "method": "launcherCursorClip.launchMode.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#launchMode().set(java.lang.String)"
  }, {
    "method": "launcherCursorClip.launchMode.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#launchMode().get()"
  }, {
    "method": "launcherCursorClip.launchMode.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#launchMode().isSubscribed()"
  }, {
    "method": "launcherCursorClip.launchMode.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchMode().subscribe()"
  }, {
    "method": "launcherCursorClip.launchMode.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchMode().unsubscribe()"
  }, {
    "method": "launcherCursorClip.launchMode.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#launchMode().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.launchQuantization",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Clip#launchQuantization()"
  }, {
    "method": "launcherCursorClip.launchQuantization.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#launchQuantization().set(java.lang.String)"
  }, {
    "method": "launcherCursorClip.launchQuantization.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#launchQuantization().get()"
  }, {
    "method": "launcherCursorClip.launchQuantization.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#launchQuantization().isSubscribed()"
  }, {
    "method": "launcherCursorClip.launchQuantization.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchQuantization().subscribe()"
  }, {
    "method": "launcherCursorClip.launchQuantization.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#launchQuantization().unsubscribe()"
  }, {
    "method": "launcherCursorClip.launchQuantization.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#launchQuantization().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.scrollKeysPageDown",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysPageDown()"
  }, {
    "method": "launcherCursorClip.clearStep",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#clearStep(int, int, int)"
  }, {
    "method": "launcherCursorClip.clearStep",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#clearStep(int, int)"
  }, {
    "method": "launcherCursorClip.clearStepsAtY",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#clearStepsAtY(int, int)"
  }, {
    "method": "launcherCursorClip.getAccent",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Clip#getAccent()"
  }, {
    "method": "launcherCursorClip.getAccent.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getAccent().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getAccent.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().set(double)"
  }, {
    "method": "launcherCursorClip.getAccent.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getAccent().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getAccent.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().inc(double)"
  }, {
    "method": "launcherCursorClip.getAccent.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().setRaw(double)"
  }, {
    "method": "launcherCursorClip.getAccent.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().setImmediately(double)"
  }, {
    "method": "launcherCursorClip.getAccent.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getAccent().incRaw(double)"
  }, {
    "method": "launcherCursorClip.getAccent.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getAccent().get()"
  }, {
    "method": "launcherCursorClip.getAccent.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getAccent().getRaw()"
  }, {
    "method": "launcherCursorClip.getAccent.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getAccent().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getAccent.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getAccent().displayedValue()"
  }, {
    "method": "launcherCursorClip.getAccent.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getAccent().displayedValue().get()"
  }, {
    "method": "launcherCursorClip.getAccent.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getAccent().displayedValue().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getAccent.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getAccent().displayedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getAccent.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().displayedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getAccent.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().displayedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getAccent.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getAccent().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getAccent.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getAccent().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getAccent.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().subscribe()"
  }, {
    "method": "launcherCursorClip.getAccent.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getAccent().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getAccent.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getAccent().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.isLoopEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#isLoopEnabled()"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().set(boolean)"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().toggle()"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isLoopEnabled().get()"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isLoopEnabled().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isLoopEnabled().isSubscribed()"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().subscribe()"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().unsubscribe()"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.isLoopEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#isLoopEnabled().invoke()"
  }, {
    "method": "launcherCursorClip.clearSteps",
    "params": [],
    "result": "void",
    "expression": "void Clip#clearSteps()"
  }, {
    "method": "launcherCursorClip.scrollKeysPageUp",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysPageUp()"
  }, {
    "method": "launcherCursorClip.scrollKeysStepDown",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysStepDown()"
  }, {
    "method": "launcherCursorClip.scrollKeysStepUp",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollKeysStepUp()"
  }, {
    "method": "launcherCursorClip.clearStepsAtX",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#clearStepsAtX(int, int)"
  }, {
    "method": "launcherCursorClip.selectStepContents",
    "params": ["number", "number", "number", "boolean"],
    "result": "void",
    "expression": "void Clip#selectStepContents(int, int, int, boolean)"
  }, {
    "method": "launcherCursorClip.selectStepContents",
    "params": ["number", "number", "boolean"],
    "result": "void",
    "expression": "void Clip#selectStepContents(int, int, boolean)"
  }, {
    "method": "launcherCursorClip.setStep",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#setStep(int, int, int, double)"
  }, {
    "method": "launcherCursorClip.setStep",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#setStep(int, int, int, int, double)"
  }, {
    "method": "launcherCursorClip.transpose",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#transpose(int)"
  }, {
    "method": "launcherCursorClip.launch",
    "params": [],
    "result": "void",
    "expression": "void Clip#launch()"
  }, {
    "method": "launcherCursorClip.quantize",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#quantize(double)"
  }, {
    "method": "launcherCursorClip.scrollStepsStepBackwards",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsStepBackwards()"
  }, {
    "method": "launcherCursorClip.scrollStepsPageForward",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsPageForward()"
  }, {
    "method": "launcherCursorClip.scrollStepsStepForward",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsStepForward()"
  }, {
    "method": "launcherCursorClip.scrollStepsPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void Clip#scrollStepsPageBackwards()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#useLoopStartAsQuantizationReference()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().set(boolean)"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().toggle()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#useLoopStartAsQuantizationReference().get()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#useLoopStartAsQuantizationReference().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#useLoopStartAsQuantizationReference().isSubscribed()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().subscribe()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().unsubscribe()"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.useLoopStartAsQuantizationReference.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#useLoopStartAsQuantizationReference().invoke()"
  }, {
    "method": "launcherCursorClip.scrollToKey",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#scrollToKey(int)"
  }, {
    "method": "launcherCursorClip.scrollToStep",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#scrollToStep(int)"
  }, {
    "method": "launcherCursorClip.canScrollKeysDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollKeysDown()"
  }, {
    "method": "launcherCursorClip.canScrollKeysDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysDown().get()"
  }, {
    "method": "launcherCursorClip.canScrollKeysDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysDown().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.canScrollKeysDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysDown().isSubscribed()"
  }, {
    "method": "launcherCursorClip.canScrollKeysDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysDown().subscribe()"
  }, {
    "method": "launcherCursorClip.canScrollKeysDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysDown().unsubscribe()"
  }, {
    "method": "launcherCursorClip.canScrollKeysDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollKeysDown().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.toggleStep",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#toggleStep(int, int, int)"
  }, {
    "method": "launcherCursorClip.toggleStep",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#toggleStep(int, int, int, int)"
  }, {
    "method": "launcherCursorClip.canScrollKeysUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollKeysUp()"
  }, {
    "method": "launcherCursorClip.canScrollKeysUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysUp().get()"
  }, {
    "method": "launcherCursorClip.canScrollKeysUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysUp().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.canScrollKeysUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollKeysUp().isSubscribed()"
  }, {
    "method": "launcherCursorClip.canScrollKeysUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysUp().subscribe()"
  }, {
    "method": "launcherCursorClip.canScrollKeysUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollKeysUp().unsubscribe()"
  }, {
    "method": "launcherCursorClip.canScrollKeysUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollKeysUp().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getLoopStart",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getLoopStart()"
  }, {
    "method": "launcherCursorClip.getLoopStart.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getLoopStart().getFormatted()"
  }, {
    "method": "launcherCursorClip.getLoopStart.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopStart().get()"
  }, {
    "method": "launcherCursorClip.getLoopStart.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopStart().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getLoopStart.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getLoopStart().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getLoopStart.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopStart().subscribe()"
  }, {
    "method": "launcherCursorClip.getLoopStart.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopStart().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getLoopStart.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getLoopStart().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getLoopStart.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopStart().set(double)"
  }, {
    "method": "launcherCursorClip.getLoopStart.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopStart().inc(double)"
  }, {
    "method": "launcherCursorClip.getPlayStart",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getPlayStart()"
  }, {
    "method": "launcherCursorClip.getPlayStart.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getPlayStart().getFormatted()"
  }, {
    "method": "launcherCursorClip.getPlayStart.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStart().get()"
  }, {
    "method": "launcherCursorClip.getPlayStart.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStart().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getPlayStart.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getPlayStart().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getPlayStart.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStart().subscribe()"
  }, {
    "method": "launcherCursorClip.getPlayStart.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStart().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getPlayStart.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getPlayStart().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getPlayStart.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStart().set(double)"
  }, {
    "method": "launcherCursorClip.getPlayStart.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStart().inc(double)"
  }, {
    "method": "launcherCursorClip.playingStep",
    "params": [],
    "result": "object",
    "expression": "IntegerValue Clip#playingStep()"
  }, {
    "method": "launcherCursorClip.playingStep.get",
    "params": [],
    "result": "number",
    "expression": "int Clip#playingStep().get()"
  }, {
    "method": "launcherCursorClip.playingStep.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Clip#playingStep().getAsInt()"
  }, {
    "method": "launcherCursorClip.playingStep.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#playingStep().isSubscribed()"
  }, {
    "method": "launcherCursorClip.playingStep.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#playingStep().subscribe()"
  }, {
    "method": "launcherCursorClip.playingStep.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#playingStep().unsubscribe()"
  }, {
    "method": "launcherCursorClip.playingStep.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#playingStep().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getPlayStop",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getPlayStop()"
  }, {
    "method": "launcherCursorClip.getPlayStop.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getPlayStop().getFormatted()"
  }, {
    "method": "launcherCursorClip.getPlayStop.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStop().get()"
  }, {
    "method": "launcherCursorClip.getPlayStop.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getPlayStop().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getPlayStop.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getPlayStop().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getPlayStop.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStop().subscribe()"
  }, {
    "method": "launcherCursorClip.getPlayStop.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getPlayStop().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getPlayStop.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getPlayStop().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getPlayStop.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStop().set(double)"
  }, {
    "method": "launcherCursorClip.getPlayStop.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getPlayStop().inc(double)"
  }, {
    "method": "launcherCursorClip.getLoopLength",
    "params": [],
    "result": "object",
    "expression": "SettableBeatTimeValue Clip#getLoopLength()"
  }, {
    "method": "launcherCursorClip.getLoopLength.getFormatted",
    "params": [],
    "result": "string",
    "expression": "String Clip#getLoopLength().getFormatted()"
  }, {
    "method": "launcherCursorClip.getLoopLength.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopLength().get()"
  }, {
    "method": "launcherCursorClip.getLoopLength.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getLoopLength().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getLoopLength.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getLoopLength().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getLoopLength.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopLength().subscribe()"
  }, {
    "method": "launcherCursorClip.getLoopLength.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getLoopLength().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getLoopLength.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getLoopLength().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getLoopLength.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopLength().set(double)"
  }, {
    "method": "launcherCursorClip.getLoopLength.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getLoopLength().inc(double)"
  }, {
    "method": "launcherCursorClip.getTrack.position",
    "params": [],
    "result": "object",
    "expression": "IntegerValue Clip#getTrack().position()"
  }, {
    "method": "launcherCursorClip.getTrack.position.get",
    "params": [],
    "result": "number",
    "expression": "int Clip#getTrack().position().get()"
  }, {
    "method": "launcherCursorClip.getTrack.position.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Clip#getTrack().position().getAsInt()"
  }, {
    "method": "launcherCursorClip.getTrack.position.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().position().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.position.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().position().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.position.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().position().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.position.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().position().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.stop",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().stop()"
  }, {
    "method": "launcherCursorClip.getTrack.setName",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().setName(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().canHoldAudioData()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldAudioData().get()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldAudioData().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldAudioData().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldAudioData.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldAudioData().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().autoMonitor()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().autoMonitor().get()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().autoMonitor().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().autoMonitor().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.autoMonitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().autoMonitor().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().canHoldNoteData()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldNoteData().get()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldNoteData().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().canHoldNoteData().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.canHoldNoteData.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().canHoldNoteData().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.createNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().createNewClip(int, int)"
  }, {
    "method": "launcherCursorClip.getTrack.createNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void Clip#getTrack().createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().getIsPreFader()"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().getIsPreFader().get()"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().getIsPreFader().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().getIsPreFader().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.getIsPreFader.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().getIsPreFader().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.recordNewClip",
    "params": ["number", "object"],
    "result": "void",
    "expression": "void Clip#getTrack().recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "launcherCursorClip.getTrack.recordNewClip",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().recordNewClip(int)"
  }, {
    "method": "launcherCursorClip.getTrack.trackType",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().trackType()"
  }, {
    "method": "launcherCursorClip.getTrack.trackType.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().trackType().get()"
  }, {
    "method": "launcherCursorClip.getTrack.trackType.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().trackType().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.trackType.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().trackType().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.trackType.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().trackType().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.trackType.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().trackType().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.trackType.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().trackType().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.stopNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().stopNote(int, int)"
  }, {
    "method": "launcherCursorClip.getTrack.isQueuedForStop",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isQueuedForStop()"
  }, {
    "method": "launcherCursorClip.getTrack.isQueuedForStop.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isQueuedForStop().get()"
  }, {
    "method": "launcherCursorClip.getTrack.isQueuedForStop.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isQueuedForStop().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.isQueuedForStop.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isQueuedForStop().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.isQueuedForStop.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isQueuedForStop().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isQueuedForStop.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isQueuedForStop().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isQueuedForStop.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.startNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().startNote(int, int)"
  }, {
    "method": "launcherCursorClip.getTrack.selectSlot",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().selectSlot(int)"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().sourceSelector().exists()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().exists().get()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().exists().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().exists().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().exists().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().sourceSelector().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.sourceSelector.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.isStopped",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isStopped()"
  }, {
    "method": "launcherCursorClip.getTrack.isStopped.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isStopped().get()"
  }, {
    "method": "launcherCursorClip.getTrack.isStopped.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isStopped().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.isStopped.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isStopped().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.isStopped.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isStopped().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isStopped.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isStopped().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isStopped.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.arm",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().arm()"
  }, {
    "method": "launcherCursorClip.getTrack.arm.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().arm().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.arm.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.arm.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().arm().get()"
  }, {
    "method": "launcherCursorClip.getTrack.arm.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().arm().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.arm.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().arm().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.arm.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.arm.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.arm.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().arm().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.arm.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().arm().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().monitor()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().monitor().get()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().monitor().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().monitor().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.monitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().monitor().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.returnToArrangement",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().returnToArrangement()"
  }, {
    "method": "launcherCursorClip.getTrack.afterTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().paste()"
  }, {
    "method": "launcherCursorClip.getTrack.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "launcherCursorClip.getTrack.afterTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.afterTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.afterTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().afterTrackInsertionPoint().browse()"
  }, {
    "method": "launcherCursorClip.getTrack.beforeTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().paste()"
  }, {
    "method": "launcherCursorClip.getTrack.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "launcherCursorClip.getTrack.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.beforeTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.beforeTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().beforeTrackInsertionPoint().browse()"
  }, {
    "method": "launcherCursorClip.getTrack.playNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().playNote(int, int)"
  }, {
    "method": "launcherCursorClip.getTrack.sendMidi",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().sendMidi(int, int, int)"
  }, {
    "method": "launcherCursorClip.getTrack.crossFadeMode",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue Clip#getTrack().crossFadeMode()"
  }, {
    "method": "launcherCursorClip.getTrack.crossFadeMode.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().set(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.crossFadeMode.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().crossFadeMode().get()"
  }, {
    "method": "launcherCursorClip.getTrack.crossFadeMode.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().crossFadeMode().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.crossFadeMode.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.crossFadeMode.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.crossFadeMode.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.isGroup",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isGroup()"
  }, {
    "method": "launcherCursorClip.getTrack.isGroup.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isGroup().get()"
  }, {
    "method": "launcherCursorClip.getTrack.isGroup.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isGroup().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.isGroup.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isGroup().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.isGroup.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isGroup().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isGroup.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isGroup().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isGroup.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.duplicate",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().duplicate()"
  }, {
    "method": "launcherCursorClip.getTrack.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue Clip#getTrack().color()"
  }, {
    "method": "launcherCursorClip.getTrack.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().color().set(float, float, float)"
  }, {
    "method": "launcherCursorClip.getTrack.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().color().set(float, float, float, float)"
  }, {
    "method": "launcherCursorClip.getTrack.color.red",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().red()"
  }, {
    "method": "launcherCursorClip.getTrack.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().alpha()"
  }, {
    "method": "launcherCursorClip.getTrack.color.green",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().green()"
  }, {
    "method": "launcherCursorClip.getTrack.color.blue",
    "params": [],
    "result": "number",
    "expression": "float Clip#getTrack().color().blue()"
  }, {
    "method": "launcherCursorClip.getTrack.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().color().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().color().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().color().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().color().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().isActivated()"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isActivated().get()"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isActivated().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isActivated().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.isActivated.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isActivated().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.makeVisibleInMixer",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().makeVisibleInMixer()"
  }, {
    "method": "launcherCursorClip.getTrack.pan",
    "params": [],
    "result": "object",
    "expression": "Parameter Clip#getTrack().pan()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().name()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().name().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().name().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().name().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().name().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().name().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Clip#getTrack().pan().value()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().set(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().inc(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().setRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().setImmediately(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().incRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().value().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().value().getRaw()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().value().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().value().displayedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().value().displayedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().displayedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().value().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.reset",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().reset()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().touch(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().restoreAutomationControl()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Clip#getTrack().pan().modulatedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().modulatedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().modulatedValue().getRaw()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().modulatedValue().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().modulatedValue().displayedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().modulatedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setIndication(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().pan().exists()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().exists().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().exists().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().exists().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().exists().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().exists().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().set(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().inc(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().setImmediately(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().incRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().getRaw()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().pan().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().pan().displayedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().pan().displayedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().pan().displayedValue().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.pan.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().pan().displayedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().displayedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().pan().displayedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.pan.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.mute",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue Clip#getTrack().mute()"
  }, {
    "method": "launcherCursorClip.getTrack.mute.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().mute().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.mute.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.mute.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().mute().get()"
  }, {
    "method": "launcherCursorClip.getTrack.mute.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().mute().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.mute.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().mute().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.mute.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.mute.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.mute.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().mute().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.mute.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().mute().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.solo",
    "params": [],
    "result": "object",
    "expression": "SoloValue Clip#getTrack().solo()"
  }, {
    "method": "launcherCursorClip.getTrack.solo.toggle",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().solo().toggle(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.solo.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().solo().set(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.solo.toggle",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().toggle()"
  }, {
    "method": "launcherCursorClip.getTrack.solo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().solo().get()"
  }, {
    "method": "launcherCursorClip.getTrack.solo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().solo().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.solo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().solo().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.solo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.solo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.solo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().solo().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.solo.invoke",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().solo().invoke()"
  }, {
    "method": "launcherCursorClip.getTrack.volume",
    "params": [],
    "result": "object",
    "expression": "Parameter Clip#getTrack().volume()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().name()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().name().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().name().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().name().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().name().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().name().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue Clip#getTrack().volume().value()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().set(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().inc(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().setRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().setImmediately(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().incRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().value().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().value().getRaw()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().value().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().value().displayedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().value().displayedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().displayedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().value().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.reset",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().reset()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().touch(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().restoreAutomationControl()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue Clip#getTrack().volume().modulatedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().modulatedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().modulatedValue().getRaw()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().modulatedValue().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().modulatedValue().displayedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().modulatedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setIndication(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().volume().exists()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().exists().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().exists().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().exists().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().exists().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().exists().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().set(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().inc(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().setImmediately(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().incRaw(double)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.get",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().getRaw()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double Clip#getTrack().volume().getAsDouble()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#getTrack().volume().displayedValue()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().volume().displayedValue().get()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().volume().displayedValue().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.volume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().volume().displayedValue().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().displayedValue().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().volume().displayedValue().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.volume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.makeVisibleInArranger",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().makeVisibleInArranger()"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.isNotePlaying",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().playingNotes().isNotePlaying(int)"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.get",
    "params": [],
    "result": "any[]",
    "expression": "Object[] Clip#getTrack().playingNotes().get()"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object Clip#getTrack().playingNotes().get(int)"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().playingNotes().isEmpty()"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().playingNotes().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().playingNotes().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().playingNotes().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.playingNotes.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.isMutedBySolo",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().isMutedBySolo()"
  }, {
    "method": "launcherCursorClip.getTrack.isMutedBySolo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isMutedBySolo().get()"
  }, {
    "method": "launcherCursorClip.getTrack.isMutedBySolo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isMutedBySolo().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.isMutedBySolo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isMutedBySolo().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.isMutedBySolo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isMutedBySolo().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isMutedBySolo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().isMutedBySolo().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.isMutedBySolo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.selectInMixer",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().selectInMixer()"
  }, {
    "method": "launcherCursorClip.getTrack.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().deleteObject()"
  }, {
    "method": "launcherCursorClip.getTrack.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue Clip#getTrack().name()"
  }, {
    "method": "launcherCursorClip.getTrack.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().name().set(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#getTrack().name().get()"
  }, {
    "method": "launcherCursorClip.getTrack.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#getTrack().name().getLimited(int)"
  }, {
    "method": "launcherCursorClip.getTrack.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().name().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().name().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().name().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().name().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().selectInEditor()"
  }, {
    "method": "launcherCursorClip.getTrack.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "launcherCursorClip.getTrack.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "launcherCursorClip.getTrack.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "launcherCursorClip.getTrack.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "launcherCursorClip.getTrack.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "launcherCursorClip.getTrack.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "launcherCursorClip.getTrack.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "launcherCursorClip.getTrack.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#getTrack().exists()"
  }, {
    "method": "launcherCursorClip.getTrack.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().exists().get()"
  }, {
    "method": "launcherCursorClip.getTrack.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().exists().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.getTrack.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().exists().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().exists().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().exists().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().exists().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.vuMeter",
    "params": [],
    "result": "object",
    "expression": "VuMeterValue Clip#getTrack().vuMeter()"
  }, {
    "method": "launcherCursorClip.getTrack.vuMeter.get",
    "params": ["number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel Clip#getTrack().vuMeter().get(int, boolean)"
  }, {
    "method": "launcherCursorClip.getTrack.vuMeter.values",
    "params": [],
    "result": "object",
    "expression": "Collection Clip#getTrack().vuMeter().values()"
  }, {
    "method": "launcherCursorClip.getTrack.vuMeter.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#getTrack().vuMeter().isSubscribed()"
  }, {
    "method": "launcherCursorClip.getTrack.vuMeter.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().vuMeter().subscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.vuMeter.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#getTrack().vuMeter().unsubscribe()"
  }, {
    "method": "launcherCursorClip.getTrack.vuMeter.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#getTrack().vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue Clip#clipLauncherSlot().color()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().set(float, float, float)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().set(float, float, float, float)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.red",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().red()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().alpha()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.green",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().green()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.blue",
    "params": [],
    "result": "number",
    "expression": "float Clip#clipLauncherSlot().color().blue()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().color().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().color().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.select",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().select()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.record",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().record()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.browseToInsertClip",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().browseToInsertClip()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.duplicateClip",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().duplicateClip()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.showInEditor",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().showInEditor()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.createEmptyClip",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().createEmptyClip(int)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isSelected()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSelected().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSelected().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSelected().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isSelected().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isSelected().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaying",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isPlaying()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaying.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaying().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaying.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaying().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaying.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaying().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaying.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaying().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaying.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaying().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaying.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaying().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isPlaybackQueued()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaybackQueued().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaybackQueued().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isPlaybackQueued().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaybackQueued().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaybackQueued().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isPlaybackQueued().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isStopQueued",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isStopQueued()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isStopQueued.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isStopQueued().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isStopQueued.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isStopQueued().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isStopQueued.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isStopQueued().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isStopQueued.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isStopQueued().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isStopQueued.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isStopQueued().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isStopQueued.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isStopQueued().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecordingQueued",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isRecordingQueued()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecordingQueued.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecordingQueued().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecordingQueued.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecordingQueued().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecordingQueued.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecordingQueued().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecordingQueued.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecordingQueued().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecordingQueued.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecordingQueued().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecordingQueued.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecordingQueued().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecording",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().isRecording()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecording.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecording().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecording.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecording().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecording.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isRecording().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecording.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecording().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecording.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecording().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isRecording.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().isRecording().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.hasContent",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().hasContent()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.hasContent.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().hasContent().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.hasContent.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().hasContent().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.hasContent.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().hasContent().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.hasContent.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().hasContent().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.hasContent.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().hasContent().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.hasContent.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().hasContent().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.name",
    "params": [],
    "result": "object",
    "expression": "StringValue Clip#clipLauncherSlot().name()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.name.get",
    "params": [],
    "result": "string",
    "expression": "String Clip#clipLauncherSlot().name().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String Clip#clipLauncherSlot().name().getLimited(int)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().name().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().name().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().name().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().name().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.launch",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().launch()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.previousSceneInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().paste()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.previousSceneInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.previousSceneInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.previousSceneInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.previousSceneInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().previousSceneInsertionPoint().browse()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.replaceInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().paste()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.replaceInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.replaceInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.replaceInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.replaceInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().replaceInsertionPoint().browse()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.nextSceneInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().paste()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.nextSceneInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.nextSceneInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.nextSceneInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.nextSceneInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().nextSceneInsertionPoint().browse()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.sceneIndex",
    "params": [],
    "result": "object",
    "expression": "IntegerValue Clip#clipLauncherSlot().sceneIndex()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.sceneIndex.get",
    "params": [],
    "result": "number",
    "expression": "int Clip#clipLauncherSlot().sceneIndex().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.sceneIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int Clip#clipLauncherSlot().sceneIndex().getAsInt()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.sceneIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().sceneIndex().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.sceneIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().sceneIndex().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.sceneIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().sceneIndex().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.sceneIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().sceneIndex().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().setIndication(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().deleteObject()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#clipLauncherSlot().exists()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().exists().get()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().exists().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().exists().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().exists().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().exists().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().exists().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#clipLauncherSlot().isSubscribed()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().subscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().unsubscribe()"
  }, {
    "method": "launcherCursorClip.clipLauncherSlot.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#clipLauncherSlot().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.canScrollStepsBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollStepsBackwards()"
  }, {
    "method": "launcherCursorClip.canScrollStepsBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsBackwards().get()"
  }, {
    "method": "launcherCursorClip.canScrollStepsBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsBackwards().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.canScrollStepsBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsBackwards().isSubscribed()"
  }, {
    "method": "launcherCursorClip.canScrollStepsBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsBackwards().subscribe()"
  }, {
    "method": "launcherCursorClip.canScrollStepsBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsBackwards().unsubscribe()"
  }, {
    "method": "launcherCursorClip.canScrollStepsBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollStepsBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.canScrollStepsForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#canScrollStepsForwards()"
  }, {
    "method": "launcherCursorClip.canScrollStepsForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsForwards().get()"
  }, {
    "method": "launcherCursorClip.canScrollStepsForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsForwards().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.canScrollStepsForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#canScrollStepsForwards().isSubscribed()"
  }, {
    "method": "launcherCursorClip.canScrollStepsForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsForwards().subscribe()"
  }, {
    "method": "launcherCursorClip.canScrollStepsForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#canScrollStepsForwards().unsubscribe()"
  }, {
    "method": "launcherCursorClip.canScrollStepsForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#canScrollStepsForwards().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.setStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void Clip#setStepSize(double)"
  }, {
    "method": "launcherCursorClip.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue Clip#exists()"
  }, {
    "method": "launcherCursorClip.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#exists().get()"
  }, {
    "method": "launcherCursorClip.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#exists().getAsBoolean()"
  }, {
    "method": "launcherCursorClip.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#exists().isSubscribed()"
  }, {
    "method": "launcherCursorClip.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#exists().subscribe()"
  }, {
    "method": "launcherCursorClip.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#exists().unsubscribe()"
  }, {
    "method": "launcherCursorClip.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#exists().setIsSubscribed(boolean)"
  }, {
    "method": "launcherCursorClip.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean Clip#isSubscribed()"
  }, {
    "method": "launcherCursorClip.subscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#subscribe()"
  }, {
    "method": "launcherCursorClip.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void Clip#unsubscribe()"
  }, {
    "method": "launcherCursorClip.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void Clip#setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.selectParent",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectParent()"
  }, {
    "method": "cursorTrack.selectFirstChild",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectFirstChild()"
  }, {
    "method": "cursorTrack.setCursorNavigationMode",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#setCursorNavigationMode(com.bitwig.extension.controller.api.CursorNavigationMode)"
  }, {
    "method": "cursorTrack.duplicate",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#duplicate()"
  }, {
    "method": "cursorTrack.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue CursorTrack#color()"
  }, {
    "method": "cursorTrack.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void CursorTrack#color().set(float, float, float)"
  }, {
    "method": "cursorTrack.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void CursorTrack#color().set(float, float, float, float)"
  }, {
    "method": "cursorTrack.color.red",
    "params": [],
    "result": "number",
    "expression": "float CursorTrack#color().red()"
  }, {
    "method": "cursorTrack.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float CursorTrack#color().alpha()"
  }, {
    "method": "cursorTrack.color.green",
    "params": [],
    "result": "number",
    "expression": "float CursorTrack#color().green()"
  }, {
    "method": "cursorTrack.color.blue",
    "params": [],
    "result": "number",
    "expression": "float CursorTrack#color().blue()"
  }, {
    "method": "cursorTrack.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#color().isSubscribed()"
  }, {
    "method": "cursorTrack.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#color().subscribe()"
  }, {
    "method": "cursorTrack.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#color().unsubscribe()"
  }, {
    "method": "cursorTrack.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#color().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.isActivated",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#isActivated()"
  }, {
    "method": "cursorTrack.isActivated.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isActivated().set(boolean)"
  }, {
    "method": "cursorTrack.isActivated.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isActivated().toggle()"
  }, {
    "method": "cursorTrack.isActivated.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isActivated().get()"
  }, {
    "method": "cursorTrack.isActivated.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isActivated().getAsBoolean()"
  }, {
    "method": "cursorTrack.isActivated.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isActivated().isSubscribed()"
  }, {
    "method": "cursorTrack.isActivated.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isActivated().subscribe()"
  }, {
    "method": "cursorTrack.isActivated.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isActivated().unsubscribe()"
  }, {
    "method": "cursorTrack.isActivated.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.isActivated.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isActivated().invoke()"
  }, {
    "method": "cursorTrack.makeVisibleInMixer",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#makeVisibleInMixer()"
  }, {
    "method": "cursorTrack.pan",
    "params": [],
    "result": "object",
    "expression": "Parameter CursorTrack#pan()"
  }, {
    "method": "cursorTrack.pan.name",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#pan().name()"
  }, {
    "method": "cursorTrack.pan.name.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#pan().name().get()"
  }, {
    "method": "cursorTrack.pan.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#pan().name().getLimited(int)"
  }, {
    "method": "cursorTrack.pan.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().name().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().name().subscribe()"
  }, {
    "method": "cursorTrack.pan.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().name().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.pan.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue CursorTrack#pan().value()"
  }, {
    "method": "cursorTrack.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.pan.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().set(double)"
  }, {
    "method": "cursorTrack.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.pan.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().inc(double)"
  }, {
    "method": "cursorTrack.pan.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().setRaw(double)"
  }, {
    "method": "cursorTrack.pan.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().setImmediately(double)"
  }, {
    "method": "cursorTrack.pan.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().incRaw(double)"
  }, {
    "method": "cursorTrack.pan.value.get",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().value().get()"
  }, {
    "method": "cursorTrack.pan.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().value().getRaw()"
  }, {
    "method": "cursorTrack.pan.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().value().getAsDouble()"
  }, {
    "method": "cursorTrack.pan.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#pan().value().displayedValue()"
  }, {
    "method": "cursorTrack.pan.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#pan().value().displayedValue().get()"
  }, {
    "method": "cursorTrack.pan.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "cursorTrack.pan.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().value().displayedValue().subscribe()"
  }, {
    "method": "cursorTrack.pan.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.pan.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().value().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().value().subscribe()"
  }, {
    "method": "cursorTrack.pan.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().value().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.pan.reset",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().reset()"
  }, {
    "method": "cursorTrack.pan.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().touch(boolean)"
  }, {
    "method": "cursorTrack.pan.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().restoreAutomationControl()"
  }, {
    "method": "cursorTrack.pan.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue CursorTrack#pan().modulatedValue()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().modulatedValue().get()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().modulatedValue().getRaw()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().modulatedValue().getAsDouble()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#pan().modulatedValue().displayedValue()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "cursorTrack.pan.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.pan.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().modulatedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().modulatedValue().subscribe()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().modulatedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.pan.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().setIndication(boolean)"
  }, {
    "method": "cursorTrack.pan.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#pan().exists()"
  }, {
    "method": "cursorTrack.pan.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().exists().get()"
  }, {
    "method": "cursorTrack.pan.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().exists().getAsBoolean()"
  }, {
    "method": "cursorTrack.pan.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().exists().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().exists().subscribe()"
  }, {
    "method": "cursorTrack.pan.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().exists().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.pan.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().subscribe()"
  }, {
    "method": "cursorTrack.pan.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.pan.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().set(double)"
  }, {
    "method": "cursorTrack.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.pan.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().inc(double)"
  }, {
    "method": "cursorTrack.pan.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().setRaw(double)"
  }, {
    "method": "cursorTrack.pan.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().setImmediately(double)"
  }, {
    "method": "cursorTrack.pan.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#pan().incRaw(double)"
  }, {
    "method": "cursorTrack.pan.get",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().get()"
  }, {
    "method": "cursorTrack.pan.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().getRaw()"
  }, {
    "method": "cursorTrack.pan.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#pan().getAsDouble()"
  }, {
    "method": "cursorTrack.pan.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#pan().displayedValue()"
  }, {
    "method": "cursorTrack.pan.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#pan().displayedValue().get()"
  }, {
    "method": "cursorTrack.pan.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#pan().displayedValue().getLimited(int)"
  }, {
    "method": "cursorTrack.pan.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#pan().displayedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.pan.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().displayedValue().subscribe()"
  }, {
    "method": "cursorTrack.pan.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#pan().displayedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.pan.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.mute",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#mute()"
  }, {
    "method": "cursorTrack.mute.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#mute().set(boolean)"
  }, {
    "method": "cursorTrack.mute.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#mute().toggle()"
  }, {
    "method": "cursorTrack.mute.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#mute().get()"
  }, {
    "method": "cursorTrack.mute.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#mute().getAsBoolean()"
  }, {
    "method": "cursorTrack.mute.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#mute().isSubscribed()"
  }, {
    "method": "cursorTrack.mute.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#mute().subscribe()"
  }, {
    "method": "cursorTrack.mute.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#mute().unsubscribe()"
  }, {
    "method": "cursorTrack.mute.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#mute().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.mute.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#mute().invoke()"
  }, {
    "method": "cursorTrack.solo",
    "params": [],
    "result": "object",
    "expression": "SoloValue CursorTrack#solo()"
  }, {
    "method": "cursorTrack.solo.toggle",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#solo().toggle(boolean)"
  }, {
    "method": "cursorTrack.solo.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#solo().set(boolean)"
  }, {
    "method": "cursorTrack.solo.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#solo().toggle()"
  }, {
    "method": "cursorTrack.solo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#solo().get()"
  }, {
    "method": "cursorTrack.solo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#solo().getAsBoolean()"
  }, {
    "method": "cursorTrack.solo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#solo().isSubscribed()"
  }, {
    "method": "cursorTrack.solo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#solo().subscribe()"
  }, {
    "method": "cursorTrack.solo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#solo().unsubscribe()"
  }, {
    "method": "cursorTrack.solo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#solo().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.solo.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#solo().invoke()"
  }, {
    "method": "cursorTrack.volume",
    "params": [],
    "result": "object",
    "expression": "Parameter CursorTrack#volume()"
  }, {
    "method": "cursorTrack.volume.name",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#volume().name()"
  }, {
    "method": "cursorTrack.volume.name.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#volume().name().get()"
  }, {
    "method": "cursorTrack.volume.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#volume().name().getLimited(int)"
  }, {
    "method": "cursorTrack.volume.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().name().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().name().subscribe()"
  }, {
    "method": "cursorTrack.volume.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().name().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.volume.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue CursorTrack#volume().value()"
  }, {
    "method": "cursorTrack.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.volume.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().set(double)"
  }, {
    "method": "cursorTrack.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.volume.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().inc(double)"
  }, {
    "method": "cursorTrack.volume.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().setRaw(double)"
  }, {
    "method": "cursorTrack.volume.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().setImmediately(double)"
  }, {
    "method": "cursorTrack.volume.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().incRaw(double)"
  }, {
    "method": "cursorTrack.volume.value.get",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().value().get()"
  }, {
    "method": "cursorTrack.volume.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().value().getRaw()"
  }, {
    "method": "cursorTrack.volume.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().value().getAsDouble()"
  }, {
    "method": "cursorTrack.volume.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#volume().value().displayedValue()"
  }, {
    "method": "cursorTrack.volume.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#volume().value().displayedValue().get()"
  }, {
    "method": "cursorTrack.volume.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "cursorTrack.volume.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().value().displayedValue().subscribe()"
  }, {
    "method": "cursorTrack.volume.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.volume.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().value().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().value().subscribe()"
  }, {
    "method": "cursorTrack.volume.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().value().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.volume.reset",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().reset()"
  }, {
    "method": "cursorTrack.volume.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().touch(boolean)"
  }, {
    "method": "cursorTrack.volume.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().restoreAutomationControl()"
  }, {
    "method": "cursorTrack.volume.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue CursorTrack#volume().modulatedValue()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().modulatedValue().get()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().modulatedValue().getRaw()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().modulatedValue().getAsDouble()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#volume().modulatedValue().displayedValue()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "cursorTrack.volume.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.volume.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().modulatedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().modulatedValue().subscribe()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().modulatedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.volume.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().setIndication(boolean)"
  }, {
    "method": "cursorTrack.volume.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#volume().exists()"
  }, {
    "method": "cursorTrack.volume.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().exists().get()"
  }, {
    "method": "cursorTrack.volume.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().exists().getAsBoolean()"
  }, {
    "method": "cursorTrack.volume.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().exists().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().exists().subscribe()"
  }, {
    "method": "cursorTrack.volume.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().exists().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.volume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().subscribe()"
  }, {
    "method": "cursorTrack.volume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.volume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().set(double)"
  }, {
    "method": "cursorTrack.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorTrack.volume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().inc(double)"
  }, {
    "method": "cursorTrack.volume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().setRaw(double)"
  }, {
    "method": "cursorTrack.volume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().setImmediately(double)"
  }, {
    "method": "cursorTrack.volume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#volume().incRaw(double)"
  }, {
    "method": "cursorTrack.volume.get",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().get()"
  }, {
    "method": "cursorTrack.volume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().getRaw()"
  }, {
    "method": "cursorTrack.volume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorTrack#volume().getAsDouble()"
  }, {
    "method": "cursorTrack.volume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#volume().displayedValue()"
  }, {
    "method": "cursorTrack.volume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#volume().displayedValue().get()"
  }, {
    "method": "cursorTrack.volume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#volume().displayedValue().getLimited(int)"
  }, {
    "method": "cursorTrack.volume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#volume().displayedValue().isSubscribed()"
  }, {
    "method": "cursorTrack.volume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().displayedValue().subscribe()"
  }, {
    "method": "cursorTrack.volume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#volume().displayedValue().unsubscribe()"
  }, {
    "method": "cursorTrack.volume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.makeVisibleInArranger",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#makeVisibleInArranger()"
  }, {
    "method": "cursorTrack.playingNotes.isNotePlaying",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorTrack#playingNotes().isNotePlaying(int)"
  }, {
    "method": "cursorTrack.playingNotes.get",
    "params": [],
    "result": "any[]",
    "expression": "Object[] CursorTrack#playingNotes().get()"
  }, {
    "method": "cursorTrack.playingNotes.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object CursorTrack#playingNotes().get(int)"
  }, {
    "method": "cursorTrack.playingNotes.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#playingNotes().isEmpty()"
  }, {
    "method": "cursorTrack.playingNotes.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#playingNotes().isSubscribed()"
  }, {
    "method": "cursorTrack.playingNotes.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#playingNotes().subscribe()"
  }, {
    "method": "cursorTrack.playingNotes.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#playingNotes().unsubscribe()"
  }, {
    "method": "cursorTrack.playingNotes.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.isMutedBySolo",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#isMutedBySolo()"
  }, {
    "method": "cursorTrack.isMutedBySolo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isMutedBySolo().get()"
  }, {
    "method": "cursorTrack.isMutedBySolo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isMutedBySolo().getAsBoolean()"
  }, {
    "method": "cursorTrack.isMutedBySolo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isMutedBySolo().isSubscribed()"
  }, {
    "method": "cursorTrack.isMutedBySolo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isMutedBySolo().subscribe()"
  }, {
    "method": "cursorTrack.isMutedBySolo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isMutedBySolo().unsubscribe()"
  }, {
    "method": "cursorTrack.isMutedBySolo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.selectInMixer",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectInMixer()"
  }, {
    "method": "cursorTrack.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#deleteObject()"
  }, {
    "method": "cursorTrack.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue CursorTrack#name()"
  }, {
    "method": "cursorTrack.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#name().set(java.lang.String)"
  }, {
    "method": "cursorTrack.name.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#name().get()"
  }, {
    "method": "cursorTrack.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#name().getLimited(int)"
  }, {
    "method": "cursorTrack.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#name().isSubscribed()"
  }, {
    "method": "cursorTrack.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#name().subscribe()"
  }, {
    "method": "cursorTrack.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#name().unsubscribe()"
  }, {
    "method": "cursorTrack.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectInEditor()"
  }, {
    "method": "cursorTrack.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorTrack.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorTrack.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorTrack.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorTrack.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorTrack.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorTrack.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorTrack.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorTrack.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorTrack.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorTrack.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#exists()"
  }, {
    "method": "cursorTrack.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#exists().get()"
  }, {
    "method": "cursorTrack.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#exists().getAsBoolean()"
  }, {
    "method": "cursorTrack.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#exists().isSubscribed()"
  }, {
    "method": "cursorTrack.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#exists().subscribe()"
  }, {
    "method": "cursorTrack.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#exists().unsubscribe()"
  }, {
    "method": "cursorTrack.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isSubscribed()"
  }, {
    "method": "cursorTrack.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#subscribe()"
  }, {
    "method": "cursorTrack.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#unsubscribe()"
  }, {
    "method": "cursorTrack.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.hasNext",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#hasNext()"
  }, {
    "method": "cursorTrack.hasNext.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#hasNext().get()"
  }, {
    "method": "cursorTrack.hasNext.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#hasNext().getAsBoolean()"
  }, {
    "method": "cursorTrack.hasNext.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#hasNext().isSubscribed()"
  }, {
    "method": "cursorTrack.hasNext.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#hasNext().subscribe()"
  }, {
    "method": "cursorTrack.hasNext.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#hasNext().unsubscribe()"
  }, {
    "method": "cursorTrack.hasNext.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#hasNext().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.hasPrevious",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#hasPrevious()"
  }, {
    "method": "cursorTrack.hasPrevious.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#hasPrevious().get()"
  }, {
    "method": "cursorTrack.hasPrevious.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#hasPrevious().getAsBoolean()"
  }, {
    "method": "cursorTrack.hasPrevious.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#hasPrevious().isSubscribed()"
  }, {
    "method": "cursorTrack.hasPrevious.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#hasPrevious().subscribe()"
  }, {
    "method": "cursorTrack.hasPrevious.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#hasPrevious().unsubscribe()"
  }, {
    "method": "cursorTrack.hasPrevious.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#hasPrevious().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.selectFirst",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectFirst()"
  }, {
    "method": "cursorTrack.selectPrevious",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectPrevious()"
  }, {
    "method": "cursorTrack.selectLast",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectLast()"
  }, {
    "method": "cursorTrack.selectNext",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#selectNext()"
  }, {
    "method": "cursorTrack.isPinned",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#isPinned()"
  }, {
    "method": "cursorTrack.isPinned.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isPinned().set(boolean)"
  }, {
    "method": "cursorTrack.isPinned.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isPinned().toggle()"
  }, {
    "method": "cursorTrack.isPinned.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isPinned().get()"
  }, {
    "method": "cursorTrack.isPinned.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isPinned().getAsBoolean()"
  }, {
    "method": "cursorTrack.isPinned.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isPinned().isSubscribed()"
  }, {
    "method": "cursorTrack.isPinned.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isPinned().subscribe()"
  }, {
    "method": "cursorTrack.isPinned.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isPinned().unsubscribe()"
  }, {
    "method": "cursorTrack.isPinned.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isPinned().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.isPinned.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isPinned().invoke()"
  }, {
    "method": "cursorTrack.position",
    "params": [],
    "result": "object",
    "expression": "IntegerValue CursorTrack#position()"
  }, {
    "method": "cursorTrack.position.get",
    "params": [],
    "result": "number",
    "expression": "int CursorTrack#position().get()"
  }, {
    "method": "cursorTrack.position.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int CursorTrack#position().getAsInt()"
  }, {
    "method": "cursorTrack.position.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#position().isSubscribed()"
  }, {
    "method": "cursorTrack.position.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#position().subscribe()"
  }, {
    "method": "cursorTrack.position.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#position().unsubscribe()"
  }, {
    "method": "cursorTrack.position.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#position().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.stop",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#stop()"
  }, {
    "method": "cursorTrack.setName",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#setName(java.lang.String)"
  }, {
    "method": "cursorTrack.canHoldAudioData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#canHoldAudioData()"
  }, {
    "method": "cursorTrack.canHoldAudioData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#canHoldAudioData().set(boolean)"
  }, {
    "method": "cursorTrack.canHoldAudioData.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldAudioData().toggle()"
  }, {
    "method": "cursorTrack.canHoldAudioData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#canHoldAudioData().get()"
  }, {
    "method": "cursorTrack.canHoldAudioData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#canHoldAudioData().getAsBoolean()"
  }, {
    "method": "cursorTrack.canHoldAudioData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#canHoldAudioData().isSubscribed()"
  }, {
    "method": "cursorTrack.canHoldAudioData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldAudioData().subscribe()"
  }, {
    "method": "cursorTrack.canHoldAudioData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldAudioData().unsubscribe()"
  }, {
    "method": "cursorTrack.canHoldAudioData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.canHoldAudioData.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldAudioData().invoke()"
  }, {
    "method": "cursorTrack.autoMonitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#autoMonitor()"
  }, {
    "method": "cursorTrack.autoMonitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#autoMonitor().set(boolean)"
  }, {
    "method": "cursorTrack.autoMonitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#autoMonitor().toggle()"
  }, {
    "method": "cursorTrack.autoMonitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#autoMonitor().get()"
  }, {
    "method": "cursorTrack.autoMonitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#autoMonitor().getAsBoolean()"
  }, {
    "method": "cursorTrack.autoMonitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#autoMonitor().isSubscribed()"
  }, {
    "method": "cursorTrack.autoMonitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#autoMonitor().subscribe()"
  }, {
    "method": "cursorTrack.autoMonitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#autoMonitor().unsubscribe()"
  }, {
    "method": "cursorTrack.autoMonitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.autoMonitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#autoMonitor().invoke()"
  }, {
    "method": "cursorTrack.canHoldNoteData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#canHoldNoteData()"
  }, {
    "method": "cursorTrack.canHoldNoteData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#canHoldNoteData().set(boolean)"
  }, {
    "method": "cursorTrack.canHoldNoteData.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldNoteData().toggle()"
  }, {
    "method": "cursorTrack.canHoldNoteData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#canHoldNoteData().get()"
  }, {
    "method": "cursorTrack.canHoldNoteData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#canHoldNoteData().getAsBoolean()"
  }, {
    "method": "cursorTrack.canHoldNoteData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#canHoldNoteData().isSubscribed()"
  }, {
    "method": "cursorTrack.canHoldNoteData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldNoteData().subscribe()"
  }, {
    "method": "cursorTrack.canHoldNoteData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldNoteData().unsubscribe()"
  }, {
    "method": "cursorTrack.canHoldNoteData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.canHoldNoteData.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#canHoldNoteData().invoke()"
  }, {
    "method": "cursorTrack.createNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#createNewClip(int, int)"
  }, {
    "method": "cursorTrack.createNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void CursorTrack#createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "cursorTrack.getIsPreFader",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#getIsPreFader()"
  }, {
    "method": "cursorTrack.getIsPreFader.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#getIsPreFader().set(boolean)"
  }, {
    "method": "cursorTrack.getIsPreFader.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#getIsPreFader().toggle()"
  }, {
    "method": "cursorTrack.getIsPreFader.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#getIsPreFader().get()"
  }, {
    "method": "cursorTrack.getIsPreFader.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#getIsPreFader().getAsBoolean()"
  }, {
    "method": "cursorTrack.getIsPreFader.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#getIsPreFader().isSubscribed()"
  }, {
    "method": "cursorTrack.getIsPreFader.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#getIsPreFader().subscribe()"
  }, {
    "method": "cursorTrack.getIsPreFader.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#getIsPreFader().unsubscribe()"
  }, {
    "method": "cursorTrack.getIsPreFader.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.getIsPreFader.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#getIsPreFader().invoke()"
  }, {
    "method": "cursorTrack.recordNewClip",
    "params": ["number", "object"],
    "result": "void",
    "expression": "void CursorTrack#recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "cursorTrack.recordNewClip",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#recordNewClip(int)"
  }, {
    "method": "cursorTrack.trackType",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorTrack#trackType()"
  }, {
    "method": "cursorTrack.trackType.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#trackType().get()"
  }, {
    "method": "cursorTrack.trackType.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorTrack#trackType().getLimited(int)"
  }, {
    "method": "cursorTrack.trackType.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#trackType().isSubscribed()"
  }, {
    "method": "cursorTrack.trackType.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#trackType().subscribe()"
  }, {
    "method": "cursorTrack.trackType.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#trackType().unsubscribe()"
  }, {
    "method": "cursorTrack.trackType.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#trackType().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.stopNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#stopNote(int, int)"
  }, {
    "method": "cursorTrack.isQueuedForStop",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#isQueuedForStop()"
  }, {
    "method": "cursorTrack.isQueuedForStop.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isQueuedForStop().get()"
  }, {
    "method": "cursorTrack.isQueuedForStop.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isQueuedForStop().getAsBoolean()"
  }, {
    "method": "cursorTrack.isQueuedForStop.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isQueuedForStop().isSubscribed()"
  }, {
    "method": "cursorTrack.isQueuedForStop.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isQueuedForStop().subscribe()"
  }, {
    "method": "cursorTrack.isQueuedForStop.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isQueuedForStop().unsubscribe()"
  }, {
    "method": "cursorTrack.isQueuedForStop.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.startNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#startNote(int, int)"
  }, {
    "method": "cursorTrack.selectSlot",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#selectSlot(int)"
  }, {
    "method": "cursorTrack.sourceSelector.hasNoteInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "cursorTrack.sourceSelector.hasNoteInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "cursorTrack.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "cursorTrack.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "cursorTrack.sourceSelector.hasNoteInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.sourceSelector.hasAudioInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "cursorTrack.sourceSelector.hasAudioInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "cursorTrack.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "cursorTrack.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "cursorTrack.sourceSelector.hasAudioInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.sourceSelector.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#sourceSelector().exists()"
  }, {
    "method": "cursorTrack.sourceSelector.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().exists().get()"
  }, {
    "method": "cursorTrack.sourceSelector.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "cursorTrack.sourceSelector.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().exists().isSubscribed()"
  }, {
    "method": "cursorTrack.sourceSelector.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().exists().subscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().exists().unsubscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.sourceSelector.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#sourceSelector().isSubscribed()"
  }, {
    "method": "cursorTrack.sourceSelector.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().subscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().unsubscribe()"
  }, {
    "method": "cursorTrack.sourceSelector.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.isStopped",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#isStopped()"
  }, {
    "method": "cursorTrack.isStopped.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isStopped().get()"
  }, {
    "method": "cursorTrack.isStopped.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isStopped().getAsBoolean()"
  }, {
    "method": "cursorTrack.isStopped.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isStopped().isSubscribed()"
  }, {
    "method": "cursorTrack.isStopped.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isStopped().subscribe()"
  }, {
    "method": "cursorTrack.isStopped.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isStopped().unsubscribe()"
  }, {
    "method": "cursorTrack.isStopped.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.arm",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#arm()"
  }, {
    "method": "cursorTrack.arm.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#arm().set(boolean)"
  }, {
    "method": "cursorTrack.arm.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#arm().toggle()"
  }, {
    "method": "cursorTrack.arm.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#arm().get()"
  }, {
    "method": "cursorTrack.arm.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#arm().getAsBoolean()"
  }, {
    "method": "cursorTrack.arm.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#arm().isSubscribed()"
  }, {
    "method": "cursorTrack.arm.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#arm().subscribe()"
  }, {
    "method": "cursorTrack.arm.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#arm().unsubscribe()"
  }, {
    "method": "cursorTrack.arm.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#arm().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.arm.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#arm().invoke()"
  }, {
    "method": "cursorTrack.monitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorTrack#monitor()"
  }, {
    "method": "cursorTrack.monitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#monitor().set(boolean)"
  }, {
    "method": "cursorTrack.monitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#monitor().toggle()"
  }, {
    "method": "cursorTrack.monitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#monitor().get()"
  }, {
    "method": "cursorTrack.monitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#monitor().getAsBoolean()"
  }, {
    "method": "cursorTrack.monitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#monitor().isSubscribed()"
  }, {
    "method": "cursorTrack.monitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#monitor().subscribe()"
  }, {
    "method": "cursorTrack.monitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#monitor().unsubscribe()"
  }, {
    "method": "cursorTrack.monitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#monitor().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.monitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#monitor().invoke()"
  }, {
    "method": "cursorTrack.returnToArrangement",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#returnToArrangement()"
  }, {
    "method": "cursorTrack.afterTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#afterTrackInsertionPoint().paste()"
  }, {
    "method": "cursorTrack.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorTrack.afterTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorTrack.afterTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorTrack.afterTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#afterTrackInsertionPoint().browse()"
  }, {
    "method": "cursorTrack.beforeTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#beforeTrackInsertionPoint().paste()"
  }, {
    "method": "cursorTrack.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorTrack#beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorTrack.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorTrack.beforeTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorTrack.beforeTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#beforeTrackInsertionPoint().browse()"
  }, {
    "method": "cursorTrack.playNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorTrack#playNote(int, int)"
  }, {
    "method": "cursorTrack.sendMidi",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void CursorTrack#sendMidi(int, int, int)"
  }, {
    "method": "cursorTrack.crossFadeMode",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue CursorTrack#crossFadeMode()"
  }, {
    "method": "cursorTrack.crossFadeMode.set",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorTrack#crossFadeMode().set(java.lang.String)"
  }, {
    "method": "cursorTrack.crossFadeMode.get",
    "params": [],
    "result": "string",
    "expression": "String CursorTrack#crossFadeMode().get()"
  }, {
    "method": "cursorTrack.crossFadeMode.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#crossFadeMode().isSubscribed()"
  }, {
    "method": "cursorTrack.crossFadeMode.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#crossFadeMode().subscribe()"
  }, {
    "method": "cursorTrack.crossFadeMode.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#crossFadeMode().unsubscribe()"
  }, {
    "method": "cursorTrack.crossFadeMode.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.isGroup",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorTrack#isGroup()"
  }, {
    "method": "cursorTrack.isGroup.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isGroup().get()"
  }, {
    "method": "cursorTrack.isGroup.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isGroup().getAsBoolean()"
  }, {
    "method": "cursorTrack.isGroup.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#isGroup().isSubscribed()"
  }, {
    "method": "cursorTrack.isGroup.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isGroup().subscribe()"
  }, {
    "method": "cursorTrack.isGroup.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#isGroup().unsubscribe()"
  }, {
    "method": "cursorTrack.isGroup.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "cursorTrack.vuMeter",
    "params": [],
    "result": "object",
    "expression": "VuMeterValue CursorTrack#vuMeter()"
  }, {
    "method": "cursorTrack.vuMeter.get",
    "params": ["number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel CursorTrack#vuMeter().get(int, boolean)"
  }, {
    "method": "cursorTrack.vuMeter.values",
    "params": [],
    "result": "object",
    "expression": "Collection CursorTrack#vuMeter().values()"
  }, {
    "method": "cursorTrack.vuMeter.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorTrack#vuMeter().isSubscribed()"
  }, {
    "method": "cursorTrack.vuMeter.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#vuMeter().subscribe()"
  }, {
    "method": "cursorTrack.vuMeter.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorTrack#vuMeter().unsubscribe()"
  }, {
    "method": "cursorTrack.vuMeter.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorTrack#vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.scrollToScene",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollToScene(int)"
  }, {
    "method": "siblingsTrackBank.scrollScenesUp",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesUp()"
  }, {
    "method": "siblingsTrackBank.scrollScenesDown",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesDown()"
  }, {
    "method": "siblingsTrackBank.setChannelScrollStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setChannelScrollStepSize(int)"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsUp()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().get()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().subscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsDown()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().get()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().subscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollChannelsDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.channelCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#channelCount()"
  }, {
    "method": "siblingsTrackBank.channelCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().get()"
  }, {
    "method": "siblingsTrackBank.channelCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().getAsInt()"
  }, {
    "method": "siblingsTrackBank.channelCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#channelCount().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.channelCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().subscribe()"
  }, {
    "method": "siblingsTrackBank.channelCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.channelCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#channelCount().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getSizeOfBank()"
  }, {
    "method": "siblingsTrackBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getCapacityOfBank()"
  }, {
    "method": "siblingsTrackBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageBackwards()"
  }, {
    "method": "siblingsTrackBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setSizeOfBank(int)"
  }, {
    "method": "siblingsTrackBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#itemCount()"
  }, {
    "method": "siblingsTrackBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().get()"
  }, {
    "method": "siblingsTrackBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().getAsInt()"
  }, {
    "method": "siblingsTrackBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#itemCount().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().subscribe()"
  }, {
    "method": "siblingsTrackBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.position",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue TrackBank#getItemAt(int).position()"
  }, {
    "method": "siblingsTrackBank.getItemAt.position.get",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.position.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().getAsInt()"
  }, {
    "method": "siblingsTrackBank.getItemAt.position.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).position().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.position.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.position.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.position.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.stop",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stop()"
  }, {
    "method": "siblingsTrackBank.getItemAt.setName",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setName(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldAudioData()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldAudioData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).autoMonitor()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.autoMonitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldNoteData()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.canHoldNoteData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).getIsPreFader()"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.getIsPreFader.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "siblingsTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.trackType",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).trackType()"
  }, {
    "method": "siblingsTrackBank.getItemAt.trackType.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.trackType.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.trackType.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).trackType().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.trackType.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.trackType.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.trackType.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.stopNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stopNote(int, int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isQueuedForStop",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isQueuedForStop()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isQueuedForStop.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isQueuedForStop.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isQueuedForStop.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isQueuedForStop.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isQueuedForStop.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isQueuedForStop.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.startNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startNote(int, int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.selectSlot",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectSlot(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().exists()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.sourceSelector.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isStopped",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isStopped()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isStopped.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isStopped.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isStopped.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isStopped.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isStopped.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isStopped.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).arm()"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.arm.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).monitor()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.monitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.returnToArrangement",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).returnToArrangement()"
  }, {
    "method": "siblingsTrackBank.getItemAt.afterTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().paste()"
  }, {
    "method": "siblingsTrackBank.getItemAt.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.afterTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.afterTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.afterTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().browse()"
  }, {
    "method": "siblingsTrackBank.getItemAt.beforeTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().paste()"
  }, {
    "method": "siblingsTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.beforeTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.beforeTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().browse()"
  }, {
    "method": "siblingsTrackBank.getItemAt.playNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playNote(int, int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.sendMidi",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sendMidi(int, int, int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.crossFadeMode",
    "params": ["number"],
    "result": "object",
    "expression": "SettableEnumValue TrackBank#getItemAt(int).crossFadeMode()"
  }, {
    "method": "siblingsTrackBank.getItemAt.crossFadeMode.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().set(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.crossFadeMode.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).crossFadeMode().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.crossFadeMode.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).crossFadeMode().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.crossFadeMode.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.crossFadeMode.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.crossFadeMode.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isGroup",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isGroup()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isGroup.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isGroup.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isGroup.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isGroup.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isGroup.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isGroup.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.duplicate",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).duplicate()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color",
    "params": ["number"],
    "result": "object",
    "expression": "SettableColorValue TrackBank#getItemAt(int).color()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float)"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float, float)"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.red",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().red()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().alpha()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.green",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().green()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().blue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).color().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.color.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).isActivated()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isActivated.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.makeVisibleInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInMixer()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).pan()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().name()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().name().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).pan().value()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setImmediately(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().incRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getRaw()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getAsDouble()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().value().displayedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().reset()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().touch(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().restoreAutomationControl()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).pan().modulatedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getRaw()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getAsDouble()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().modulatedValue().displayedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIndication(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).pan().exists()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setImmediately(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().incRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getRaw()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getAsDouble()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().displayedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().displayedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.pan.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).mute()"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.mute.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo",
    "params": ["number"],
    "result": "object",
    "expression": "SoloValue TrackBank#getItemAt(int).solo()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.toggle",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().set(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.solo.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().invoke()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).volume()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().name()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().name().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).volume().value()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setImmediately(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().incRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getRaw()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getAsDouble()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().value().displayedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().reset()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().touch(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().restoreAutomationControl()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).volume().modulatedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getRaw()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getAsDouble()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().modulatedValue().displayedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIndication(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).volume().exists()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setImmediately(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().incRaw(double)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getRaw()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getAsDouble()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().displayedValue()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().displayedValue().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.volume.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.makeVisibleInArranger",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInArranger()"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.isNotePlaying",
    "params": ["number", "number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isNotePlaying(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.get",
    "params": ["number"],
    "result": "any[]",
    "expression": "Object[] TrackBank#getItemAt(int).playingNotes().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object TrackBank#getItemAt(int).playingNotes().get(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isEmpty()"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.playingNotes.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isMutedBySolo",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isMutedBySolo()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isMutedBySolo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isMutedBySolo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isMutedBySolo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isMutedBySolo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isMutedBySolo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.isMutedBySolo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.selectInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInMixer()"
  }, {
    "method": "siblingsTrackBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).deleteObject()"
  }, {
    "method": "siblingsTrackBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue TrackBank#getItemAt(int).name()"
  }, {
    "method": "siblingsTrackBank.getItemAt.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().set(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "siblingsTrackBank.getItemAt.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsTrackBank.getItemAt.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsTrackBank.getItemAt.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsTrackBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).exists()"
  }, {
    "method": "siblingsTrackBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().get()"
  }, {
    "method": "siblingsTrackBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.vuMeter",
    "params": ["number"],
    "result": "object",
    "expression": "VuMeterValue TrackBank#getItemAt(int).vuMeter()"
  }, {
    "method": "siblingsTrackBank.getItemAt.vuMeter.get",
    "params": ["number", "number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel TrackBank#getItemAt(int).vuMeter().get(int, boolean)"
  }, {
    "method": "siblingsTrackBank.getItemAt.vuMeter.values",
    "params": ["number"],
    "result": "object",
    "expression": "Collection TrackBank#getItemAt(int).vuMeter().values()"
  }, {
    "method": "siblingsTrackBank.getItemAt.vuMeter.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).vuMeter().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.getItemAt.vuMeter.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().subscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.vuMeter.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.getItemAt.vuMeter.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#cursorIndex()"
  }, {
    "method": "siblingsTrackBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().set(int)"
  }, {
    "method": "siblingsTrackBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().inc(int)"
  }, {
    "method": "siblingsTrackBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().get()"
  }, {
    "method": "siblingsTrackBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().getAsInt()"
  }, {
    "method": "siblingsTrackBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#cursorIndex().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().subscribe()"
  }, {
    "method": "siblingsTrackBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageForwards()"
  }, {
    "method": "siblingsTrackBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#exists()"
  }, {
    "method": "siblingsTrackBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().get()"
  }, {
    "method": "siblingsTrackBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().subscribe()"
  }, {
    "method": "siblingsTrackBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#isSubscribed()"
  }, {
    "method": "siblingsTrackBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#subscribe()"
  }, {
    "method": "siblingsTrackBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#unsubscribe()"
  }, {
    "method": "siblingsTrackBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollBy(int)"
  }, {
    "method": "siblingsTrackBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollByPages(int)"
  }, {
    "method": "siblingsTrackBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollIntoView(int)"
  }, {
    "method": "siblingsTrackBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollBackwards()"
  }, {
    "method": "siblingsTrackBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().get()"
  }, {
    "method": "siblingsTrackBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().subscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollForwards()"
  }, {
    "method": "siblingsTrackBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().get()"
  }, {
    "method": "siblingsTrackBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "siblingsTrackBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().subscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#scrollPosition()"
  }, {
    "method": "siblingsTrackBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().set(int)"
  }, {
    "method": "siblingsTrackBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().inc(int)"
  }, {
    "method": "siblingsTrackBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().get()"
  }, {
    "method": "siblingsTrackBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().getAsInt()"
  }, {
    "method": "siblingsTrackBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#scrollPosition().isSubscribed()"
  }, {
    "method": "siblingsTrackBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().subscribe()"
  }, {
    "method": "siblingsTrackBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().unsubscribe()"
  }, {
    "method": "siblingsTrackBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsTrackBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollForwards()"
  }, {
    "method": "siblingsTrackBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollBackwards()"
  }, {
    "method": "childTrackBank.scrollToScene",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollToScene(int)"
  }, {
    "method": "childTrackBank.scrollScenesUp",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesUp()"
  }, {
    "method": "childTrackBank.scrollScenesDown",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesDown()"
  }, {
    "method": "childTrackBank.setChannelScrollStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setChannelScrollStepSize(int)"
  }, {
    "method": "childTrackBank.canScrollChannelsUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsUp()"
  }, {
    "method": "childTrackBank.canScrollChannelsUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().get()"
  }, {
    "method": "childTrackBank.canScrollChannelsUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().getAsBoolean()"
  }, {
    "method": "childTrackBank.canScrollChannelsUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().isSubscribed()"
  }, {
    "method": "childTrackBank.canScrollChannelsUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().subscribe()"
  }, {
    "method": "childTrackBank.canScrollChannelsUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().unsubscribe()"
  }, {
    "method": "childTrackBank.canScrollChannelsUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.canScrollChannelsDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsDown()"
  }, {
    "method": "childTrackBank.canScrollChannelsDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().get()"
  }, {
    "method": "childTrackBank.canScrollChannelsDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().getAsBoolean()"
  }, {
    "method": "childTrackBank.canScrollChannelsDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().isSubscribed()"
  }, {
    "method": "childTrackBank.canScrollChannelsDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().subscribe()"
  }, {
    "method": "childTrackBank.canScrollChannelsDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().unsubscribe()"
  }, {
    "method": "childTrackBank.canScrollChannelsDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.channelCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#channelCount()"
  }, {
    "method": "childTrackBank.channelCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().get()"
  }, {
    "method": "childTrackBank.channelCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().getAsInt()"
  }, {
    "method": "childTrackBank.channelCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#channelCount().isSubscribed()"
  }, {
    "method": "childTrackBank.channelCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().subscribe()"
  }, {
    "method": "childTrackBank.channelCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().unsubscribe()"
  }, {
    "method": "childTrackBank.channelCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#channelCount().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getSizeOfBank()"
  }, {
    "method": "childTrackBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getCapacityOfBank()"
  }, {
    "method": "childTrackBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageBackwards()"
  }, {
    "method": "childTrackBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setSizeOfBank(int)"
  }, {
    "method": "childTrackBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#itemCount()"
  }, {
    "method": "childTrackBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().get()"
  }, {
    "method": "childTrackBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().getAsInt()"
  }, {
    "method": "childTrackBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#itemCount().isSubscribed()"
  }, {
    "method": "childTrackBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().subscribe()"
  }, {
    "method": "childTrackBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().unsubscribe()"
  }, {
    "method": "childTrackBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.position",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue TrackBank#getItemAt(int).position()"
  }, {
    "method": "childTrackBank.getItemAt.position.get",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().get()"
  }, {
    "method": "childTrackBank.getItemAt.position.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().getAsInt()"
  }, {
    "method": "childTrackBank.getItemAt.position.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).position().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.position.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.position.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.position.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.stop",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stop()"
  }, {
    "method": "childTrackBank.getItemAt.setName",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setName(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldAudioData()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().get()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.canHoldAudioData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).autoMonitor()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().get()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.autoMonitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldNoteData()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().get()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.canHoldNoteData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int)"
  }, {
    "method": "childTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).getIsPreFader()"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().get()"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.getIsPreFader.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "childTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int)"
  }, {
    "method": "childTrackBank.getItemAt.trackType",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).trackType()"
  }, {
    "method": "childTrackBank.getItemAt.trackType.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().get()"
  }, {
    "method": "childTrackBank.getItemAt.trackType.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.trackType.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).trackType().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.trackType.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.trackType.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.trackType.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.stopNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stopNote(int, int)"
  }, {
    "method": "childTrackBank.getItemAt.isQueuedForStop",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isQueuedForStop()"
  }, {
    "method": "childTrackBank.getItemAt.isQueuedForStop.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().get()"
  }, {
    "method": "childTrackBank.getItemAt.isQueuedForStop.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.isQueuedForStop.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.isQueuedForStop.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isQueuedForStop.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isQueuedForStop.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.startNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startNote(int, int)"
  }, {
    "method": "childTrackBank.getItemAt.selectSlot",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectSlot(int)"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().exists()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().get()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.sourceSelector.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.isStopped",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isStopped()"
  }, {
    "method": "childTrackBank.getItemAt.isStopped.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().get()"
  }, {
    "method": "childTrackBank.getItemAt.isStopped.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.isStopped.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.isStopped.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isStopped.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isStopped.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.arm",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).arm()"
  }, {
    "method": "childTrackBank.getItemAt.arm.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.arm.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.arm.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().get()"
  }, {
    "method": "childTrackBank.getItemAt.arm.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.arm.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.arm.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.arm.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.arm.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.arm.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.monitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).monitor()"
  }, {
    "method": "childTrackBank.getItemAt.monitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.monitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.monitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().get()"
  }, {
    "method": "childTrackBank.getItemAt.monitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.monitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.monitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.monitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.monitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.monitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.returnToArrangement",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).returnToArrangement()"
  }, {
    "method": "childTrackBank.getItemAt.afterTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().paste()"
  }, {
    "method": "childTrackBank.getItemAt.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "childTrackBank.getItemAt.afterTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.afterTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.afterTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().browse()"
  }, {
    "method": "childTrackBank.getItemAt.beforeTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().paste()"
  }, {
    "method": "childTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "childTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.beforeTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.beforeTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().browse()"
  }, {
    "method": "childTrackBank.getItemAt.playNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playNote(int, int)"
  }, {
    "method": "childTrackBank.getItemAt.sendMidi",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sendMidi(int, int, int)"
  }, {
    "method": "childTrackBank.getItemAt.crossFadeMode",
    "params": ["number"],
    "result": "object",
    "expression": "SettableEnumValue TrackBank#getItemAt(int).crossFadeMode()"
  }, {
    "method": "childTrackBank.getItemAt.crossFadeMode.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().set(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.crossFadeMode.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).crossFadeMode().get()"
  }, {
    "method": "childTrackBank.getItemAt.crossFadeMode.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).crossFadeMode().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.crossFadeMode.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.crossFadeMode.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.crossFadeMode.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.isGroup",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isGroup()"
  }, {
    "method": "childTrackBank.getItemAt.isGroup.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().get()"
  }, {
    "method": "childTrackBank.getItemAt.isGroup.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.isGroup.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.isGroup.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isGroup.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isGroup.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.duplicate",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).duplicate()"
  }, {
    "method": "childTrackBank.getItemAt.color",
    "params": ["number"],
    "result": "object",
    "expression": "SettableColorValue TrackBank#getItemAt(int).color()"
  }, {
    "method": "childTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float)"
  }, {
    "method": "childTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float, float)"
  }, {
    "method": "childTrackBank.getItemAt.color.red",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().red()"
  }, {
    "method": "childTrackBank.getItemAt.color.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().alpha()"
  }, {
    "method": "childTrackBank.getItemAt.color.green",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().green()"
  }, {
    "method": "childTrackBank.getItemAt.color.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().blue()"
  }, {
    "method": "childTrackBank.getItemAt.color.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).color().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.color.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.color.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.color.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.isActivated",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).isActivated()"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().get()"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.isActivated.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.makeVisibleInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInMixer()"
  }, {
    "method": "childTrackBank.getItemAt.pan",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).pan()"
  }, {
    "method": "childTrackBank.getItemAt.pan.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().name()"
  }, {
    "method": "childTrackBank.getItemAt.pan.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.pan.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().name().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).pan().value()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setImmediately(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().incRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getRaw()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getAsDouble()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().value().displayedValue()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().reset()"
  }, {
    "method": "childTrackBank.getItemAt.pan.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().touch(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().restoreAutomationControl()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).pan().modulatedValue()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getRaw()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getAsDouble()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().modulatedValue().displayedValue()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIndication(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).pan().exists()"
  }, {
    "method": "childTrackBank.getItemAt.pan.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.pan.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.pan.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setImmediately(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().incRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.pan.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getRaw()"
  }, {
    "method": "childTrackBank.getItemAt.pan.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getAsDouble()"
  }, {
    "method": "childTrackBank.getItemAt.pan.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().displayedValue()"
  }, {
    "method": "childTrackBank.getItemAt.pan.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.pan.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.pan.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().displayedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.pan.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.pan.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.mute",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).mute()"
  }, {
    "method": "childTrackBank.getItemAt.mute.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.mute.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.mute.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().get()"
  }, {
    "method": "childTrackBank.getItemAt.mute.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.mute.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.mute.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.mute.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.mute.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.mute.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.solo",
    "params": ["number"],
    "result": "object",
    "expression": "SoloValue TrackBank#getItemAt(int).solo()"
  }, {
    "method": "childTrackBank.getItemAt.solo.toggle",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.solo.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().set(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.solo.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle()"
  }, {
    "method": "childTrackBank.getItemAt.solo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().get()"
  }, {
    "method": "childTrackBank.getItemAt.solo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.solo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.solo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.solo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.solo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.solo.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().invoke()"
  }, {
    "method": "childTrackBank.getItemAt.volume",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).volume()"
  }, {
    "method": "childTrackBank.getItemAt.volume.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().name()"
  }, {
    "method": "childTrackBank.getItemAt.volume.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.volume.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().name().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).volume().value()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setImmediately(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().incRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getRaw()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getAsDouble()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().value().displayedValue()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().reset()"
  }, {
    "method": "childTrackBank.getItemAt.volume.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().touch(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().restoreAutomationControl()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).volume().modulatedValue()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getRaw()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getAsDouble()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().modulatedValue().displayedValue()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIndication(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).volume().exists()"
  }, {
    "method": "childTrackBank.getItemAt.volume.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.volume.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.volume.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "childTrackBank.getItemAt.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setImmediately(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().incRaw(double)"
  }, {
    "method": "childTrackBank.getItemAt.volume.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getRaw()"
  }, {
    "method": "childTrackBank.getItemAt.volume.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getAsDouble()"
  }, {
    "method": "childTrackBank.getItemAt.volume.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().displayedValue()"
  }, {
    "method": "childTrackBank.getItemAt.volume.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().get()"
  }, {
    "method": "childTrackBank.getItemAt.volume.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.volume.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().displayedValue().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.volume.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.volume.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.makeVisibleInArranger",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInArranger()"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.isNotePlaying",
    "params": ["number", "number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isNotePlaying(int)"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.get",
    "params": ["number"],
    "result": "any[]",
    "expression": "Object[] TrackBank#getItemAt(int).playingNotes().get()"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object TrackBank#getItemAt(int).playingNotes().get(int)"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isEmpty()"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.playingNotes.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.isMutedBySolo",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isMutedBySolo()"
  }, {
    "method": "childTrackBank.getItemAt.isMutedBySolo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().get()"
  }, {
    "method": "childTrackBank.getItemAt.isMutedBySolo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.isMutedBySolo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.isMutedBySolo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isMutedBySolo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.isMutedBySolo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.selectInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInMixer()"
  }, {
    "method": "childTrackBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).deleteObject()"
  }, {
    "method": "childTrackBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue TrackBank#getItemAt(int).name()"
  }, {
    "method": "childTrackBank.getItemAt.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().set(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().get()"
  }, {
    "method": "childTrackBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "childTrackBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "childTrackBank.getItemAt.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "childTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "childTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "childTrackBank.getItemAt.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "childTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "childTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "childTrackBank.getItemAt.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "childTrackBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).exists()"
  }, {
    "method": "childTrackBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().get()"
  }, {
    "method": "childTrackBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "childTrackBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.getItemAt.vuMeter",
    "params": ["number"],
    "result": "object",
    "expression": "VuMeterValue TrackBank#getItemAt(int).vuMeter()"
  }, {
    "method": "childTrackBank.getItemAt.vuMeter.get",
    "params": ["number", "number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel TrackBank#getItemAt(int).vuMeter().get(int, boolean)"
  }, {
    "method": "childTrackBank.getItemAt.vuMeter.values",
    "params": ["number"],
    "result": "object",
    "expression": "Collection TrackBank#getItemAt(int).vuMeter().values()"
  }, {
    "method": "childTrackBank.getItemAt.vuMeter.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).vuMeter().isSubscribed()"
  }, {
    "method": "childTrackBank.getItemAt.vuMeter.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().subscribe()"
  }, {
    "method": "childTrackBank.getItemAt.vuMeter.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().unsubscribe()"
  }, {
    "method": "childTrackBank.getItemAt.vuMeter.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#cursorIndex()"
  }, {
    "method": "childTrackBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().set(int)"
  }, {
    "method": "childTrackBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().inc(int)"
  }, {
    "method": "childTrackBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().get()"
  }, {
    "method": "childTrackBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().getAsInt()"
  }, {
    "method": "childTrackBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#cursorIndex().isSubscribed()"
  }, {
    "method": "childTrackBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().subscribe()"
  }, {
    "method": "childTrackBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().unsubscribe()"
  }, {
    "method": "childTrackBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageForwards()"
  }, {
    "method": "childTrackBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#exists()"
  }, {
    "method": "childTrackBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().get()"
  }, {
    "method": "childTrackBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().getAsBoolean()"
  }, {
    "method": "childTrackBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().isSubscribed()"
  }, {
    "method": "childTrackBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().subscribe()"
  }, {
    "method": "childTrackBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().unsubscribe()"
  }, {
    "method": "childTrackBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#isSubscribed()"
  }, {
    "method": "childTrackBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#subscribe()"
  }, {
    "method": "childTrackBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#unsubscribe()"
  }, {
    "method": "childTrackBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollBy(int)"
  }, {
    "method": "childTrackBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollByPages(int)"
  }, {
    "method": "childTrackBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollIntoView(int)"
  }, {
    "method": "childTrackBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollBackwards()"
  }, {
    "method": "childTrackBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().get()"
  }, {
    "method": "childTrackBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "childTrackBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "childTrackBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().subscribe()"
  }, {
    "method": "childTrackBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "childTrackBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollForwards()"
  }, {
    "method": "childTrackBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().get()"
  }, {
    "method": "childTrackBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "childTrackBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "childTrackBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().subscribe()"
  }, {
    "method": "childTrackBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "childTrackBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#scrollPosition()"
  }, {
    "method": "childTrackBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().set(int)"
  }, {
    "method": "childTrackBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().inc(int)"
  }, {
    "method": "childTrackBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().get()"
  }, {
    "method": "childTrackBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().getAsInt()"
  }, {
    "method": "childTrackBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#scrollPosition().isSubscribed()"
  }, {
    "method": "childTrackBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().subscribe()"
  }, {
    "method": "childTrackBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().unsubscribe()"
  }, {
    "method": "childTrackBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "childTrackBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollForwards()"
  }, {
    "method": "childTrackBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollBackwards()"
  }, {
    "method": "cursorDevice.channel.duplicate",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().duplicate()"
  }, {
    "method": "cursorDevice.channel.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue PinnableCursorDevice#channel().color()"
  }, {
    "method": "cursorDevice.channel.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().color().set(float, float, float)"
  }, {
    "method": "cursorDevice.channel.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().color().set(float, float, float, float)"
  }, {
    "method": "cursorDevice.channel.color.red",
    "params": [],
    "result": "number",
    "expression": "float PinnableCursorDevice#channel().color().red()"
  }, {
    "method": "cursorDevice.channel.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float PinnableCursorDevice#channel().color().alpha()"
  }, {
    "method": "cursorDevice.channel.color.green",
    "params": [],
    "result": "number",
    "expression": "float PinnableCursorDevice#channel().color().green()"
  }, {
    "method": "cursorDevice.channel.color.blue",
    "params": [],
    "result": "number",
    "expression": "float PinnableCursorDevice#channel().color().blue()"
  }, {
    "method": "cursorDevice.channel.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().color().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().color().subscribe()"
  }, {
    "method": "cursorDevice.channel.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().color().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().color().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.isActivated",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PinnableCursorDevice#channel().isActivated()"
  }, {
    "method": "cursorDevice.channel.isActivated.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isActivated().set(boolean)"
  }, {
    "method": "cursorDevice.channel.isActivated.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isActivated().toggle()"
  }, {
    "method": "cursorDevice.channel.isActivated.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().isActivated().get()"
  }, {
    "method": "cursorDevice.channel.isActivated.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().isActivated().getAsBoolean()"
  }, {
    "method": "cursorDevice.channel.isActivated.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().isActivated().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.isActivated.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isActivated().subscribe()"
  }, {
    "method": "cursorDevice.channel.isActivated.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isActivated().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.isActivated.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.isActivated.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isActivated().invoke()"
  }, {
    "method": "cursorDevice.channel.makeVisibleInMixer",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().makeVisibleInMixer()"
  }, {
    "method": "cursorDevice.channel.pan",
    "params": [],
    "result": "object",
    "expression": "Parameter PinnableCursorDevice#channel().pan()"
  }, {
    "method": "cursorDevice.channel.pan.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().pan().name()"
  }, {
    "method": "cursorDevice.channel.pan.name.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().name().get()"
  }, {
    "method": "cursorDevice.channel.pan.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().name().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.pan.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().name().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().name().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().name().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue PinnableCursorDevice#channel().pan().value()"
  }, {
    "method": "cursorDevice.channel.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.pan.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().set(double)"
  }, {
    "method": "cursorDevice.channel.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.pan.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().inc(double)"
  }, {
    "method": "cursorDevice.channel.pan.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().setRaw(double)"
  }, {
    "method": "cursorDevice.channel.pan.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().setImmediately(double)"
  }, {
    "method": "cursorDevice.channel.pan.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().incRaw(double)"
  }, {
    "method": "cursorDevice.channel.pan.value.get",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().value().get()"
  }, {
    "method": "cursorDevice.channel.pan.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().value().getRaw()"
  }, {
    "method": "cursorDevice.channel.pan.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().value().getAsDouble()"
  }, {
    "method": "cursorDevice.channel.pan.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().pan().value().displayedValue()"
  }, {
    "method": "cursorDevice.channel.pan.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().value().displayedValue().get()"
  }, {
    "method": "cursorDevice.channel.pan.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.pan.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().displayedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().value().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.reset",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().reset()"
  }, {
    "method": "cursorDevice.channel.pan.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().touch(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().restoreAutomationControl()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue PinnableCursorDevice#channel().pan().modulatedValue()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().modulatedValue().get()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().modulatedValue().getRaw()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().modulatedValue().getAsDouble()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().pan().modulatedValue().displayedValue()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().modulatedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().modulatedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().modulatedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().setIndication(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#channel().pan().exists()"
  }, {
    "method": "cursorDevice.channel.pan.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().exists().get()"
  }, {
    "method": "cursorDevice.channel.pan.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().exists().getAsBoolean()"
  }, {
    "method": "cursorDevice.channel.pan.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().exists().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().exists().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().exists().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.pan.set",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().set(double)"
  }, {
    "method": "cursorDevice.channel.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.pan.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().inc(double)"
  }, {
    "method": "cursorDevice.channel.pan.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().setRaw(double)"
  }, {
    "method": "cursorDevice.channel.pan.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().setImmediately(double)"
  }, {
    "method": "cursorDevice.channel.pan.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().incRaw(double)"
  }, {
    "method": "cursorDevice.channel.pan.get",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().get()"
  }, {
    "method": "cursorDevice.channel.pan.getRaw",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().getRaw()"
  }, {
    "method": "cursorDevice.channel.pan.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().pan().getAsDouble()"
  }, {
    "method": "cursorDevice.channel.pan.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().pan().displayedValue()"
  }, {
    "method": "cursorDevice.channel.pan.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().displayedValue().get()"
  }, {
    "method": "cursorDevice.channel.pan.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().pan().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.pan.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().pan().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.pan.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().displayedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.pan.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.pan.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.mute",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PinnableCursorDevice#channel().mute()"
  }, {
    "method": "cursorDevice.channel.mute.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().mute().set(boolean)"
  }, {
    "method": "cursorDevice.channel.mute.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().mute().toggle()"
  }, {
    "method": "cursorDevice.channel.mute.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().mute().get()"
  }, {
    "method": "cursorDevice.channel.mute.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().mute().getAsBoolean()"
  }, {
    "method": "cursorDevice.channel.mute.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().mute().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.mute.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().mute().subscribe()"
  }, {
    "method": "cursorDevice.channel.mute.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().mute().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.mute.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().mute().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.mute.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().mute().invoke()"
  }, {
    "method": "cursorDevice.channel.solo",
    "params": [],
    "result": "object",
    "expression": "SoloValue PinnableCursorDevice#channel().solo()"
  }, {
    "method": "cursorDevice.channel.solo.toggle",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().solo().toggle(boolean)"
  }, {
    "method": "cursorDevice.channel.solo.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().solo().set(boolean)"
  }, {
    "method": "cursorDevice.channel.solo.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().solo().toggle()"
  }, {
    "method": "cursorDevice.channel.solo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().solo().get()"
  }, {
    "method": "cursorDevice.channel.solo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().solo().getAsBoolean()"
  }, {
    "method": "cursorDevice.channel.solo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().solo().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.solo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().solo().subscribe()"
  }, {
    "method": "cursorDevice.channel.solo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().solo().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.solo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().solo().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.solo.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().solo().invoke()"
  }, {
    "method": "cursorDevice.channel.volume",
    "params": [],
    "result": "object",
    "expression": "Parameter PinnableCursorDevice#channel().volume()"
  }, {
    "method": "cursorDevice.channel.volume.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().volume().name()"
  }, {
    "method": "cursorDevice.channel.volume.name.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().name().get()"
  }, {
    "method": "cursorDevice.channel.volume.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().name().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.volume.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().name().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().name().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().name().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue PinnableCursorDevice#channel().volume().value()"
  }, {
    "method": "cursorDevice.channel.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.volume.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().set(double)"
  }, {
    "method": "cursorDevice.channel.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.volume.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().inc(double)"
  }, {
    "method": "cursorDevice.channel.volume.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().setRaw(double)"
  }, {
    "method": "cursorDevice.channel.volume.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().setImmediately(double)"
  }, {
    "method": "cursorDevice.channel.volume.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().incRaw(double)"
  }, {
    "method": "cursorDevice.channel.volume.value.get",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().value().get()"
  }, {
    "method": "cursorDevice.channel.volume.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().value().getRaw()"
  }, {
    "method": "cursorDevice.channel.volume.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().value().getAsDouble()"
  }, {
    "method": "cursorDevice.channel.volume.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().volume().value().displayedValue()"
  }, {
    "method": "cursorDevice.channel.volume.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().value().displayedValue().get()"
  }, {
    "method": "cursorDevice.channel.volume.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.volume.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().displayedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().value().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.reset",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().reset()"
  }, {
    "method": "cursorDevice.channel.volume.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().touch(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().restoreAutomationControl()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue PinnableCursorDevice#channel().volume().modulatedValue()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().modulatedValue().get()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().modulatedValue().getRaw()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().modulatedValue().getAsDouble()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().volume().modulatedValue().displayedValue()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().modulatedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().modulatedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().modulatedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().setIndication(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#channel().volume().exists()"
  }, {
    "method": "cursorDevice.channel.volume.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().exists().get()"
  }, {
    "method": "cursorDevice.channel.volume.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().exists().getAsBoolean()"
  }, {
    "method": "cursorDevice.channel.volume.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().exists().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().exists().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().exists().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.volume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().set(double)"
  }, {
    "method": "cursorDevice.channel.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.channel.volume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().inc(double)"
  }, {
    "method": "cursorDevice.channel.volume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().setRaw(double)"
  }, {
    "method": "cursorDevice.channel.volume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().setImmediately(double)"
  }, {
    "method": "cursorDevice.channel.volume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().incRaw(double)"
  }, {
    "method": "cursorDevice.channel.volume.get",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().get()"
  }, {
    "method": "cursorDevice.channel.volume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().getRaw()"
  }, {
    "method": "cursorDevice.channel.volume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double PinnableCursorDevice#channel().volume().getAsDouble()"
  }, {
    "method": "cursorDevice.channel.volume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#channel().volume().displayedValue()"
  }, {
    "method": "cursorDevice.channel.volume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().displayedValue().get()"
  }, {
    "method": "cursorDevice.channel.volume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().volume().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.volume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().volume().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.volume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().displayedValue().subscribe()"
  }, {
    "method": "cursorDevice.channel.volume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.volume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.makeVisibleInArranger",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().makeVisibleInArranger()"
  }, {
    "method": "cursorDevice.channel.playingNotes.isNotePlaying",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().playingNotes().isNotePlaying(int)"
  }, {
    "method": "cursorDevice.channel.playingNotes.get",
    "params": [],
    "result": "any[]",
    "expression": "Object[] PinnableCursorDevice#channel().playingNotes().get()"
  }, {
    "method": "cursorDevice.channel.playingNotes.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object PinnableCursorDevice#channel().playingNotes().get(int)"
  }, {
    "method": "cursorDevice.channel.playingNotes.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().playingNotes().isEmpty()"
  }, {
    "method": "cursorDevice.channel.playingNotes.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().playingNotes().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.playingNotes.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().playingNotes().subscribe()"
  }, {
    "method": "cursorDevice.channel.playingNotes.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().playingNotes().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.playingNotes.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.isMutedBySolo",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#channel().isMutedBySolo()"
  }, {
    "method": "cursorDevice.channel.isMutedBySolo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().isMutedBySolo().get()"
  }, {
    "method": "cursorDevice.channel.isMutedBySolo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().isMutedBySolo().getAsBoolean()"
  }, {
    "method": "cursorDevice.channel.isMutedBySolo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().isMutedBySolo().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.isMutedBySolo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isMutedBySolo().subscribe()"
  }, {
    "method": "cursorDevice.channel.isMutedBySolo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isMutedBySolo().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.isMutedBySolo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.selectInMixer",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().selectInMixer()"
  }, {
    "method": "cursorDevice.channel.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().deleteObject()"
  }, {
    "method": "cursorDevice.channel.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue PinnableCursorDevice#channel().name()"
  }, {
    "method": "cursorDevice.channel.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().name().set(java.lang.String)"
  }, {
    "method": "cursorDevice.channel.name.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().name().get()"
  }, {
    "method": "cursorDevice.channel.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#channel().name().getLimited(int)"
  }, {
    "method": "cursorDevice.channel.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().name().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().name().subscribe()"
  }, {
    "method": "cursorDevice.channel.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().name().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().selectInEditor()"
  }, {
    "method": "cursorDevice.channel.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.channel.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.channel.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.channel.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.channel.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.channel.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.channel.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.channel.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.channel.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.channel.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.channel.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#channel().exists()"
  }, {
    "method": "cursorDevice.channel.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().exists().get()"
  }, {
    "method": "cursorDevice.channel.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().exists().getAsBoolean()"
  }, {
    "method": "cursorDevice.channel.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().exists().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().exists().subscribe()"
  }, {
    "method": "cursorDevice.channel.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().exists().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().subscribe()"
  }, {
    "method": "cursorDevice.channel.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.channel.vuMeter",
    "params": [],
    "result": "object",
    "expression": "VuMeterValue PinnableCursorDevice#channel().vuMeter()"
  }, {
    "method": "cursorDevice.channel.vuMeter.get",
    "params": ["number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel PinnableCursorDevice#channel().vuMeter().get(int, boolean)"
  }, {
    "method": "cursorDevice.channel.vuMeter.values",
    "params": [],
    "result": "object",
    "expression": "Collection PinnableCursorDevice#channel().vuMeter().values()"
  }, {
    "method": "cursorDevice.channel.vuMeter.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#channel().vuMeter().isSubscribed()"
  }, {
    "method": "cursorDevice.channel.vuMeter.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().vuMeter().subscribe()"
  }, {
    "method": "cursorDevice.channel.vuMeter.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().vuMeter().unsubscribe()"
  }, {
    "method": "cursorDevice.channel.vuMeter.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#channel().vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.selectLastInKeyPad",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectLastInKeyPad(int)"
  }, {
    "method": "cursorDevice.selectFirstInLayer",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectFirstInLayer(int)"
  }, {
    "method": "cursorDevice.selectFirstInLayer",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectFirstInLayer(java.lang.String)"
  }, {
    "method": "cursorDevice.selectFirstInSlot",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectFirstInSlot(java.lang.String)"
  }, {
    "method": "cursorDevice.selectParent",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectParent()"
  }, {
    "method": "cursorDevice.selectLastInLayer",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectLastInLayer(int)"
  }, {
    "method": "cursorDevice.selectLastInLayer",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectLastInLayer(java.lang.String)"
  }, {
    "method": "cursorDevice.selectLastInSlot",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectLastInSlot(java.lang.String)"
  }, {
    "method": "cursorDevice.selectFirstInKeyPad",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectFirstInKeyPad(int)"
  }, {
    "method": "cursorDevice.hasNext",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#hasNext()"
  }, {
    "method": "cursorDevice.hasNext.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasNext().get()"
  }, {
    "method": "cursorDevice.hasNext.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasNext().getAsBoolean()"
  }, {
    "method": "cursorDevice.hasNext.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasNext().isSubscribed()"
  }, {
    "method": "cursorDevice.hasNext.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasNext().subscribe()"
  }, {
    "method": "cursorDevice.hasNext.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasNext().unsubscribe()"
  }, {
    "method": "cursorDevice.hasNext.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasNext().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.hasPrevious",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#hasPrevious()"
  }, {
    "method": "cursorDevice.hasPrevious.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasPrevious().get()"
  }, {
    "method": "cursorDevice.hasPrevious.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasPrevious().getAsBoolean()"
  }, {
    "method": "cursorDevice.hasPrevious.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasPrevious().isSubscribed()"
  }, {
    "method": "cursorDevice.hasPrevious.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasPrevious().subscribe()"
  }, {
    "method": "cursorDevice.hasPrevious.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasPrevious().unsubscribe()"
  }, {
    "method": "cursorDevice.hasPrevious.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasPrevious().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.selectFirst",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectFirst()"
  }, {
    "method": "cursorDevice.selectPrevious",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectPrevious()"
  }, {
    "method": "cursorDevice.selectLast",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectLast()"
  }, {
    "method": "cursorDevice.selectNext",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectNext()"
  }, {
    "method": "cursorDevice.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#name()"
  }, {
    "method": "cursorDevice.name.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#name().get()"
  }, {
    "method": "cursorDevice.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#name().getLimited(int)"
  }, {
    "method": "cursorDevice.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#name().isSubscribed()"
  }, {
    "method": "cursorDevice.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#name().subscribe()"
  }, {
    "method": "cursorDevice.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#name().unsubscribe()"
  }, {
    "method": "cursorDevice.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.position",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PinnableCursorDevice#position()"
  }, {
    "method": "cursorDevice.position.get",
    "params": [],
    "result": "number",
    "expression": "int PinnableCursorDevice#position().get()"
  }, {
    "method": "cursorDevice.position.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PinnableCursorDevice#position().getAsInt()"
  }, {
    "method": "cursorDevice.position.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#position().isSubscribed()"
  }, {
    "method": "cursorDevice.position.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#position().subscribe()"
  }, {
    "method": "cursorDevice.position.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#position().unsubscribe()"
  }, {
    "method": "cursorDevice.position.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#position().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isEnabled",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PinnableCursorDevice#isEnabled()"
  }, {
    "method": "cursorDevice.isEnabled.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isEnabled().set(boolean)"
  }, {
    "method": "cursorDevice.isEnabled.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isEnabled().toggle()"
  }, {
    "method": "cursorDevice.isEnabled.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isEnabled().get()"
  }, {
    "method": "cursorDevice.isEnabled.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isEnabled().getAsBoolean()"
  }, {
    "method": "cursorDevice.isEnabled.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isEnabled().isSubscribed()"
  }, {
    "method": "cursorDevice.isEnabled.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isEnabled().subscribe()"
  }, {
    "method": "cursorDevice.isEnabled.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isEnabled().unsubscribe()"
  }, {
    "method": "cursorDevice.isEnabled.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isEnabled.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isEnabled().invoke()"
  }, {
    "method": "cursorDevice.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#selectInEditor()"
  }, {
    "method": "cursorDevice.hasLayers",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#hasLayers()"
  }, {
    "method": "cursorDevice.hasLayers.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasLayers().get()"
  }, {
    "method": "cursorDevice.hasLayers.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasLayers().getAsBoolean()"
  }, {
    "method": "cursorDevice.hasLayers.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasLayers().isSubscribed()"
  }, {
    "method": "cursorDevice.hasLayers.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasLayers().subscribe()"
  }, {
    "method": "cursorDevice.hasLayers.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasLayers().unsubscribe()"
  }, {
    "method": "cursorDevice.hasLayers.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasLayers().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.getCursorSlot.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue PinnableCursorDevice#getCursorSlot().name()"
  }, {
    "method": "cursorDevice.getCursorSlot.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().name().set(java.lang.String)"
  }, {
    "method": "cursorDevice.getCursorSlot.name.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#getCursorSlot().name().get()"
  }, {
    "method": "cursorDevice.getCursorSlot.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#getCursorSlot().name().getLimited(int)"
  }, {
    "method": "cursorDevice.getCursorSlot.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#getCursorSlot().name().isSubscribed()"
  }, {
    "method": "cursorDevice.getCursorSlot.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().name().subscribe()"
  }, {
    "method": "cursorDevice.getCursorSlot.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().name().unsubscribe()"
  }, {
    "method": "cursorDevice.getCursorSlot.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.getCursorSlot.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().selectInEditor()"
  }, {
    "method": "cursorDevice.getCursorSlot.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.getCursorSlot.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.getCursorSlot.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.getCursorSlot.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.getCursorSlot.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.getCursorSlot.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.getCursorSlot.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.getCursorSlot.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.getCursorSlot.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.getCursorSlot.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.getCursorSlot.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#getCursorSlot().exists()"
  }, {
    "method": "cursorDevice.getCursorSlot.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#getCursorSlot().exists().get()"
  }, {
    "method": "cursorDevice.getCursorSlot.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#getCursorSlot().exists().getAsBoolean()"
  }, {
    "method": "cursorDevice.getCursorSlot.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#getCursorSlot().exists().isSubscribed()"
  }, {
    "method": "cursorDevice.getCursorSlot.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().exists().subscribe()"
  }, {
    "method": "cursorDevice.getCursorSlot.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().exists().unsubscribe()"
  }, {
    "method": "cursorDevice.getCursorSlot.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.getCursorSlot.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#getCursorSlot().isSubscribed()"
  }, {
    "method": "cursorDevice.getCursorSlot.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().subscribe()"
  }, {
    "method": "cursorDevice.getCursorSlot.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().unsubscribe()"
  }, {
    "method": "cursorDevice.getCursorSlot.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#getCursorSlot().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.sampleName",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#sampleName()"
  }, {
    "method": "cursorDevice.sampleName.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#sampleName().get()"
  }, {
    "method": "cursorDevice.sampleName.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#sampleName().getLimited(int)"
  }, {
    "method": "cursorDevice.sampleName.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#sampleName().isSubscribed()"
  }, {
    "method": "cursorDevice.sampleName.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#sampleName().subscribe()"
  }, {
    "method": "cursorDevice.sampleName.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#sampleName().unsubscribe()"
  }, {
    "method": "cursorDevice.sampleName.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#sampleName().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.setParameterPage",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#setParameterPage(int)"
  }, {
    "method": "cursorDevice.hasSlots",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#hasSlots()"
  }, {
    "method": "cursorDevice.hasSlots.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasSlots().get()"
  }, {
    "method": "cursorDevice.hasSlots.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasSlots().getAsBoolean()"
  }, {
    "method": "cursorDevice.hasSlots.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasSlots().isSubscribed()"
  }, {
    "method": "cursorDevice.hasSlots.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasSlots().subscribe()"
  }, {
    "method": "cursorDevice.hasSlots.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasSlots().unsubscribe()"
  }, {
    "method": "cursorDevice.hasSlots.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasSlots().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.slotNames",
    "params": [],
    "result": "object",
    "expression": "StringArrayValue PinnableCursorDevice#slotNames()"
  }, {
    "method": "cursorDevice.slotNames.get",
    "params": [],
    "result": "string[]",
    "expression": "String[] PinnableCursorDevice#slotNames().get()"
  }, {
    "method": "cursorDevice.slotNames.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object PinnableCursorDevice#slotNames().get(int)"
  }, {
    "method": "cursorDevice.slotNames.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#slotNames().isEmpty()"
  }, {
    "method": "cursorDevice.slotNames.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#slotNames().isSubscribed()"
  }, {
    "method": "cursorDevice.slotNames.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#slotNames().subscribe()"
  }, {
    "method": "cursorDevice.slotNames.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#slotNames().unsubscribe()"
  }, {
    "method": "cursorDevice.slotNames.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#slotNames().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.nextParameterPage",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#nextParameterPage()"
  }, {
    "method": "cursorDevice.isNested",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#isNested()"
  }, {
    "method": "cursorDevice.isNested.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isNested().get()"
  }, {
    "method": "cursorDevice.isNested.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isNested().getAsBoolean()"
  }, {
    "method": "cursorDevice.isNested.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isNested().isSubscribed()"
  }, {
    "method": "cursorDevice.isNested.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isNested().subscribe()"
  }, {
    "method": "cursorDevice.isNested.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isNested().unsubscribe()"
  }, {
    "method": "cursorDevice.isNested.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isNested().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isExpanded",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PinnableCursorDevice#isExpanded()"
  }, {
    "method": "cursorDevice.isExpanded.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isExpanded().set(boolean)"
  }, {
    "method": "cursorDevice.isExpanded.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isExpanded().toggle()"
  }, {
    "method": "cursorDevice.isExpanded.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isExpanded().get()"
  }, {
    "method": "cursorDevice.isExpanded.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isExpanded().getAsBoolean()"
  }, {
    "method": "cursorDevice.isExpanded.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isExpanded().isSubscribed()"
  }, {
    "method": "cursorDevice.isExpanded.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isExpanded().subscribe()"
  }, {
    "method": "cursorDevice.isExpanded.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isExpanded().unsubscribe()"
  }, {
    "method": "cursorDevice.isExpanded.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isExpanded().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isExpanded.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isExpanded().invoke()"
  }, {
    "method": "cursorDevice.isPlugin",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#isPlugin()"
  }, {
    "method": "cursorDevice.isPlugin.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isPlugin().get()"
  }, {
    "method": "cursorDevice.isPlugin.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isPlugin().getAsBoolean()"
  }, {
    "method": "cursorDevice.isPlugin.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isPlugin().isSubscribed()"
  }, {
    "method": "cursorDevice.isPlugin.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPlugin().subscribe()"
  }, {
    "method": "cursorDevice.isPlugin.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPlugin().unsubscribe()"
  }, {
    "method": "cursorDevice.isPlugin.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPlugin().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.incDirectParameterValueNormalized",
    "params": ["string", "number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#incDirectParameterValueNormalized(java.lang.String, java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.setDirectParameterValueNormalized",
    "params": ["string", "number", "number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#setDirectParameterValueNormalized(java.lang.String, java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDevice.previousParameterPage",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#previousParameterPage()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PinnableCursorDevice#isRemoteControlsSectionVisible()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isRemoteControlsSectionVisible().set(boolean)"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isRemoteControlsSectionVisible().toggle()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isRemoteControlsSectionVisible().get()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isRemoteControlsSectionVisible().getAsBoolean()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isRemoteControlsSectionVisible().isSubscribed()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isRemoteControlsSectionVisible().subscribe()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isRemoteControlsSectionVisible().unsubscribe()"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isRemoteControlsSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isRemoteControlsSectionVisible.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isRemoteControlsSectionVisible().invoke()"
  }, {
    "method": "cursorDevice.afterDeviceInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#afterDeviceInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.afterDeviceInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#afterDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.afterDeviceInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#afterDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.afterDeviceInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#afterDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.afterDeviceInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#afterDeviceInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.beforeDeviceInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#beforeDeviceInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.beforeDeviceInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#beforeDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.beforeDeviceInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#beforeDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.beforeDeviceInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#beforeDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.beforeDeviceInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#beforeDeviceInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.presetCategory",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#presetCategory()"
  }, {
    "method": "cursorDevice.presetCategory.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#presetCategory().get()"
  }, {
    "method": "cursorDevice.presetCategory.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#presetCategory().getLimited(int)"
  }, {
    "method": "cursorDevice.presetCategory.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#presetCategory().isSubscribed()"
  }, {
    "method": "cursorDevice.presetCategory.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetCategory().subscribe()"
  }, {
    "method": "cursorDevice.presetCategory.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetCategory().unsubscribe()"
  }, {
    "method": "cursorDevice.presetCategory.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetCategory().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.presetCreator",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#presetCreator()"
  }, {
    "method": "cursorDevice.presetCreator.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#presetCreator().get()"
  }, {
    "method": "cursorDevice.presetCreator.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#presetCreator().getLimited(int)"
  }, {
    "method": "cursorDevice.presetCreator.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#presetCreator().isSubscribed()"
  }, {
    "method": "cursorDevice.presetCreator.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetCreator().subscribe()"
  }, {
    "method": "cursorDevice.presetCreator.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetCreator().unsubscribe()"
  }, {
    "method": "cursorDevice.presetCreator.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetCreator().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.presetName",
    "params": [],
    "result": "object",
    "expression": "StringValue PinnableCursorDevice#presetName()"
  }, {
    "method": "cursorDevice.presetName.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#presetName().get()"
  }, {
    "method": "cursorDevice.presetName.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#presetName().getLimited(int)"
  }, {
    "method": "cursorDevice.presetName.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#presetName().isSubscribed()"
  }, {
    "method": "cursorDevice.presetName.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetName().subscribe()"
  }, {
    "method": "cursorDevice.presetName.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetName().unsubscribe()"
  }, {
    "method": "cursorDevice.presetName.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#presetName().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.deviceChain.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue PinnableCursorDevice#deviceChain().name()"
  }, {
    "method": "cursorDevice.deviceChain.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().name().set(java.lang.String)"
  }, {
    "method": "cursorDevice.deviceChain.name.get",
    "params": [],
    "result": "string",
    "expression": "String PinnableCursorDevice#deviceChain().name().get()"
  }, {
    "method": "cursorDevice.deviceChain.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PinnableCursorDevice#deviceChain().name().getLimited(int)"
  }, {
    "method": "cursorDevice.deviceChain.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#deviceChain().name().isSubscribed()"
  }, {
    "method": "cursorDevice.deviceChain.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().name().subscribe()"
  }, {
    "method": "cursorDevice.deviceChain.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().name().unsubscribe()"
  }, {
    "method": "cursorDevice.deviceChain.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.deviceChain.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().selectInEditor()"
  }, {
    "method": "cursorDevice.deviceChain.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.deviceChain.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.deviceChain.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.deviceChain.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.deviceChain.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.deviceChain.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.deviceChain.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.deviceChain.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.deviceChain.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.deviceChain.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.deviceChain.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#deviceChain().exists()"
  }, {
    "method": "cursorDevice.deviceChain.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#deviceChain().exists().get()"
  }, {
    "method": "cursorDevice.deviceChain.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#deviceChain().exists().getAsBoolean()"
  }, {
    "method": "cursorDevice.deviceChain.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#deviceChain().exists().isSubscribed()"
  }, {
    "method": "cursorDevice.deviceChain.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().exists().subscribe()"
  }, {
    "method": "cursorDevice.deviceChain.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().exists().unsubscribe()"
  }, {
    "method": "cursorDevice.deviceChain.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.deviceChain.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#deviceChain().isSubscribed()"
  }, {
    "method": "cursorDevice.deviceChain.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().subscribe()"
  }, {
    "method": "cursorDevice.deviceChain.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().unsubscribe()"
  }, {
    "method": "cursorDevice.deviceChain.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#deviceChain().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isWindowOpen",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PinnableCursorDevice#isWindowOpen()"
  }, {
    "method": "cursorDevice.isWindowOpen.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isWindowOpen().set(boolean)"
  }, {
    "method": "cursorDevice.isWindowOpen.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isWindowOpen().toggle()"
  }, {
    "method": "cursorDevice.isWindowOpen.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isWindowOpen().get()"
  }, {
    "method": "cursorDevice.isWindowOpen.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isWindowOpen().getAsBoolean()"
  }, {
    "method": "cursorDevice.isWindowOpen.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isWindowOpen().isSubscribed()"
  }, {
    "method": "cursorDevice.isWindowOpen.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isWindowOpen().subscribe()"
  }, {
    "method": "cursorDevice.isWindowOpen.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isWindowOpen().unsubscribe()"
  }, {
    "method": "cursorDevice.isWindowOpen.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isWindowOpen().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isWindowOpen.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isWindowOpen().invoke()"
  }, {
    "method": "cursorDevice.hasDrumPads",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#hasDrumPads()"
  }, {
    "method": "cursorDevice.hasDrumPads.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasDrumPads().get()"
  }, {
    "method": "cursorDevice.hasDrumPads.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasDrumPads().getAsBoolean()"
  }, {
    "method": "cursorDevice.hasDrumPads.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#hasDrumPads().isSubscribed()"
  }, {
    "method": "cursorDevice.hasDrumPads.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasDrumPads().subscribe()"
  }, {
    "method": "cursorDevice.hasDrumPads.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasDrumPads().unsubscribe()"
  }, {
    "method": "cursorDevice.hasDrumPads.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#hasDrumPads().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.replaceDeviceInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#replaceDeviceInsertionPoint().paste()"
  }, {
    "method": "cursorDevice.replaceDeviceInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void PinnableCursorDevice#replaceDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDevice.replaceDeviceInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#replaceDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDevice.replaceDeviceInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void PinnableCursorDevice#replaceDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDevice.replaceDeviceInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#replaceDeviceInsertionPoint().browse()"
  }, {
    "method": "cursorDevice.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#deleteObject()"
  }, {
    "method": "cursorDevice.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PinnableCursorDevice#exists()"
  }, {
    "method": "cursorDevice.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#exists().get()"
  }, {
    "method": "cursorDevice.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#exists().getAsBoolean()"
  }, {
    "method": "cursorDevice.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#exists().isSubscribed()"
  }, {
    "method": "cursorDevice.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#exists().subscribe()"
  }, {
    "method": "cursorDevice.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#exists().unsubscribe()"
  }, {
    "method": "cursorDevice.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isSubscribed()"
  }, {
    "method": "cursorDevice.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#subscribe()"
  }, {
    "method": "cursorDevice.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#unsubscribe()"
  }, {
    "method": "cursorDevice.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isPinned",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PinnableCursorDevice#isPinned()"
  }, {
    "method": "cursorDevice.isPinned.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPinned().set(boolean)"
  }, {
    "method": "cursorDevice.isPinned.toggle",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPinned().toggle()"
  }, {
    "method": "cursorDevice.isPinned.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isPinned().get()"
  }, {
    "method": "cursorDevice.isPinned.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isPinned().getAsBoolean()"
  }, {
    "method": "cursorDevice.isPinned.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#isPinned().isSubscribed()"
  }, {
    "method": "cursorDevice.isPinned.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPinned().subscribe()"
  }, {
    "method": "cursorDevice.isPinned.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPinned().unsubscribe()"
  }, {
    "method": "cursorDevice.isPinned.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPinned().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.isPinned.invoke",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#isPinned().invoke()"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue",
    "params": [],
    "result": "object",
    "expression": "ObservedDirectParameterValue PinnableCursorDevice#observedDirectParameterNormalizedValue()"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue.get",
    "params": ["string"],
    "result": "any",
    "expression": "Object PinnableCursorDevice#observedDirectParameterNormalizedValue().get(java.lang.String)"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue.setObservedIds",
    "params": ["string[]"],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterNormalizedValue().setObservedIds(java.lang.String[])"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue.values",
    "params": [],
    "result": "object",
    "expression": "Collection PinnableCursorDevice#observedDirectParameterNormalizedValue().values()"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#observedDirectParameterNormalizedValue().isSubscribed()"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterNormalizedValue().subscribe()"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterNormalizedValue().unsubscribe()"
  }, {
    "method": "cursorDevice.observedDirectParameterNormalizedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterNormalizedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue",
    "params": [],
    "result": "object",
    "expression": "ObservedDirectParameterValue PinnableCursorDevice#observedDirectParameterDisplayValue()"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue.get",
    "params": ["string"],
    "result": "any",
    "expression": "Object PinnableCursorDevice#observedDirectParameterDisplayValue().get(java.lang.String)"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue.setObservedIds",
    "params": ["string[]"],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterDisplayValue().setObservedIds(java.lang.String[])"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue.values",
    "params": [],
    "result": "object",
    "expression": "Collection PinnableCursorDevice#observedDirectParameterDisplayValue().values()"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#observedDirectParameterDisplayValue().isSubscribed()"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterDisplayValue().subscribe()"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterDisplayValue().unsubscribe()"
  }, {
    "method": "cursorDevice.observedDirectParameterDisplayValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterDisplayValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.directParameterIdArray",
    "params": [],
    "result": "object",
    "expression": "StringArrayValue PinnableCursorDevice#directParameterIdArray()"
  }, {
    "method": "cursorDevice.directParameterIdArray.get",
    "params": [],
    "result": "string[]",
    "expression": "String[] PinnableCursorDevice#directParameterIdArray().get()"
  }, {
    "method": "cursorDevice.directParameterIdArray.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object PinnableCursorDevice#directParameterIdArray().get(int)"
  }, {
    "method": "cursorDevice.directParameterIdArray.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#directParameterIdArray().isEmpty()"
  }, {
    "method": "cursorDevice.directParameterIdArray.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#directParameterIdArray().isSubscribed()"
  }, {
    "method": "cursorDevice.directParameterIdArray.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#directParameterIdArray().subscribe()"
  }, {
    "method": "cursorDevice.directParameterIdArray.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#directParameterIdArray().unsubscribe()"
  }, {
    "method": "cursorDevice.directParameterIdArray.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#directParameterIdArray().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDevice.setObservedDirectParameterIds",
    "params": ["string[]"],
    "result": "void",
    "expression": "void PinnableCursorDevice#setObservedDirectParameterIds(java.lang.String[])"
  }, {
    "method": "cursorDevice.observedDirectParameterName",
    "params": [],
    "result": "object",
    "expression": "ObservedDirectParameterValue PinnableCursorDevice#observedDirectParameterName()"
  }, {
    "method": "cursorDevice.observedDirectParameterName.get",
    "params": ["string"],
    "result": "any",
    "expression": "Object PinnableCursorDevice#observedDirectParameterName().get(java.lang.String)"
  }, {
    "method": "cursorDevice.observedDirectParameterName.setObservedIds",
    "params": ["string[]"],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterName().setObservedIds(java.lang.String[])"
  }, {
    "method": "cursorDevice.observedDirectParameterName.values",
    "params": [],
    "result": "object",
    "expression": "Collection PinnableCursorDevice#observedDirectParameterName().values()"
  }, {
    "method": "cursorDevice.observedDirectParameterName.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PinnableCursorDevice#observedDirectParameterName().isSubscribed()"
  }, {
    "method": "cursorDevice.observedDirectParameterName.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterName().subscribe()"
  }, {
    "method": "cursorDevice.observedDirectParameterName.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterName().unsubscribe()"
  }, {
    "method": "cursorDevice.observedDirectParameterName.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PinnableCursorDevice#observedDirectParameterName().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.chainCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue ChainSelector#chainCount()"
  }, {
    "method": "chainSelector.chainCount.get",
    "params": [],
    "result": "number",
    "expression": "int ChainSelector#chainCount().get()"
  }, {
    "method": "chainSelector.chainCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int ChainSelector#chainCount().getAsInt()"
  }, {
    "method": "chainSelector.chainCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#chainCount().isSubscribed()"
  }, {
    "method": "chainSelector.chainCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#chainCount().subscribe()"
  }, {
    "method": "chainSelector.chainCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#chainCount().unsubscribe()"
  }, {
    "method": "chainSelector.chainCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#chainCount().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.cyclePrevious",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#cyclePrevious()"
  }, {
    "method": "chainSelector.cycleNext",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#cycleNext()"
  }, {
    "method": "chainSelector.activeChain.duplicate",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().duplicate()"
  }, {
    "method": "chainSelector.activeChain.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue ChainSelector#activeChain().color()"
  }, {
    "method": "chainSelector.activeChain.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().color().set(float, float, float)"
  }, {
    "method": "chainSelector.activeChain.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().color().set(float, float, float, float)"
  }, {
    "method": "chainSelector.activeChain.color.red",
    "params": [],
    "result": "number",
    "expression": "float ChainSelector#activeChain().color().red()"
  }, {
    "method": "chainSelector.activeChain.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float ChainSelector#activeChain().color().alpha()"
  }, {
    "method": "chainSelector.activeChain.color.green",
    "params": [],
    "result": "number",
    "expression": "float ChainSelector#activeChain().color().green()"
  }, {
    "method": "chainSelector.activeChain.color.blue",
    "params": [],
    "result": "number",
    "expression": "float ChainSelector#activeChain().color().blue()"
  }, {
    "method": "chainSelector.activeChain.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().color().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().color().subscribe()"
  }, {
    "method": "chainSelector.activeChain.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().color().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().color().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.isActivated",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue ChainSelector#activeChain().isActivated()"
  }, {
    "method": "chainSelector.activeChain.isActivated.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isActivated().set(boolean)"
  }, {
    "method": "chainSelector.activeChain.isActivated.toggle",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isActivated().toggle()"
  }, {
    "method": "chainSelector.activeChain.isActivated.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().isActivated().get()"
  }, {
    "method": "chainSelector.activeChain.isActivated.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().isActivated().getAsBoolean()"
  }, {
    "method": "chainSelector.activeChain.isActivated.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().isActivated().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.isActivated.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isActivated().subscribe()"
  }, {
    "method": "chainSelector.activeChain.isActivated.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isActivated().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.isActivated.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.isActivated.invoke",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isActivated().invoke()"
  }, {
    "method": "chainSelector.activeChain.makeVisibleInMixer",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().makeVisibleInMixer()"
  }, {
    "method": "chainSelector.activeChain.pan",
    "params": [],
    "result": "object",
    "expression": "Parameter ChainSelector#activeChain().pan()"
  }, {
    "method": "chainSelector.activeChain.pan.name",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().pan().name()"
  }, {
    "method": "chainSelector.activeChain.pan.name.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().name().get()"
  }, {
    "method": "chainSelector.activeChain.pan.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().name().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.pan.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().name().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().name().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().name().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue ChainSelector#activeChain().pan().value()"
  }, {
    "method": "chainSelector.activeChain.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.pan.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().set(double)"
  }, {
    "method": "chainSelector.activeChain.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.pan.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().inc(double)"
  }, {
    "method": "chainSelector.activeChain.pan.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().setRaw(double)"
  }, {
    "method": "chainSelector.activeChain.pan.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().setImmediately(double)"
  }, {
    "method": "chainSelector.activeChain.pan.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().incRaw(double)"
  }, {
    "method": "chainSelector.activeChain.pan.value.get",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().value().get()"
  }, {
    "method": "chainSelector.activeChain.pan.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().value().getRaw()"
  }, {
    "method": "chainSelector.activeChain.pan.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().value().getAsDouble()"
  }, {
    "method": "chainSelector.activeChain.pan.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().pan().value().displayedValue()"
  }, {
    "method": "chainSelector.activeChain.pan.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().value().displayedValue().get()"
  }, {
    "method": "chainSelector.activeChain.pan.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.pan.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().displayedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().value().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.reset",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().reset()"
  }, {
    "method": "chainSelector.activeChain.pan.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().touch(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().restoreAutomationControl()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue ChainSelector#activeChain().pan().modulatedValue()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().modulatedValue().get()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().modulatedValue().getRaw()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().modulatedValue().getAsDouble()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().pan().modulatedValue().displayedValue()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().modulatedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().modulatedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().modulatedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().setIndication(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue ChainSelector#activeChain().pan().exists()"
  }, {
    "method": "chainSelector.activeChain.pan.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().exists().get()"
  }, {
    "method": "chainSelector.activeChain.pan.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().exists().getAsBoolean()"
  }, {
    "method": "chainSelector.activeChain.pan.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().exists().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().exists().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().exists().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.pan.set",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().set(double)"
  }, {
    "method": "chainSelector.activeChain.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.pan.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().inc(double)"
  }, {
    "method": "chainSelector.activeChain.pan.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().setRaw(double)"
  }, {
    "method": "chainSelector.activeChain.pan.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().setImmediately(double)"
  }, {
    "method": "chainSelector.activeChain.pan.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().incRaw(double)"
  }, {
    "method": "chainSelector.activeChain.pan.get",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().get()"
  }, {
    "method": "chainSelector.activeChain.pan.getRaw",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().getRaw()"
  }, {
    "method": "chainSelector.activeChain.pan.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().pan().getAsDouble()"
  }, {
    "method": "chainSelector.activeChain.pan.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().pan().displayedValue()"
  }, {
    "method": "chainSelector.activeChain.pan.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().displayedValue().get()"
  }, {
    "method": "chainSelector.activeChain.pan.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().pan().displayedValue().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.pan.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().pan().displayedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.pan.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().displayedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().displayedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.pan.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.mute",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue ChainSelector#activeChain().mute()"
  }, {
    "method": "chainSelector.activeChain.mute.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().mute().set(boolean)"
  }, {
    "method": "chainSelector.activeChain.mute.toggle",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().mute().toggle()"
  }, {
    "method": "chainSelector.activeChain.mute.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().mute().get()"
  }, {
    "method": "chainSelector.activeChain.mute.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().mute().getAsBoolean()"
  }, {
    "method": "chainSelector.activeChain.mute.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().mute().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.mute.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().mute().subscribe()"
  }, {
    "method": "chainSelector.activeChain.mute.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().mute().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.mute.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().mute().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.mute.invoke",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().mute().invoke()"
  }, {
    "method": "chainSelector.activeChain.solo",
    "params": [],
    "result": "object",
    "expression": "SoloValue ChainSelector#activeChain().solo()"
  }, {
    "method": "chainSelector.activeChain.solo.toggle",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().solo().toggle(boolean)"
  }, {
    "method": "chainSelector.activeChain.solo.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().solo().set(boolean)"
  }, {
    "method": "chainSelector.activeChain.solo.toggle",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().solo().toggle()"
  }, {
    "method": "chainSelector.activeChain.solo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().solo().get()"
  }, {
    "method": "chainSelector.activeChain.solo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().solo().getAsBoolean()"
  }, {
    "method": "chainSelector.activeChain.solo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().solo().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.solo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().solo().subscribe()"
  }, {
    "method": "chainSelector.activeChain.solo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().solo().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.solo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().solo().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.solo.invoke",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().solo().invoke()"
  }, {
    "method": "chainSelector.activeChain.volume",
    "params": [],
    "result": "object",
    "expression": "Parameter ChainSelector#activeChain().volume()"
  }, {
    "method": "chainSelector.activeChain.volume.name",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().volume().name()"
  }, {
    "method": "chainSelector.activeChain.volume.name.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().name().get()"
  }, {
    "method": "chainSelector.activeChain.volume.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().name().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.volume.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().name().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().name().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().name().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue ChainSelector#activeChain().volume().value()"
  }, {
    "method": "chainSelector.activeChain.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.volume.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().set(double)"
  }, {
    "method": "chainSelector.activeChain.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.volume.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().inc(double)"
  }, {
    "method": "chainSelector.activeChain.volume.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().setRaw(double)"
  }, {
    "method": "chainSelector.activeChain.volume.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().setImmediately(double)"
  }, {
    "method": "chainSelector.activeChain.volume.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().incRaw(double)"
  }, {
    "method": "chainSelector.activeChain.volume.value.get",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().value().get()"
  }, {
    "method": "chainSelector.activeChain.volume.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().value().getRaw()"
  }, {
    "method": "chainSelector.activeChain.volume.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().value().getAsDouble()"
  }, {
    "method": "chainSelector.activeChain.volume.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().volume().value().displayedValue()"
  }, {
    "method": "chainSelector.activeChain.volume.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().value().displayedValue().get()"
  }, {
    "method": "chainSelector.activeChain.volume.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.volume.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().displayedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().value().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.reset",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().reset()"
  }, {
    "method": "chainSelector.activeChain.volume.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().touch(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().restoreAutomationControl()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue ChainSelector#activeChain().volume().modulatedValue()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().modulatedValue().get()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().modulatedValue().getRaw()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().modulatedValue().getAsDouble()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().volume().modulatedValue().displayedValue()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().modulatedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().modulatedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().modulatedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().setIndication(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue ChainSelector#activeChain().volume().exists()"
  }, {
    "method": "chainSelector.activeChain.volume.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().exists().get()"
  }, {
    "method": "chainSelector.activeChain.volume.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().exists().getAsBoolean()"
  }, {
    "method": "chainSelector.activeChain.volume.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().exists().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().exists().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().exists().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.volume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().set(double)"
  }, {
    "method": "chainSelector.activeChain.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainSelector.activeChain.volume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().inc(double)"
  }, {
    "method": "chainSelector.activeChain.volume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().setRaw(double)"
  }, {
    "method": "chainSelector.activeChain.volume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().setImmediately(double)"
  }, {
    "method": "chainSelector.activeChain.volume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().incRaw(double)"
  }, {
    "method": "chainSelector.activeChain.volume.get",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().get()"
  }, {
    "method": "chainSelector.activeChain.volume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().getRaw()"
  }, {
    "method": "chainSelector.activeChain.volume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double ChainSelector#activeChain().volume().getAsDouble()"
  }, {
    "method": "chainSelector.activeChain.volume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue ChainSelector#activeChain().volume().displayedValue()"
  }, {
    "method": "chainSelector.activeChain.volume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().displayedValue().get()"
  }, {
    "method": "chainSelector.activeChain.volume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().volume().displayedValue().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.volume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().volume().displayedValue().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.volume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().displayedValue().subscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().displayedValue().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.volume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.makeVisibleInArranger",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().makeVisibleInArranger()"
  }, {
    "method": "chainSelector.activeChain.playingNotes.isNotePlaying",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().playingNotes().isNotePlaying(int)"
  }, {
    "method": "chainSelector.activeChain.playingNotes.get",
    "params": [],
    "result": "any[]",
    "expression": "Object[] ChainSelector#activeChain().playingNotes().get()"
  }, {
    "method": "chainSelector.activeChain.playingNotes.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object ChainSelector#activeChain().playingNotes().get(int)"
  }, {
    "method": "chainSelector.activeChain.playingNotes.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().playingNotes().isEmpty()"
  }, {
    "method": "chainSelector.activeChain.playingNotes.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().playingNotes().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.playingNotes.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().playingNotes().subscribe()"
  }, {
    "method": "chainSelector.activeChain.playingNotes.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().playingNotes().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.playingNotes.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.isMutedBySolo",
    "params": [],
    "result": "object",
    "expression": "BooleanValue ChainSelector#activeChain().isMutedBySolo()"
  }, {
    "method": "chainSelector.activeChain.isMutedBySolo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().isMutedBySolo().get()"
  }, {
    "method": "chainSelector.activeChain.isMutedBySolo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().isMutedBySolo().getAsBoolean()"
  }, {
    "method": "chainSelector.activeChain.isMutedBySolo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().isMutedBySolo().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.isMutedBySolo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isMutedBySolo().subscribe()"
  }, {
    "method": "chainSelector.activeChain.isMutedBySolo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isMutedBySolo().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.isMutedBySolo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.selectInMixer",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().selectInMixer()"
  }, {
    "method": "chainSelector.activeChain.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().deleteObject()"
  }, {
    "method": "chainSelector.activeChain.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue ChainSelector#activeChain().name()"
  }, {
    "method": "chainSelector.activeChain.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().name().set(java.lang.String)"
  }, {
    "method": "chainSelector.activeChain.name.get",
    "params": [],
    "result": "string",
    "expression": "String ChainSelector#activeChain().name().get()"
  }, {
    "method": "chainSelector.activeChain.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String ChainSelector#activeChain().name().getLimited(int)"
  }, {
    "method": "chainSelector.activeChain.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().name().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().name().subscribe()"
  }, {
    "method": "chainSelector.activeChain.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().name().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().name().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().selectInEditor()"
  }, {
    "method": "chainSelector.activeChain.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainSelector.activeChain.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainSelector.activeChain.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainSelector.activeChain.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainSelector.activeChain.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainSelector.activeChain.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainSelector.activeChain.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainSelector.activeChain.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainSelector.activeChain.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainSelector.activeChain.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainSelector.activeChain.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue ChainSelector#activeChain().exists()"
  }, {
    "method": "chainSelector.activeChain.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().exists().get()"
  }, {
    "method": "chainSelector.activeChain.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().exists().getAsBoolean()"
  }, {
    "method": "chainSelector.activeChain.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().exists().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().exists().subscribe()"
  }, {
    "method": "chainSelector.activeChain.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().exists().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().subscribe()"
  }, {
    "method": "chainSelector.activeChain.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChain.vuMeter",
    "params": [],
    "result": "object",
    "expression": "VuMeterValue ChainSelector#activeChain().vuMeter()"
  }, {
    "method": "chainSelector.activeChain.vuMeter.get",
    "params": ["number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel ChainSelector#activeChain().vuMeter().get(int, boolean)"
  }, {
    "method": "chainSelector.activeChain.vuMeter.values",
    "params": [],
    "result": "object",
    "expression": "Collection ChainSelector#activeChain().vuMeter().values()"
  }, {
    "method": "chainSelector.activeChain.vuMeter.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChain().vuMeter().isSubscribed()"
  }, {
    "method": "chainSelector.activeChain.vuMeter.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().vuMeter().subscribe()"
  }, {
    "method": "chainSelector.activeChain.vuMeter.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChain().vuMeter().unsubscribe()"
  }, {
    "method": "chainSelector.activeChain.vuMeter.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChain().vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.activeChainIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue ChainSelector#activeChainIndex()"
  }, {
    "method": "chainSelector.activeChainIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChainIndex().set(int)"
  }, {
    "method": "chainSelector.activeChainIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void ChainSelector#activeChainIndex().inc(int)"
  }, {
    "method": "chainSelector.activeChainIndex.get",
    "params": [],
    "result": "number",
    "expression": "int ChainSelector#activeChainIndex().get()"
  }, {
    "method": "chainSelector.activeChainIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int ChainSelector#activeChainIndex().getAsInt()"
  }, {
    "method": "chainSelector.activeChainIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#activeChainIndex().isSubscribed()"
  }, {
    "method": "chainSelector.activeChainIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChainIndex().subscribe()"
  }, {
    "method": "chainSelector.activeChainIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#activeChainIndex().unsubscribe()"
  }, {
    "method": "chainSelector.activeChainIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#activeChainIndex().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.hasNext",
    "params": [],
    "result": "object",
    "expression": "BooleanValue ChainSelector#hasNext()"
  }, {
    "method": "chainSelector.hasNext.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#hasNext().get()"
  }, {
    "method": "chainSelector.hasNext.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#hasNext().getAsBoolean()"
  }, {
    "method": "chainSelector.hasNext.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#hasNext().isSubscribed()"
  }, {
    "method": "chainSelector.hasNext.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#hasNext().subscribe()"
  }, {
    "method": "chainSelector.hasNext.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#hasNext().unsubscribe()"
  }, {
    "method": "chainSelector.hasNext.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#hasNext().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.hasPrevious",
    "params": [],
    "result": "object",
    "expression": "BooleanValue ChainSelector#hasPrevious()"
  }, {
    "method": "chainSelector.hasPrevious.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#hasPrevious().get()"
  }, {
    "method": "chainSelector.hasPrevious.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#hasPrevious().getAsBoolean()"
  }, {
    "method": "chainSelector.hasPrevious.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#hasPrevious().isSubscribed()"
  }, {
    "method": "chainSelector.hasPrevious.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#hasPrevious().subscribe()"
  }, {
    "method": "chainSelector.hasPrevious.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#hasPrevious().unsubscribe()"
  }, {
    "method": "chainSelector.hasPrevious.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#hasPrevious().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.selectFirst",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#selectFirst()"
  }, {
    "method": "chainSelector.selectPrevious",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#selectPrevious()"
  }, {
    "method": "chainSelector.selectLast",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#selectLast()"
  }, {
    "method": "chainSelector.selectNext",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#selectNext()"
  }, {
    "method": "chainSelector.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue ChainSelector#exists()"
  }, {
    "method": "chainSelector.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#exists().get()"
  }, {
    "method": "chainSelector.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#exists().getAsBoolean()"
  }, {
    "method": "chainSelector.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#exists().isSubscribed()"
  }, {
    "method": "chainSelector.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#exists().subscribe()"
  }, {
    "method": "chainSelector.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#exists().unsubscribe()"
  }, {
    "method": "chainSelector.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainSelector.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean ChainSelector#isSubscribed()"
  }, {
    "method": "chainSelector.subscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#subscribe()"
  }, {
    "method": "chainSelector.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void ChainSelector#unsubscribe()"
  }, {
    "method": "chainSelector.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void ChainSelector#setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.duplicate",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#duplicate()"
  }, {
    "method": "cursorDeviceLayer.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue CursorDeviceLayer#color()"
  }, {
    "method": "cursorDeviceLayer.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#color().set(float, float, float)"
  }, {
    "method": "cursorDeviceLayer.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#color().set(float, float, float, float)"
  }, {
    "method": "cursorDeviceLayer.color.red",
    "params": [],
    "result": "number",
    "expression": "float CursorDeviceLayer#color().red()"
  }, {
    "method": "cursorDeviceLayer.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float CursorDeviceLayer#color().alpha()"
  }, {
    "method": "cursorDeviceLayer.color.green",
    "params": [],
    "result": "number",
    "expression": "float CursorDeviceLayer#color().green()"
  }, {
    "method": "cursorDeviceLayer.color.blue",
    "params": [],
    "result": "number",
    "expression": "float CursorDeviceLayer#color().blue()"
  }, {
    "method": "cursorDeviceLayer.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#color().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#color().subscribe()"
  }, {
    "method": "cursorDeviceLayer.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#color().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#color().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.isActivated",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorDeviceLayer#isActivated()"
  }, {
    "method": "cursorDeviceLayer.isActivated.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#isActivated().set(boolean)"
  }, {
    "method": "cursorDeviceLayer.isActivated.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#isActivated().toggle()"
  }, {
    "method": "cursorDeviceLayer.isActivated.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#isActivated().get()"
  }, {
    "method": "cursorDeviceLayer.isActivated.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#isActivated().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.isActivated.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#isActivated().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.isActivated.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#isActivated().subscribe()"
  }, {
    "method": "cursorDeviceLayer.isActivated.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#isActivated().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.isActivated.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.isActivated.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#isActivated().invoke()"
  }, {
    "method": "cursorDeviceLayer.makeVisibleInMixer",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#makeVisibleInMixer()"
  }, {
    "method": "cursorDeviceLayer.pan",
    "params": [],
    "result": "object",
    "expression": "Parameter CursorDeviceLayer#pan()"
  }, {
    "method": "cursorDeviceLayer.pan.name",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#pan().name()"
  }, {
    "method": "cursorDeviceLayer.pan.name.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().name().get()"
  }, {
    "method": "cursorDeviceLayer.pan.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().name().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.pan.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().name().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().name().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().name().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue CursorDeviceLayer#pan().value()"
  }, {
    "method": "cursorDeviceLayer.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.pan.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().set(double)"
  }, {
    "method": "cursorDeviceLayer.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.pan.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().inc(double)"
  }, {
    "method": "cursorDeviceLayer.pan.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().setRaw(double)"
  }, {
    "method": "cursorDeviceLayer.pan.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().setImmediately(double)"
  }, {
    "method": "cursorDeviceLayer.pan.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().incRaw(double)"
  }, {
    "method": "cursorDeviceLayer.pan.value.get",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().value().get()"
  }, {
    "method": "cursorDeviceLayer.pan.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().value().getRaw()"
  }, {
    "method": "cursorDeviceLayer.pan.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().value().getAsDouble()"
  }, {
    "method": "cursorDeviceLayer.pan.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#pan().value().displayedValue()"
  }, {
    "method": "cursorDeviceLayer.pan.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().value().displayedValue().get()"
  }, {
    "method": "cursorDeviceLayer.pan.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.pan.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().displayedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().value().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.reset",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().reset()"
  }, {
    "method": "cursorDeviceLayer.pan.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().touch(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().restoreAutomationControl()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue CursorDeviceLayer#pan().modulatedValue()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().modulatedValue().get()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().modulatedValue().getRaw()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().modulatedValue().getAsDouble()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#pan().modulatedValue().displayedValue()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().modulatedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().modulatedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().modulatedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().setIndication(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorDeviceLayer#pan().exists()"
  }, {
    "method": "cursorDeviceLayer.pan.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().exists().get()"
  }, {
    "method": "cursorDeviceLayer.pan.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().exists().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.pan.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().exists().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().exists().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().exists().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.pan.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().set(double)"
  }, {
    "method": "cursorDeviceLayer.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.pan.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().inc(double)"
  }, {
    "method": "cursorDeviceLayer.pan.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().setRaw(double)"
  }, {
    "method": "cursorDeviceLayer.pan.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().setImmediately(double)"
  }, {
    "method": "cursorDeviceLayer.pan.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().incRaw(double)"
  }, {
    "method": "cursorDeviceLayer.pan.get",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().get()"
  }, {
    "method": "cursorDeviceLayer.pan.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().getRaw()"
  }, {
    "method": "cursorDeviceLayer.pan.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#pan().getAsDouble()"
  }, {
    "method": "cursorDeviceLayer.pan.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#pan().displayedValue()"
  }, {
    "method": "cursorDeviceLayer.pan.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().displayedValue().get()"
  }, {
    "method": "cursorDeviceLayer.pan.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#pan().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.pan.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#pan().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.pan.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().displayedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.pan.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.mute",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue CursorDeviceLayer#mute()"
  }, {
    "method": "cursorDeviceLayer.mute.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#mute().set(boolean)"
  }, {
    "method": "cursorDeviceLayer.mute.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#mute().toggle()"
  }, {
    "method": "cursorDeviceLayer.mute.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#mute().get()"
  }, {
    "method": "cursorDeviceLayer.mute.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#mute().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.mute.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#mute().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.mute.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#mute().subscribe()"
  }, {
    "method": "cursorDeviceLayer.mute.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#mute().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.mute.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#mute().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.mute.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#mute().invoke()"
  }, {
    "method": "cursorDeviceLayer.solo",
    "params": [],
    "result": "object",
    "expression": "SoloValue CursorDeviceLayer#solo()"
  }, {
    "method": "cursorDeviceLayer.solo.toggle",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#solo().toggle(boolean)"
  }, {
    "method": "cursorDeviceLayer.solo.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#solo().set(boolean)"
  }, {
    "method": "cursorDeviceLayer.solo.toggle",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#solo().toggle()"
  }, {
    "method": "cursorDeviceLayer.solo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#solo().get()"
  }, {
    "method": "cursorDeviceLayer.solo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#solo().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.solo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#solo().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.solo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#solo().subscribe()"
  }, {
    "method": "cursorDeviceLayer.solo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#solo().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.solo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#solo().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.solo.invoke",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#solo().invoke()"
  }, {
    "method": "cursorDeviceLayer.volume",
    "params": [],
    "result": "object",
    "expression": "Parameter CursorDeviceLayer#volume()"
  }, {
    "method": "cursorDeviceLayer.volume.name",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#volume().name()"
  }, {
    "method": "cursorDeviceLayer.volume.name.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().name().get()"
  }, {
    "method": "cursorDeviceLayer.volume.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().name().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.volume.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().name().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().name().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().name().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue CursorDeviceLayer#volume().value()"
  }, {
    "method": "cursorDeviceLayer.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.volume.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().set(double)"
  }, {
    "method": "cursorDeviceLayer.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.volume.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().inc(double)"
  }, {
    "method": "cursorDeviceLayer.volume.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().setRaw(double)"
  }, {
    "method": "cursorDeviceLayer.volume.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().setImmediately(double)"
  }, {
    "method": "cursorDeviceLayer.volume.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().incRaw(double)"
  }, {
    "method": "cursorDeviceLayer.volume.value.get",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().value().get()"
  }, {
    "method": "cursorDeviceLayer.volume.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().value().getRaw()"
  }, {
    "method": "cursorDeviceLayer.volume.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().value().getAsDouble()"
  }, {
    "method": "cursorDeviceLayer.volume.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#volume().value().displayedValue()"
  }, {
    "method": "cursorDeviceLayer.volume.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().value().displayedValue().get()"
  }, {
    "method": "cursorDeviceLayer.volume.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.volume.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().displayedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().value().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.reset",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().reset()"
  }, {
    "method": "cursorDeviceLayer.volume.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().touch(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().restoreAutomationControl()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue CursorDeviceLayer#volume().modulatedValue()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().modulatedValue().get()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().modulatedValue().getRaw()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().modulatedValue().getAsDouble()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#volume().modulatedValue().displayedValue()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().modulatedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().modulatedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().modulatedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().setIndication(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorDeviceLayer#volume().exists()"
  }, {
    "method": "cursorDeviceLayer.volume.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().exists().get()"
  }, {
    "method": "cursorDeviceLayer.volume.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().exists().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.volume.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().exists().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().exists().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().exists().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.volume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().set(double)"
  }, {
    "method": "cursorDeviceLayer.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorDeviceLayer.volume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().inc(double)"
  }, {
    "method": "cursorDeviceLayer.volume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().setRaw(double)"
  }, {
    "method": "cursorDeviceLayer.volume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().setImmediately(double)"
  }, {
    "method": "cursorDeviceLayer.volume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().incRaw(double)"
  }, {
    "method": "cursorDeviceLayer.volume.get",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().get()"
  }, {
    "method": "cursorDeviceLayer.volume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().getRaw()"
  }, {
    "method": "cursorDeviceLayer.volume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double CursorDeviceLayer#volume().getAsDouble()"
  }, {
    "method": "cursorDeviceLayer.volume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorDeviceLayer#volume().displayedValue()"
  }, {
    "method": "cursorDeviceLayer.volume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().displayedValue().get()"
  }, {
    "method": "cursorDeviceLayer.volume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#volume().displayedValue().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.volume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#volume().displayedValue().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.volume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().displayedValue().subscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().displayedValue().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.volume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.makeVisibleInArranger",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#makeVisibleInArranger()"
  }, {
    "method": "cursorDeviceLayer.playingNotes.isNotePlaying",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#playingNotes().isNotePlaying(int)"
  }, {
    "method": "cursorDeviceLayer.playingNotes.get",
    "params": [],
    "result": "any[]",
    "expression": "Object[] CursorDeviceLayer#playingNotes().get()"
  }, {
    "method": "cursorDeviceLayer.playingNotes.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object CursorDeviceLayer#playingNotes().get(int)"
  }, {
    "method": "cursorDeviceLayer.playingNotes.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#playingNotes().isEmpty()"
  }, {
    "method": "cursorDeviceLayer.playingNotes.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#playingNotes().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.playingNotes.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#playingNotes().subscribe()"
  }, {
    "method": "cursorDeviceLayer.playingNotes.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#playingNotes().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.playingNotes.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.isMutedBySolo",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorDeviceLayer#isMutedBySolo()"
  }, {
    "method": "cursorDeviceLayer.isMutedBySolo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#isMutedBySolo().get()"
  }, {
    "method": "cursorDeviceLayer.isMutedBySolo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#isMutedBySolo().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.isMutedBySolo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#isMutedBySolo().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.isMutedBySolo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#isMutedBySolo().subscribe()"
  }, {
    "method": "cursorDeviceLayer.isMutedBySolo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#isMutedBySolo().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.isMutedBySolo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.selectInMixer",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#selectInMixer()"
  }, {
    "method": "cursorDeviceLayer.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#deleteObject()"
  }, {
    "method": "cursorDeviceLayer.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue CursorDeviceLayer#name()"
  }, {
    "method": "cursorDeviceLayer.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorDeviceLayer#name().set(java.lang.String)"
  }, {
    "method": "cursorDeviceLayer.name.get",
    "params": [],
    "result": "string",
    "expression": "String CursorDeviceLayer#name().get()"
  }, {
    "method": "cursorDeviceLayer.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorDeviceLayer#name().getLimited(int)"
  }, {
    "method": "cursorDeviceLayer.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#name().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#name().subscribe()"
  }, {
    "method": "cursorDeviceLayer.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#name().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#selectInEditor()"
  }, {
    "method": "cursorDeviceLayer.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDeviceLayer.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDeviceLayer.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorDeviceLayer#startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDeviceLayer.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorDeviceLayer#startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDeviceLayer.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDeviceLayer.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "cursorDeviceLayer.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorDeviceLayer#endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "cursorDeviceLayer.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorDeviceLayer#endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "cursorDeviceLayer.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void CursorDeviceLayer#endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "cursorDeviceLayer.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "cursorDeviceLayer.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorDeviceLayer#exists()"
  }, {
    "method": "cursorDeviceLayer.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#exists().get()"
  }, {
    "method": "cursorDeviceLayer.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#exists().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#exists().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#exists().subscribe()"
  }, {
    "method": "cursorDeviceLayer.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#exists().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#subscribe()"
  }, {
    "method": "cursorDeviceLayer.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.hasNext",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorDeviceLayer#hasNext()"
  }, {
    "method": "cursorDeviceLayer.hasNext.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#hasNext().get()"
  }, {
    "method": "cursorDeviceLayer.hasNext.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#hasNext().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.hasNext.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#hasNext().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.hasNext.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#hasNext().subscribe()"
  }, {
    "method": "cursorDeviceLayer.hasNext.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#hasNext().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.hasNext.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#hasNext().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.hasPrevious",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorDeviceLayer#hasPrevious()"
  }, {
    "method": "cursorDeviceLayer.hasPrevious.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#hasPrevious().get()"
  }, {
    "method": "cursorDeviceLayer.hasPrevious.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#hasPrevious().getAsBoolean()"
  }, {
    "method": "cursorDeviceLayer.hasPrevious.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#hasPrevious().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.hasPrevious.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#hasPrevious().subscribe()"
  }, {
    "method": "cursorDeviceLayer.hasPrevious.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#hasPrevious().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.hasPrevious.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#hasPrevious().setIsSubscribed(boolean)"
  }, {
    "method": "cursorDeviceLayer.selectFirst",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#selectFirst()"
  }, {
    "method": "cursorDeviceLayer.selectPrevious",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#selectPrevious()"
  }, {
    "method": "cursorDeviceLayer.selectLast",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#selectLast()"
  }, {
    "method": "cursorDeviceLayer.selectNext",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#selectNext()"
  }, {
    "method": "cursorDeviceLayer.vuMeter",
    "params": [],
    "result": "object",
    "expression": "VuMeterValue CursorDeviceLayer#vuMeter()"
  }, {
    "method": "cursorDeviceLayer.vuMeter.get",
    "params": ["number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel CursorDeviceLayer#vuMeter().get(int, boolean)"
  }, {
    "method": "cursorDeviceLayer.vuMeter.values",
    "params": [],
    "result": "object",
    "expression": "Collection CursorDeviceLayer#vuMeter().values()"
  }, {
    "method": "cursorDeviceLayer.vuMeter.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorDeviceLayer#vuMeter().isSubscribed()"
  }, {
    "method": "cursorDeviceLayer.vuMeter.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#vuMeter().subscribe()"
  }, {
    "method": "cursorDeviceLayer.vuMeter.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorDeviceLayer#vuMeter().unsubscribe()"
  }, {
    "method": "cursorDeviceLayer.vuMeter.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorDeviceLayer#vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.pageCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue CursorRemoteControlsPage#pageCount()"
  }, {
    "method": "cursorRemoteControlsPage.pageCount.get",
    "params": [],
    "result": "number",
    "expression": "int CursorRemoteControlsPage#pageCount().get()"
  }, {
    "method": "cursorRemoteControlsPage.pageCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int CursorRemoteControlsPage#pageCount().getAsInt()"
  }, {
    "method": "cursorRemoteControlsPage.pageCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#pageCount().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.pageCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#pageCount().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.pageCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#pageCount().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.pageCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#pageCount().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.selectNextPageMatching",
    "params": ["string", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectNextPageMatching(java.lang.String, boolean)"
  }, {
    "method": "cursorRemoteControlsPage.selectPreviousPageMatching",
    "params": ["string", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectPreviousPageMatching(java.lang.String, boolean)"
  }, {
    "method": "cursorRemoteControlsPage.selectNextPage",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectNextPage(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.selectPreviousPage",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectPreviousPage(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.pageNames",
    "params": [],
    "result": "object",
    "expression": "StringArrayValue CursorRemoteControlsPage#pageNames()"
  }, {
    "method": "cursorRemoteControlsPage.pageNames.get",
    "params": [],
    "result": "string[]",
    "expression": "String[] CursorRemoteControlsPage#pageNames().get()"
  }, {
    "method": "cursorRemoteControlsPage.pageNames.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object CursorRemoteControlsPage#pageNames().get(int)"
  }, {
    "method": "cursorRemoteControlsPage.pageNames.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#pageNames().isEmpty()"
  }, {
    "method": "cursorRemoteControlsPage.pageNames.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#pageNames().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.pageNames.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#pageNames().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.pageNames.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#pageNames().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.pageNames.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#pageNames().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue CursorRemoteControlsPage#selectedPageIndex()"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectedPageIndex().set(int)"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectedPageIndex().inc(int)"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.get",
    "params": [],
    "result": "number",
    "expression": "int CursorRemoteControlsPage#selectedPageIndex().get()"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int CursorRemoteControlsPage#selectedPageIndex().getAsInt()"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#selectedPageIndex().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectedPageIndex().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectedPageIndex().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.selectedPageIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectedPageIndex().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.hasNext",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorRemoteControlsPage#hasNext()"
  }, {
    "method": "cursorRemoteControlsPage.hasNext.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#hasNext().get()"
  }, {
    "method": "cursorRemoteControlsPage.hasNext.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#hasNext().getAsBoolean()"
  }, {
    "method": "cursorRemoteControlsPage.hasNext.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#hasNext().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.hasNext.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#hasNext().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.hasNext.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#hasNext().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.hasNext.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#hasNext().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.hasPrevious",
    "params": [],
    "result": "object",
    "expression": "BooleanValue CursorRemoteControlsPage#hasPrevious()"
  }, {
    "method": "cursorRemoteControlsPage.hasPrevious.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#hasPrevious().get()"
  }, {
    "method": "cursorRemoteControlsPage.hasPrevious.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#hasPrevious().getAsBoolean()"
  }, {
    "method": "cursorRemoteControlsPage.hasPrevious.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#hasPrevious().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.hasPrevious.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#hasPrevious().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.hasPrevious.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#hasPrevious().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.hasPrevious.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#hasPrevious().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.selectFirst",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectFirst()"
  }, {
    "method": "cursorRemoteControlsPage.selectPrevious",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectPrevious()"
  }, {
    "method": "cursorRemoteControlsPage.selectLast",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectLast()"
  }, {
    "method": "cursorRemoteControlsPage.selectNext",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#selectNext()"
  }, {
    "method": "cursorRemoteControlsPage.getName",
    "params": [],
    "result": "object",
    "expression": "StringValue CursorRemoteControlsPage#getName()"
  }, {
    "method": "cursorRemoteControlsPage.getName.get",
    "params": [],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getName().get()"
  }, {
    "method": "cursorRemoteControlsPage.getName.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getName().getLimited(int)"
  }, {
    "method": "cursorRemoteControlsPage.getName.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getName().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getName.subscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getName().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getName.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getName().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getName.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getName().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter",
    "params": ["number"],
    "result": "object",
    "expression": "RemoteControl CursorRemoteControlsPage#getParameter(int)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue CursorRemoteControlsPage#getParameter(int).name()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).name().set(java.lang.String)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).name().get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).name().getLimited(int)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).name().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).name().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).name().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue CursorRemoteControlsPage#getParameter(int).value()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().set(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().inc(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().setRaw(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().setImmediately(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().incRaw(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).value().get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).value().getRaw()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).value().getAsDouble()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue CursorRemoteControlsPage#getParameter(int).value().displayedValue()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).value().displayedValue().get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).value().displayedValue().getLimited(int)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).value().displayedValue().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().displayedValue().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().displayedValue().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).value().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).value().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).reset()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).touch(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).restoreAutomationControl()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue CursorRemoteControlsPage#getParameter(int).modulatedValue()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).modulatedValue().get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).modulatedValue().getRaw()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).modulatedValue().getAsDouble()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue CursorRemoteControlsPage#getParameter(int).modulatedValue().displayedValue()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).modulatedValue().displayedValue().get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).modulatedValue().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).modulatedValue().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).modulatedValue().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).setIndication(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue CursorRemoteControlsPage#getParameter(int).exists()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).exists().get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).exists().getAsBoolean()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).exists().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).exists().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).exists().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).set(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).inc(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).setRaw(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).setImmediately(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).incRaw(double)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.get",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).getRaw()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double CursorRemoteControlsPage#getParameter(int).getAsDouble()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue CursorRemoteControlsPage#getParameter(int).displayedValue()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).displayedValue().get()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String CursorRemoteControlsPage#getParameter(int).displayedValue().getLimited(int)"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean CursorRemoteControlsPage#getParameter(int).displayedValue().isSubscribed()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).displayedValue().subscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).displayedValue().unsubscribe()"
  }, {
    "method": "cursorRemoteControlsPage.getParameter.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#getParameter(int).displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "cursorRemoteControlsPage.getParameterCount",
    "params": [],
    "result": "number",
    "expression": "int CursorRemoteControlsPage#getParameterCount()"
  }, {
    "method": "cursorRemoteControlsPage.setHardwareLayout",
    "params": ["string", "number"],
    "result": "void",
    "expression": "void CursorRemoteControlsPage#setHardwareLayout(com.bitwig.extension.controller.api.HardwareControlType, int)"
  }, {
    "method": "deviceLayerBank.setChannelScrollStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#setChannelScrollStepSize(int)"
  }, {
    "method": "deviceLayerBank.canScrollChannelsUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#canScrollChannelsUp()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollChannelsUp().get()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollChannelsUp().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollChannelsUp().isSubscribed()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollChannelsUp().subscribe()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollChannelsUp().unsubscribe()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollChannelsUp().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.canScrollChannelsDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#canScrollChannelsDown()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollChannelsDown().get()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollChannelsDown().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollChannelsDown().isSubscribed()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollChannelsDown().subscribe()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollChannelsDown().unsubscribe()"
  }, {
    "method": "deviceLayerBank.canScrollChannelsDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollChannelsDown().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.channelCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue DeviceLayerBank#channelCount()"
  }, {
    "method": "deviceLayerBank.channelCount.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#channelCount().get()"
  }, {
    "method": "deviceLayerBank.channelCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#channelCount().getAsInt()"
  }, {
    "method": "deviceLayerBank.channelCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#channelCount().isSubscribed()"
  }, {
    "method": "deviceLayerBank.channelCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#channelCount().subscribe()"
  }, {
    "method": "deviceLayerBank.channelCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#channelCount().unsubscribe()"
  }, {
    "method": "deviceLayerBank.channelCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#channelCount().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#getSizeOfBank()"
  }, {
    "method": "deviceLayerBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#getCapacityOfBank()"
  }, {
    "method": "deviceLayerBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollPageBackwards()"
  }, {
    "method": "deviceLayerBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#setSizeOfBank(int)"
  }, {
    "method": "deviceLayerBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue DeviceLayerBank#itemCount()"
  }, {
    "method": "deviceLayerBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#itemCount().get()"
  }, {
    "method": "deviceLayerBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#itemCount().getAsInt()"
  }, {
    "method": "deviceLayerBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#itemCount().isSubscribed()"
  }, {
    "method": "deviceLayerBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#itemCount().subscribe()"
  }, {
    "method": "deviceLayerBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#itemCount().unsubscribe()"
  }, {
    "method": "deviceLayerBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.duplicate",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).duplicate()"
  }, {
    "method": "deviceLayerBank.getItemAt.color",
    "params": ["number"],
    "result": "object",
    "expression": "SettableColorValue DeviceLayerBank#getItemAt(int).color()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).color().set(float, float, float)"
  }, {
    "method": "deviceLayerBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).color().set(float, float, float, float)"
  }, {
    "method": "deviceLayerBank.getItemAt.color.red",
    "params": ["number"],
    "result": "number",
    "expression": "float DeviceLayerBank#getItemAt(int).color().red()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float DeviceLayerBank#getItemAt(int).color().alpha()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.green",
    "params": ["number"],
    "result": "number",
    "expression": "float DeviceLayerBank#getItemAt(int).color().green()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float DeviceLayerBank#getItemAt(int).color().blue()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).color().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).color().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).color().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.color.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).color().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceLayerBank#getItemAt(int).isActivated()"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isActivated().set(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isActivated().toggle()"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).isActivated().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).isActivated().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).isActivated().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isActivated().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isActivated().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.isActivated.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isActivated().invoke()"
  }, {
    "method": "deviceLayerBank.getItemAt.makeVisibleInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).makeVisibleInMixer()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter DeviceLayerBank#getItemAt(int).pan()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).pan().name()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().name().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().name().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().name().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().name().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().name().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue DeviceLayerBank#getItemAt(int).pan().value()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().set(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().inc(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().setRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().setImmediately(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().incRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().value().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().value().getRaw()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().value().getAsDouble()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).pan().value().displayedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().value().displayedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().displayedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().value().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().reset()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().touch(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().restoreAutomationControl()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue DeviceLayerBank#getItemAt(int).pan().modulatedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().modulatedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().modulatedValue().getRaw()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().modulatedValue().getAsDouble()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).pan().modulatedValue().displayedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().modulatedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().modulatedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().modulatedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().setIndication(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#getItemAt(int).pan().exists()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().exists().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().exists().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().exists().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().exists().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().exists().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().set(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().inc(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().setRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().setImmediately(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().incRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().getRaw()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).pan().getAsDouble()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).pan().displayedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().displayedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).pan().displayedValue().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).pan().displayedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().displayedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().displayedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.pan.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.mute",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceLayerBank#getItemAt(int).mute()"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).mute().set(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).mute().toggle()"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).mute().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).mute().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).mute().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).mute().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).mute().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).mute().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.mute.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).mute().invoke()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo",
    "params": ["number"],
    "result": "object",
    "expression": "SoloValue DeviceLayerBank#getItemAt(int).solo()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.toggle",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).solo().toggle(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).solo().set(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).solo().toggle()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).solo().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).solo().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).solo().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).solo().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).solo().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).solo().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.solo.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).solo().invoke()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter DeviceLayerBank#getItemAt(int).volume()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).volume().name()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().name().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().name().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().name().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().name().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().name().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue DeviceLayerBank#getItemAt(int).volume().value()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().set(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().inc(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().setRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().setImmediately(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().incRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().value().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().value().getRaw()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().value().getAsDouble()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).volume().value().displayedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().value().displayedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().displayedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().value().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().reset()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().touch(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().restoreAutomationControl()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue DeviceLayerBank#getItemAt(int).volume().modulatedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().modulatedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().modulatedValue().getRaw()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().modulatedValue().getAsDouble()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).volume().modulatedValue().displayedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().modulatedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().modulatedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().modulatedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().setIndication(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#getItemAt(int).volume().exists()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().exists().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().exists().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().exists().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().exists().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().exists().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().set(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().inc(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().setRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().setImmediately(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().incRaw(double)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().getRaw()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DeviceLayerBank#getItemAt(int).volume().getAsDouble()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceLayerBank#getItemAt(int).volume().displayedValue()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().displayedValue().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).volume().displayedValue().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).volume().displayedValue().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().displayedValue().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().displayedValue().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.volume.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.makeVisibleInArranger",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).makeVisibleInArranger()"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.isNotePlaying",
    "params": ["number", "number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).playingNotes().isNotePlaying(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.get",
    "params": ["number"],
    "result": "any[]",
    "expression": "Object[] DeviceLayerBank#getItemAt(int).playingNotes().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object DeviceLayerBank#getItemAt(int).playingNotes().get(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).playingNotes().isEmpty()"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).playingNotes().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).playingNotes().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).playingNotes().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.playingNotes.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.isMutedBySolo",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#getItemAt(int).isMutedBySolo()"
  }, {
    "method": "deviceLayerBank.getItemAt.isMutedBySolo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).isMutedBySolo().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.isMutedBySolo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).isMutedBySolo().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.getItemAt.isMutedBySolo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).isMutedBySolo().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.isMutedBySolo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isMutedBySolo().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.isMutedBySolo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isMutedBySolo().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.isMutedBySolo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.selectInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).selectInMixer()"
  }, {
    "method": "deviceLayerBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).deleteObject()"
  }, {
    "method": "deviceLayerBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue DeviceLayerBank#getItemAt(int).name()"
  }, {
    "method": "deviceLayerBank.getItemAt.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).name().set(java.lang.String)"
  }, {
    "method": "deviceLayerBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).name().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceLayerBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "deviceLayerBank.getItemAt.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "deviceLayerBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "deviceLayerBank.getItemAt.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "deviceLayerBank.getItemAt.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "deviceLayerBank.getItemAt.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "deviceLayerBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "deviceLayerBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "deviceLayerBank.getItemAt.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "deviceLayerBank.getItemAt.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "deviceLayerBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#getItemAt(int).exists()"
  }, {
    "method": "deviceLayerBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).exists().get()"
  }, {
    "method": "deviceLayerBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.vuMeter",
    "params": ["number"],
    "result": "object",
    "expression": "VuMeterValue DeviceLayerBank#getItemAt(int).vuMeter()"
  }, {
    "method": "deviceLayerBank.getItemAt.vuMeter.get",
    "params": ["number", "number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel DeviceLayerBank#getItemAt(int).vuMeter().get(int, boolean)"
  }, {
    "method": "deviceLayerBank.getItemAt.vuMeter.values",
    "params": ["number"],
    "result": "object",
    "expression": "Collection DeviceLayerBank#getItemAt(int).vuMeter().values()"
  }, {
    "method": "deviceLayerBank.getItemAt.vuMeter.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#getItemAt(int).vuMeter().isSubscribed()"
  }, {
    "method": "deviceLayerBank.getItemAt.vuMeter.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).vuMeter().subscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.vuMeter.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).vuMeter().unsubscribe()"
  }, {
    "method": "deviceLayerBank.getItemAt.vuMeter.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#getItemAt(int).vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DeviceLayerBank#cursorIndex()"
  }, {
    "method": "deviceLayerBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#cursorIndex().set(int)"
  }, {
    "method": "deviceLayerBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#cursorIndex().inc(int)"
  }, {
    "method": "deviceLayerBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#cursorIndex().get()"
  }, {
    "method": "deviceLayerBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#cursorIndex().getAsInt()"
  }, {
    "method": "deviceLayerBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#cursorIndex().isSubscribed()"
  }, {
    "method": "deviceLayerBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#cursorIndex().subscribe()"
  }, {
    "method": "deviceLayerBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#cursorIndex().unsubscribe()"
  }, {
    "method": "deviceLayerBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollPageForwards()"
  }, {
    "method": "deviceLayerBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#exists()"
  }, {
    "method": "deviceLayerBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#exists().get()"
  }, {
    "method": "deviceLayerBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#exists().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#exists().isSubscribed()"
  }, {
    "method": "deviceLayerBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#exists().subscribe()"
  }, {
    "method": "deviceLayerBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#exists().unsubscribe()"
  }, {
    "method": "deviceLayerBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#isSubscribed()"
  }, {
    "method": "deviceLayerBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#subscribe()"
  }, {
    "method": "deviceLayerBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#unsubscribe()"
  }, {
    "method": "deviceLayerBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollBy(int)"
  }, {
    "method": "deviceLayerBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollByPages(int)"
  }, {
    "method": "deviceLayerBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollIntoView(int)"
  }, {
    "method": "deviceLayerBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#canScrollBackwards()"
  }, {
    "method": "deviceLayerBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollBackwards().get()"
  }, {
    "method": "deviceLayerBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "deviceLayerBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollBackwards().subscribe()"
  }, {
    "method": "deviceLayerBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "deviceLayerBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceLayerBank#canScrollForwards()"
  }, {
    "method": "deviceLayerBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollForwards().get()"
  }, {
    "method": "deviceLayerBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "deviceLayerBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "deviceLayerBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollForwards().subscribe()"
  }, {
    "method": "deviceLayerBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "deviceLayerBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DeviceLayerBank#scrollPosition()"
  }, {
    "method": "deviceLayerBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollPosition().set(int)"
  }, {
    "method": "deviceLayerBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollPosition().inc(int)"
  }, {
    "method": "deviceLayerBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#scrollPosition().get()"
  }, {
    "method": "deviceLayerBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceLayerBank#scrollPosition().getAsInt()"
  }, {
    "method": "deviceLayerBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceLayerBank#scrollPosition().isSubscribed()"
  }, {
    "method": "deviceLayerBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollPosition().subscribe()"
  }, {
    "method": "deviceLayerBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollPosition().unsubscribe()"
  }, {
    "method": "deviceLayerBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "deviceLayerBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollForwards()"
  }, {
    "method": "deviceLayerBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceLayerBank#scrollBackwards()"
  }, {
    "method": "drumPadBank.clearMutedPads",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#clearMutedPads()"
  }, {
    "method": "drumPadBank.hasMutedPads",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#hasMutedPads()"
  }, {
    "method": "drumPadBank.hasMutedPads.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#hasMutedPads().get()"
  }, {
    "method": "drumPadBank.hasMutedPads.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#hasMutedPads().getAsBoolean()"
  }, {
    "method": "drumPadBank.hasMutedPads.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#hasMutedPads().isSubscribed()"
  }, {
    "method": "drumPadBank.hasMutedPads.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#hasMutedPads().subscribe()"
  }, {
    "method": "drumPadBank.hasMutedPads.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#hasMutedPads().unsubscribe()"
  }, {
    "method": "drumPadBank.hasMutedPads.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#hasMutedPads().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.hasSoloedPads",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#hasSoloedPads()"
  }, {
    "method": "drumPadBank.hasSoloedPads.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#hasSoloedPads().get()"
  }, {
    "method": "drumPadBank.hasSoloedPads.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#hasSoloedPads().getAsBoolean()"
  }, {
    "method": "drumPadBank.hasSoloedPads.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#hasSoloedPads().isSubscribed()"
  }, {
    "method": "drumPadBank.hasSoloedPads.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#hasSoloedPads().subscribe()"
  }, {
    "method": "drumPadBank.hasSoloedPads.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#hasSoloedPads().unsubscribe()"
  }, {
    "method": "drumPadBank.hasSoloedPads.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#hasSoloedPads().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.clearSoloedPads",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#clearSoloedPads()"
  }, {
    "method": "drumPadBank.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#setIndication(boolean)"
  }, {
    "method": "drumPadBank.setChannelScrollStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#setChannelScrollStepSize(int)"
  }, {
    "method": "drumPadBank.canScrollChannelsUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#canScrollChannelsUp()"
  }, {
    "method": "drumPadBank.canScrollChannelsUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollChannelsUp().get()"
  }, {
    "method": "drumPadBank.canScrollChannelsUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollChannelsUp().getAsBoolean()"
  }, {
    "method": "drumPadBank.canScrollChannelsUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollChannelsUp().isSubscribed()"
  }, {
    "method": "drumPadBank.canScrollChannelsUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollChannelsUp().subscribe()"
  }, {
    "method": "drumPadBank.canScrollChannelsUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollChannelsUp().unsubscribe()"
  }, {
    "method": "drumPadBank.canScrollChannelsUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#canScrollChannelsUp().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.canScrollChannelsDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#canScrollChannelsDown()"
  }, {
    "method": "drumPadBank.canScrollChannelsDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollChannelsDown().get()"
  }, {
    "method": "drumPadBank.canScrollChannelsDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollChannelsDown().getAsBoolean()"
  }, {
    "method": "drumPadBank.canScrollChannelsDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollChannelsDown().isSubscribed()"
  }, {
    "method": "drumPadBank.canScrollChannelsDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollChannelsDown().subscribe()"
  }, {
    "method": "drumPadBank.canScrollChannelsDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollChannelsDown().unsubscribe()"
  }, {
    "method": "drumPadBank.canScrollChannelsDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#canScrollChannelsDown().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.channelCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue DrumPadBank#channelCount()"
  }, {
    "method": "drumPadBank.channelCount.get",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#channelCount().get()"
  }, {
    "method": "drumPadBank.channelCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#channelCount().getAsInt()"
  }, {
    "method": "drumPadBank.channelCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#channelCount().isSubscribed()"
  }, {
    "method": "drumPadBank.channelCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#channelCount().subscribe()"
  }, {
    "method": "drumPadBank.channelCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#channelCount().unsubscribe()"
  }, {
    "method": "drumPadBank.channelCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#channelCount().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#getSizeOfBank()"
  }, {
    "method": "drumPadBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#getCapacityOfBank()"
  }, {
    "method": "drumPadBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#scrollPageBackwards()"
  }, {
    "method": "drumPadBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#setSizeOfBank(int)"
  }, {
    "method": "drumPadBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue DrumPadBank#itemCount()"
  }, {
    "method": "drumPadBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#itemCount().get()"
  }, {
    "method": "drumPadBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#itemCount().getAsInt()"
  }, {
    "method": "drumPadBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#itemCount().isSubscribed()"
  }, {
    "method": "drumPadBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#itemCount().subscribe()"
  }, {
    "method": "drumPadBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#itemCount().unsubscribe()"
  }, {
    "method": "drumPadBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.insertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).insertionPoint().paste()"
  }, {
    "method": "drumPadBank.getItemAt.insertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).insertionPoint().insertVST2Device(int)"
  }, {
    "method": "drumPadBank.getItemAt.insertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).insertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "drumPadBank.getItemAt.insertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).insertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "drumPadBank.getItemAt.insertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).insertionPoint().browse()"
  }, {
    "method": "drumPadBank.getItemAt.duplicate",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).duplicate()"
  }, {
    "method": "drumPadBank.getItemAt.color",
    "params": ["number"],
    "result": "object",
    "expression": "SettableColorValue DrumPadBank#getItemAt(int).color()"
  }, {
    "method": "drumPadBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).color().set(float, float, float)"
  }, {
    "method": "drumPadBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).color().set(float, float, float, float)"
  }, {
    "method": "drumPadBank.getItemAt.color.red",
    "params": ["number"],
    "result": "number",
    "expression": "float DrumPadBank#getItemAt(int).color().red()"
  }, {
    "method": "drumPadBank.getItemAt.color.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float DrumPadBank#getItemAt(int).color().alpha()"
  }, {
    "method": "drumPadBank.getItemAt.color.green",
    "params": ["number"],
    "result": "number",
    "expression": "float DrumPadBank#getItemAt(int).color().green()"
  }, {
    "method": "drumPadBank.getItemAt.color.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float DrumPadBank#getItemAt(int).color().blue()"
  }, {
    "method": "drumPadBank.getItemAt.color.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).color().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.color.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).color().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.color.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).color().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.color.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).color().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.isActivated",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DrumPadBank#getItemAt(int).isActivated()"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isActivated().set(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isActivated().toggle()"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).isActivated().get()"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).isActivated().getAsBoolean()"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).isActivated().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isActivated().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isActivated().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.isActivated.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isActivated().invoke()"
  }, {
    "method": "drumPadBank.getItemAt.makeVisibleInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).makeVisibleInMixer()"
  }, {
    "method": "drumPadBank.getItemAt.pan",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter DrumPadBank#getItemAt(int).pan()"
  }, {
    "method": "drumPadBank.getItemAt.pan.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).pan().name()"
  }, {
    "method": "drumPadBank.getItemAt.pan.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().name().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().name().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.pan.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().name().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().name().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().name().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue DrumPadBank#getItemAt(int).pan().value()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().set(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().inc(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().setRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().setImmediately(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().incRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().value().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().value().getRaw()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().value().getAsDouble()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).pan().value().displayedValue()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().value().displayedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().displayedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().value().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().reset()"
  }, {
    "method": "drumPadBank.getItemAt.pan.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().touch(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().restoreAutomationControl()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue DrumPadBank#getItemAt(int).pan().modulatedValue()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().modulatedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().modulatedValue().getRaw()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().modulatedValue().getAsDouble()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).pan().modulatedValue().displayedValue()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().modulatedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().modulatedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().modulatedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().setIndication(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#getItemAt(int).pan().exists()"
  }, {
    "method": "drumPadBank.getItemAt.pan.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().exists().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().exists().getAsBoolean()"
  }, {
    "method": "drumPadBank.getItemAt.pan.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().exists().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().exists().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().exists().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.pan.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().set(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().inc(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().setRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().setImmediately(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().incRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.pan.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().getRaw()"
  }, {
    "method": "drumPadBank.getItemAt.pan.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).pan().getAsDouble()"
  }, {
    "method": "drumPadBank.getItemAt.pan.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).pan().displayedValue()"
  }, {
    "method": "drumPadBank.getItemAt.pan.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().displayedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.pan.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).pan().displayedValue().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.pan.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).pan().displayedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.pan.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().displayedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().displayedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.pan.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.mute",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DrumPadBank#getItemAt(int).mute()"
  }, {
    "method": "drumPadBank.getItemAt.mute.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).mute().set(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.mute.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).mute().toggle()"
  }, {
    "method": "drumPadBank.getItemAt.mute.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).mute().get()"
  }, {
    "method": "drumPadBank.getItemAt.mute.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).mute().getAsBoolean()"
  }, {
    "method": "drumPadBank.getItemAt.mute.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).mute().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.mute.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).mute().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.mute.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).mute().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.mute.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).mute().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.mute.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).mute().invoke()"
  }, {
    "method": "drumPadBank.getItemAt.solo",
    "params": ["number"],
    "result": "object",
    "expression": "SoloValue DrumPadBank#getItemAt(int).solo()"
  }, {
    "method": "drumPadBank.getItemAt.solo.toggle",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).solo().toggle(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.solo.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).solo().set(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.solo.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).solo().toggle()"
  }, {
    "method": "drumPadBank.getItemAt.solo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).solo().get()"
  }, {
    "method": "drumPadBank.getItemAt.solo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).solo().getAsBoolean()"
  }, {
    "method": "drumPadBank.getItemAt.solo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).solo().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.solo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).solo().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.solo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).solo().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.solo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).solo().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.solo.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).solo().invoke()"
  }, {
    "method": "drumPadBank.getItemAt.volume",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter DrumPadBank#getItemAt(int).volume()"
  }, {
    "method": "drumPadBank.getItemAt.volume.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).volume().name()"
  }, {
    "method": "drumPadBank.getItemAt.volume.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().name().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().name().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.volume.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().name().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().name().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().name().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue DrumPadBank#getItemAt(int).volume().value()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().set(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().inc(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().setRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().setImmediately(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().incRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().value().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().value().getRaw()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().value().getAsDouble()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).volume().value().displayedValue()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().value().displayedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().displayedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().value().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().reset()"
  }, {
    "method": "drumPadBank.getItemAt.volume.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().touch(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().restoreAutomationControl()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue DrumPadBank#getItemAt(int).volume().modulatedValue()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().modulatedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().modulatedValue().getRaw()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().modulatedValue().getAsDouble()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).volume().modulatedValue().displayedValue()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().modulatedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().modulatedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().modulatedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().setIndication(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#getItemAt(int).volume().exists()"
  }, {
    "method": "drumPadBank.getItemAt.volume.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().exists().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().exists().getAsBoolean()"
  }, {
    "method": "drumPadBank.getItemAt.volume.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().exists().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().exists().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().exists().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.volume.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().set(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "drumPadBank.getItemAt.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().inc(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().setRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().setImmediately(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().incRaw(double)"
  }, {
    "method": "drumPadBank.getItemAt.volume.get",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().getRaw()"
  }, {
    "method": "drumPadBank.getItemAt.volume.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double DrumPadBank#getItemAt(int).volume().getAsDouble()"
  }, {
    "method": "drumPadBank.getItemAt.volume.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DrumPadBank#getItemAt(int).volume().displayedValue()"
  }, {
    "method": "drumPadBank.getItemAt.volume.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().displayedValue().get()"
  }, {
    "method": "drumPadBank.getItemAt.volume.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).volume().displayedValue().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.volume.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).volume().displayedValue().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.volume.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().displayedValue().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().displayedValue().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.volume.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.makeVisibleInArranger",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).makeVisibleInArranger()"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.isNotePlaying",
    "params": ["number", "number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).playingNotes().isNotePlaying(int)"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.get",
    "params": ["number"],
    "result": "any[]",
    "expression": "Object[] DrumPadBank#getItemAt(int).playingNotes().get()"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object DrumPadBank#getItemAt(int).playingNotes().get(int)"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).playingNotes().isEmpty()"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).playingNotes().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).playingNotes().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).playingNotes().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.playingNotes.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.isMutedBySolo",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#getItemAt(int).isMutedBySolo()"
  }, {
    "method": "drumPadBank.getItemAt.isMutedBySolo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).isMutedBySolo().get()"
  }, {
    "method": "drumPadBank.getItemAt.isMutedBySolo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).isMutedBySolo().getAsBoolean()"
  }, {
    "method": "drumPadBank.getItemAt.isMutedBySolo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).isMutedBySolo().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.isMutedBySolo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isMutedBySolo().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.isMutedBySolo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isMutedBySolo().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.isMutedBySolo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.selectInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).selectInMixer()"
  }, {
    "method": "drumPadBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).deleteObject()"
  }, {
    "method": "drumPadBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue DrumPadBank#getItemAt(int).name()"
  }, {
    "method": "drumPadBank.getItemAt.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).name().set(java.lang.String)"
  }, {
    "method": "drumPadBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).name().get()"
  }, {
    "method": "drumPadBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DrumPadBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "drumPadBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "drumPadBank.getItemAt.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "drumPadBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "drumPadBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "drumPadBank.getItemAt.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "drumPadBank.getItemAt.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "drumPadBank.getItemAt.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "drumPadBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "drumPadBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "drumPadBank.getItemAt.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "drumPadBank.getItemAt.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "drumPadBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#getItemAt(int).exists()"
  }, {
    "method": "drumPadBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).exists().get()"
  }, {
    "method": "drumPadBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "drumPadBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.getItemAt.vuMeter",
    "params": ["number"],
    "result": "object",
    "expression": "VuMeterValue DrumPadBank#getItemAt(int).vuMeter()"
  }, {
    "method": "drumPadBank.getItemAt.vuMeter.get",
    "params": ["number", "number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel DrumPadBank#getItemAt(int).vuMeter().get(int, boolean)"
  }, {
    "method": "drumPadBank.getItemAt.vuMeter.values",
    "params": ["number"],
    "result": "object",
    "expression": "Collection DrumPadBank#getItemAt(int).vuMeter().values()"
  }, {
    "method": "drumPadBank.getItemAt.vuMeter.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DrumPadBank#getItemAt(int).vuMeter().isSubscribed()"
  }, {
    "method": "drumPadBank.getItemAt.vuMeter.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).vuMeter().subscribe()"
  }, {
    "method": "drumPadBank.getItemAt.vuMeter.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).vuMeter().unsubscribe()"
  }, {
    "method": "drumPadBank.getItemAt.vuMeter.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DrumPadBank#getItemAt(int).vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DrumPadBank#cursorIndex()"
  }, {
    "method": "drumPadBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#cursorIndex().set(int)"
  }, {
    "method": "drumPadBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#cursorIndex().inc(int)"
  }, {
    "method": "drumPadBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#cursorIndex().get()"
  }, {
    "method": "drumPadBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#cursorIndex().getAsInt()"
  }, {
    "method": "drumPadBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#cursorIndex().isSubscribed()"
  }, {
    "method": "drumPadBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#cursorIndex().subscribe()"
  }, {
    "method": "drumPadBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#cursorIndex().unsubscribe()"
  }, {
    "method": "drumPadBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#scrollPageForwards()"
  }, {
    "method": "drumPadBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#exists()"
  }, {
    "method": "drumPadBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#exists().get()"
  }, {
    "method": "drumPadBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#exists().getAsBoolean()"
  }, {
    "method": "drumPadBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#exists().isSubscribed()"
  }, {
    "method": "drumPadBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#exists().subscribe()"
  }, {
    "method": "drumPadBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#exists().unsubscribe()"
  }, {
    "method": "drumPadBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#isSubscribed()"
  }, {
    "method": "drumPadBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#subscribe()"
  }, {
    "method": "drumPadBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#unsubscribe()"
  }, {
    "method": "drumPadBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#scrollBy(int)"
  }, {
    "method": "drumPadBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#scrollByPages(int)"
  }, {
    "method": "drumPadBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#scrollIntoView(int)"
  }, {
    "method": "drumPadBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#canScrollBackwards()"
  }, {
    "method": "drumPadBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollBackwards().get()"
  }, {
    "method": "drumPadBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "drumPadBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "drumPadBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollBackwards().subscribe()"
  }, {
    "method": "drumPadBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "drumPadBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DrumPadBank#canScrollForwards()"
  }, {
    "method": "drumPadBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollForwards().get()"
  }, {
    "method": "drumPadBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "drumPadBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "drumPadBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollForwards().subscribe()"
  }, {
    "method": "drumPadBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "drumPadBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DrumPadBank#scrollPosition()"
  }, {
    "method": "drumPadBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#scrollPosition().set(int)"
  }, {
    "method": "drumPadBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DrumPadBank#scrollPosition().inc(int)"
  }, {
    "method": "drumPadBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#scrollPosition().get()"
  }, {
    "method": "drumPadBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DrumPadBank#scrollPosition().getAsInt()"
  }, {
    "method": "drumPadBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DrumPadBank#scrollPosition().isSubscribed()"
  }, {
    "method": "drumPadBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#scrollPosition().subscribe()"
  }, {
    "method": "drumPadBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#scrollPosition().unsubscribe()"
  }, {
    "method": "drumPadBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DrumPadBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "drumPadBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#scrollForwards()"
  }, {
    "method": "drumPadBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void DrumPadBank#scrollBackwards()"
  }, {
    "method": "siblingsDeviceBank.scrollPageDown",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageDown()"
  }, {
    "method": "siblingsDeviceBank.scrollPageUp",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageUp()"
  }, {
    "method": "siblingsDeviceBank.scrollDown",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollDown()"
  }, {
    "method": "siblingsDeviceBank.scrollUp",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollUp()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue DeviceBank#getDeviceChain().name()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().set(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name.get",
    "params": [],
    "result": "string",
    "expression": "String DeviceBank#getDeviceChain().name().get()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getDeviceChain().name().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().name().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().selectInEditor()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getDeviceChain().exists()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().exists().get()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().exists().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().exists().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().exists().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().exists().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getDeviceChain.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.browseToInsertDevice",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#browseToInsertDevice(int)"
  }, {
    "method": "siblingsDeviceBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#getSizeOfBank()"
  }, {
    "method": "siblingsDeviceBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#getCapacityOfBank()"
  }, {
    "method": "siblingsDeviceBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageBackwards()"
  }, {
    "method": "siblingsDeviceBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#setSizeOfBank(int)"
  }, {
    "method": "siblingsDeviceBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue DeviceBank#itemCount()"
  }, {
    "method": "siblingsDeviceBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#itemCount().get()"
  }, {
    "method": "siblingsDeviceBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#itemCount().getAsInt()"
  }, {
    "method": "siblingsDeviceBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#itemCount().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#itemCount().subscribe()"
  }, {
    "method": "siblingsDeviceBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#itemCount().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).name()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).name().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.position",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue DeviceBank#getItemAt(int).position()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.position.get",
    "params": ["number"],
    "result": "number",
    "expression": "int DeviceBank#getItemAt(int).position().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.position.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int DeviceBank#getItemAt(int).position().getAsInt()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.position.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).position().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.position.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).position().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.position.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).position().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.position.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).position().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isEnabled()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().set(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().toggle()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isEnabled().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isEnabled().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isEnabled().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isEnabled.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().invoke()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasLayers",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).hasLayers()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasLayers.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasLayers().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasLayers.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasLayers().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasLayers.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasLayers().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasLayers.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasLayers().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasLayers.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasLayers().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasLayers.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasLayers().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue DeviceBank#getItemAt(int).getCursorSlot().name()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().set(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).getCursorSlot().name().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).getCursorSlot().name().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().name().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().selectInEditor()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).getCursorSlot().exists()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().exists().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().exists().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().exists().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().exists().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().exists().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.getCursorSlot.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.sampleName",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).sampleName()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.sampleName.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).sampleName().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.sampleName.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).sampleName().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.sampleName.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).sampleName().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.sampleName.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).sampleName().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.sampleName.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).sampleName().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.sampleName.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).sampleName().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.setParameterPage",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).setParameterPage(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasSlots",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).hasSlots()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasSlots.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasSlots().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasSlots.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasSlots().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasSlots.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasSlots().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasSlots.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasSlots().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasSlots.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasSlots().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasSlots.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasSlots().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames",
    "params": ["number"],
    "result": "object",
    "expression": "StringArrayValue DeviceBank#getItemAt(int).slotNames()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames.get",
    "params": ["number"],
    "result": "string[]",
    "expression": "String[] DeviceBank#getItemAt(int).slotNames().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object DeviceBank#getItemAt(int).slotNames().get(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).slotNames().isEmpty()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).slotNames().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).slotNames().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).slotNames().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.slotNames.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).slotNames().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.nextParameterPage",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).nextParameterPage()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isNested",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).isNested()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isNested.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isNested().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isNested.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isNested().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isNested.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isNested().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isNested.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isNested().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isNested.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isNested().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isNested.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isNested().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isExpanded()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().set(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().toggle()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isExpanded().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isExpanded().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isExpanded().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isExpanded.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().invoke()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isPlugin",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).isPlugin()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isPlugin.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isPlugin().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isPlugin.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isPlugin().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isPlugin.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isPlugin().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isPlugin.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isPlugin().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isPlugin.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isPlugin().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isPlugin.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isPlugin().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.incDirectParameterValueNormalized",
    "params": ["number", "string", "number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).incDirectParameterValueNormalized(java.lang.String, java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.setDirectParameterValueNormalized",
    "params": ["number", "string", "number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).setDirectParameterValueNormalized(java.lang.String, java.lang.Number, java.lang.Number)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.previousParameterPage",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).previousParameterPage()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isRemoteControlsSectionVisible()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().set(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().toggle()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().invoke()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.afterDeviceInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.afterDeviceInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.afterDeviceInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.afterDeviceInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.afterDeviceInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.beforeDeviceInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.beforeDeviceInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.beforeDeviceInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.beforeDeviceInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.beforeDeviceInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCategory",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).presetCategory()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCategory.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCategory().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCategory.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCategory().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCategory.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).presetCategory().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCategory.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCategory().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCategory.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCategory().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCategory.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCategory().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCreator",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).presetCreator()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCreator.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCreator().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCreator.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCreator().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCreator.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).presetCreator().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCreator.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCreator().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCreator.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCreator().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetCreator.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCreator().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetName",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).presetName()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetName.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetName().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetName.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetName().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetName.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).presetName().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetName.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetName().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetName.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetName().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.presetName.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetName().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue DeviceBank#getItemAt(int).deviceChain().name()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().set(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).deviceChain().name().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).deviceChain().name().getLimited(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().name().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().selectInEditor()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).deviceChain().exists()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().exists().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().exists().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().exists().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().exists().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().exists().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deviceChain.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isWindowOpen()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().set(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().toggle()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isWindowOpen().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isWindowOpen().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isWindowOpen().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isWindowOpen.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().invoke()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasDrumPads",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).hasDrumPads()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasDrumPads.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasDrumPads().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasDrumPads.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasDrumPads().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasDrumPads.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasDrumPads().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasDrumPads.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasDrumPads().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasDrumPads.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasDrumPads().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.hasDrumPads.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasDrumPads().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.replaceDeviceInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().paste()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.replaceDeviceInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.replaceDeviceInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.replaceDeviceInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.replaceDeviceInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().browse()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deleteObject()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).exists()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).exists().get()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).subscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DeviceBank#cursorIndex()"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().set(int)"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().inc(int)"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#cursorIndex().get()"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#cursorIndex().getAsInt()"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#cursorIndex().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().subscribe()"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageForwards()"
  }, {
    "method": "siblingsDeviceBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#exists()"
  }, {
    "method": "siblingsDeviceBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#exists().get()"
  }, {
    "method": "siblingsDeviceBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#exists().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#exists().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#exists().subscribe()"
  }, {
    "method": "siblingsDeviceBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#exists().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#subscribe()"
  }, {
    "method": "siblingsDeviceBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollBy(int)"
  }, {
    "method": "siblingsDeviceBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollByPages(int)"
  }, {
    "method": "siblingsDeviceBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollIntoView(int)"
  }, {
    "method": "siblingsDeviceBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#canScrollBackwards()"
  }, {
    "method": "siblingsDeviceBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollBackwards().get()"
  }, {
    "method": "siblingsDeviceBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollBackwards().subscribe()"
  }, {
    "method": "siblingsDeviceBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#canScrollForwards()"
  }, {
    "method": "siblingsDeviceBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollForwards().get()"
  }, {
    "method": "siblingsDeviceBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "siblingsDeviceBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollForwards().subscribe()"
  }, {
    "method": "siblingsDeviceBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DeviceBank#scrollPosition()"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().set(int)"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().inc(int)"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#scrollPosition().get()"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#scrollPosition().getAsInt()"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#scrollPosition().isSubscribed()"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().subscribe()"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().unsubscribe()"
  }, {
    "method": "siblingsDeviceBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "siblingsDeviceBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollForwards()"
  }, {
    "method": "siblingsDeviceBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollBackwards()"
  }, {
    "method": "chainDeviceBank.scrollPageDown",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageDown()"
  }, {
    "method": "chainDeviceBank.scrollPageUp",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageUp()"
  }, {
    "method": "chainDeviceBank.scrollDown",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollDown()"
  }, {
    "method": "chainDeviceBank.scrollUp",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollUp()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue DeviceBank#getDeviceChain().name()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().set(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name.get",
    "params": [],
    "result": "string",
    "expression": "String DeviceBank#getDeviceChain().name().get()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getDeviceChain().name().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().name().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().subscribe()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().name().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().selectInEditor()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getDeviceChain().exists()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().exists().get()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().exists().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().exists().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().exists().subscribe()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().exists().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getDeviceChain.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#getDeviceChain().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().subscribe()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getDeviceChain.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#getDeviceChain().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.browseToInsertDevice",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#browseToInsertDevice(int)"
  }, {
    "method": "chainDeviceBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#getSizeOfBank()"
  }, {
    "method": "chainDeviceBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#getCapacityOfBank()"
  }, {
    "method": "chainDeviceBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageBackwards()"
  }, {
    "method": "chainDeviceBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#setSizeOfBank(int)"
  }, {
    "method": "chainDeviceBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue DeviceBank#itemCount()"
  }, {
    "method": "chainDeviceBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#itemCount().get()"
  }, {
    "method": "chainDeviceBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#itemCount().getAsInt()"
  }, {
    "method": "chainDeviceBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#itemCount().isSubscribed()"
  }, {
    "method": "chainDeviceBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#itemCount().subscribe()"
  }, {
    "method": "chainDeviceBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#itemCount().unsubscribe()"
  }, {
    "method": "chainDeviceBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).name()"
  }, {
    "method": "chainDeviceBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).name().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.position",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue DeviceBank#getItemAt(int).position()"
  }, {
    "method": "chainDeviceBank.getItemAt.position.get",
    "params": ["number"],
    "result": "number",
    "expression": "int DeviceBank#getItemAt(int).position().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.position.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int DeviceBank#getItemAt(int).position().getAsInt()"
  }, {
    "method": "chainDeviceBank.getItemAt.position.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).position().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.position.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).position().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.position.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).position().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.position.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).position().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isEnabled()"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().set(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().toggle()"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isEnabled().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isEnabled().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isEnabled().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isEnabled.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isEnabled().invoke()"
  }, {
    "method": "chainDeviceBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasLayers",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).hasLayers()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasLayers.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasLayers().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasLayers.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasLayers().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasLayers.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasLayers().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasLayers.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasLayers().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasLayers.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasLayers().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasLayers.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasLayers().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue DeviceBank#getItemAt(int).getCursorSlot().name()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().set(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).getCursorSlot().name().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).getCursorSlot().name().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().name().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().name().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().selectInEditor()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).getCursorSlot().exists()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().exists().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().exists().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().exists().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().exists().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().exists().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).getCursorSlot().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.getCursorSlot.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).getCursorSlot().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.sampleName",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).sampleName()"
  }, {
    "method": "chainDeviceBank.getItemAt.sampleName.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).sampleName().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.sampleName.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).sampleName().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.sampleName.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).sampleName().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.sampleName.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).sampleName().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.sampleName.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).sampleName().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.sampleName.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).sampleName().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.setParameterPage",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).setParameterPage(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.hasSlots",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).hasSlots()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasSlots.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasSlots().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasSlots.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasSlots().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasSlots.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasSlots().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasSlots.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasSlots().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasSlots.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasSlots().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasSlots.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasSlots().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames",
    "params": ["number"],
    "result": "object",
    "expression": "StringArrayValue DeviceBank#getItemAt(int).slotNames()"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames.get",
    "params": ["number"],
    "result": "string[]",
    "expression": "String[] DeviceBank#getItemAt(int).slotNames().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object DeviceBank#getItemAt(int).slotNames().get(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).slotNames().isEmpty()"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).slotNames().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).slotNames().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).slotNames().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.slotNames.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).slotNames().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.nextParameterPage",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).nextParameterPage()"
  }, {
    "method": "chainDeviceBank.getItemAt.isNested",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).isNested()"
  }, {
    "method": "chainDeviceBank.getItemAt.isNested.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isNested().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.isNested.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isNested().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.isNested.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isNested().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.isNested.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isNested().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isNested.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isNested().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isNested.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isNested().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isExpanded()"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().set(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().toggle()"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isExpanded().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isExpanded().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isExpanded().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isExpanded.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isExpanded().invoke()"
  }, {
    "method": "chainDeviceBank.getItemAt.isPlugin",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).isPlugin()"
  }, {
    "method": "chainDeviceBank.getItemAt.isPlugin.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isPlugin().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.isPlugin.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isPlugin().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.isPlugin.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isPlugin().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.isPlugin.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isPlugin().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isPlugin.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isPlugin().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isPlugin.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isPlugin().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.incDirectParameterValueNormalized",
    "params": ["number", "string", "number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).incDirectParameterValueNormalized(java.lang.String, java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainDeviceBank.getItemAt.setDirectParameterValueNormalized",
    "params": ["number", "string", "number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).setDirectParameterValueNormalized(java.lang.String, java.lang.Number, java.lang.Number)"
  }, {
    "method": "chainDeviceBank.getItemAt.previousParameterPage",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).previousParameterPage()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isRemoteControlsSectionVisible()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().set(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().toggle()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isRemoteControlsSectionVisible().invoke()"
  }, {
    "method": "chainDeviceBank.getItemAt.afterDeviceInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getItemAt.afterDeviceInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.afterDeviceInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.afterDeviceInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.afterDeviceInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).afterDeviceInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getItemAt.beforeDeviceInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getItemAt.beforeDeviceInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.beforeDeviceInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.beforeDeviceInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.beforeDeviceInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).beforeDeviceInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCategory",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).presetCategory()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCategory.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCategory().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCategory.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCategory().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCategory.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).presetCategory().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCategory.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCategory().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCategory.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCategory().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCategory.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCategory().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCreator",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).presetCreator()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCreator.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCreator().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCreator.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetCreator().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCreator.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).presetCreator().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCreator.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCreator().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCreator.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCreator().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetCreator.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetCreator().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.presetName",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue DeviceBank#getItemAt(int).presetName()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetName.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetName().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetName.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).presetName().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.presetName.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).presetName().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetName.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetName().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetName.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetName().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.presetName.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).presetName().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue DeviceBank#getItemAt(int).deviceChain().name()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().set(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).deviceChain().name().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String DeviceBank#getItemAt(int).deviceChain().name().getLimited(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().name().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().name().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().selectInEditor()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).deviceChain().exists()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().exists().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().exists().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().exists().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().exists().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().exists().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).deviceChain().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.deviceChain.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deviceChain().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue DeviceBank#getItemAt(int).isWindowOpen()"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().set(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().toggle()"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isWindowOpen().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isWindowOpen().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isWindowOpen().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isWindowOpen.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).isWindowOpen().invoke()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasDrumPads",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).hasDrumPads()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasDrumPads.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasDrumPads().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasDrumPads.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasDrumPads().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasDrumPads.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).hasDrumPads().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasDrumPads.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasDrumPads().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasDrumPads.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasDrumPads().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.hasDrumPads.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).hasDrumPads().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.replaceDeviceInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().paste()"
  }, {
    "method": "chainDeviceBank.getItemAt.replaceDeviceInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "chainDeviceBank.getItemAt.replaceDeviceInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.replaceDeviceInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "chainDeviceBank.getItemAt.replaceDeviceInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).replaceDeviceInsertionPoint().browse()"
  }, {
    "method": "chainDeviceBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).deleteObject()"
  }, {
    "method": "chainDeviceBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue DeviceBank#getItemAt(int).exists()"
  }, {
    "method": "chainDeviceBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).exists().get()"
  }, {
    "method": "chainDeviceBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean DeviceBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "chainDeviceBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).subscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "chainDeviceBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void DeviceBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DeviceBank#cursorIndex()"
  }, {
    "method": "chainDeviceBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().set(int)"
  }, {
    "method": "chainDeviceBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().inc(int)"
  }, {
    "method": "chainDeviceBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#cursorIndex().get()"
  }, {
    "method": "chainDeviceBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#cursorIndex().getAsInt()"
  }, {
    "method": "chainDeviceBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#cursorIndex().isSubscribed()"
  }, {
    "method": "chainDeviceBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().subscribe()"
  }, {
    "method": "chainDeviceBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().unsubscribe()"
  }, {
    "method": "chainDeviceBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPageForwards()"
  }, {
    "method": "chainDeviceBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#exists()"
  }, {
    "method": "chainDeviceBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#exists().get()"
  }, {
    "method": "chainDeviceBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#exists().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#exists().isSubscribed()"
  }, {
    "method": "chainDeviceBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#exists().subscribe()"
  }, {
    "method": "chainDeviceBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#exists().unsubscribe()"
  }, {
    "method": "chainDeviceBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#isSubscribed()"
  }, {
    "method": "chainDeviceBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#subscribe()"
  }, {
    "method": "chainDeviceBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#unsubscribe()"
  }, {
    "method": "chainDeviceBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollBy(int)"
  }, {
    "method": "chainDeviceBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollByPages(int)"
  }, {
    "method": "chainDeviceBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollIntoView(int)"
  }, {
    "method": "chainDeviceBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#canScrollBackwards()"
  }, {
    "method": "chainDeviceBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollBackwards().get()"
  }, {
    "method": "chainDeviceBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "chainDeviceBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollBackwards().subscribe()"
  }, {
    "method": "chainDeviceBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "chainDeviceBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue DeviceBank#canScrollForwards()"
  }, {
    "method": "chainDeviceBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollForwards().get()"
  }, {
    "method": "chainDeviceBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "chainDeviceBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "chainDeviceBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollForwards().subscribe()"
  }, {
    "method": "chainDeviceBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "chainDeviceBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue DeviceBank#scrollPosition()"
  }, {
    "method": "chainDeviceBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().set(int)"
  }, {
    "method": "chainDeviceBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().inc(int)"
  }, {
    "method": "chainDeviceBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#scrollPosition().get()"
  }, {
    "method": "chainDeviceBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int DeviceBank#scrollPosition().getAsInt()"
  }, {
    "method": "chainDeviceBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean DeviceBank#scrollPosition().isSubscribed()"
  }, {
    "method": "chainDeviceBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().subscribe()"
  }, {
    "method": "chainDeviceBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().unsubscribe()"
  }, {
    "method": "chainDeviceBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void DeviceBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "chainDeviceBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollForwards()"
  }, {
    "method": "chainDeviceBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void DeviceBank#scrollBackwards()"
  }, {
    "method": "sceneBank.launchScene",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#launchScene(int)"
  }, {
    "method": "sceneBank.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#setIndication(boolean)"
  }, {
    "method": "sceneBank.stop",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#stop()"
  }, {
    "method": "sceneBank.launch",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#launch(int)"
  }, {
    "method": "sceneBank.returnToArrangement",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#returnToArrangement()"
  }, {
    "method": "sceneBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#getSizeOfBank()"
  }, {
    "method": "sceneBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#getCapacityOfBank()"
  }, {
    "method": "sceneBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#scrollPageBackwards()"
  }, {
    "method": "sceneBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#setSizeOfBank(int)"
  }, {
    "method": "sceneBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue SceneBank#itemCount()"
  }, {
    "method": "sceneBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#itemCount().get()"
  }, {
    "method": "sceneBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#itemCount().getAsInt()"
  }, {
    "method": "sceneBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#itemCount().isSubscribed()"
  }, {
    "method": "sceneBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#itemCount().subscribe()"
  }, {
    "method": "sceneBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#itemCount().unsubscribe()"
  }, {
    "method": "sceneBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue SceneBank#getItemAt(int).name()"
  }, {
    "method": "sceneBank.getItemAt.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).name().set(java.lang.String)"
  }, {
    "method": "sceneBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String SceneBank#getItemAt(int).name().get()"
  }, {
    "method": "sceneBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String SceneBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "sceneBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "sceneBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "sceneBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "sceneBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "sceneBank.getItemAt.showInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).showInEditor()"
  }, {
    "method": "sceneBank.getItemAt.clipCount",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue SceneBank#getItemAt(int).clipCount()"
  }, {
    "method": "sceneBank.getItemAt.clipCount.get",
    "params": ["number"],
    "result": "number",
    "expression": "int SceneBank#getItemAt(int).clipCount().get()"
  }, {
    "method": "sceneBank.getItemAt.clipCount.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int SceneBank#getItemAt(int).clipCount().getAsInt()"
  }, {
    "method": "sceneBank.getItemAt.clipCount.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).clipCount().isSubscribed()"
  }, {
    "method": "sceneBank.getItemAt.clipCount.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).clipCount().subscribe()"
  }, {
    "method": "sceneBank.getItemAt.clipCount.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).clipCount().unsubscribe()"
  }, {
    "method": "sceneBank.getItemAt.clipCount.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).clipCount().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.getItemAt.color",
    "params": ["number"],
    "result": "object",
    "expression": "SettableColorValue SceneBank#getItemAt(int).color()"
  }, {
    "method": "sceneBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).color().set(float, float, float)"
  }, {
    "method": "sceneBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).color().set(float, float, float, float)"
  }, {
    "method": "sceneBank.getItemAt.color.red",
    "params": ["number"],
    "result": "number",
    "expression": "float SceneBank#getItemAt(int).color().red()"
  }, {
    "method": "sceneBank.getItemAt.color.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float SceneBank#getItemAt(int).color().alpha()"
  }, {
    "method": "sceneBank.getItemAt.color.green",
    "params": ["number"],
    "result": "number",
    "expression": "float SceneBank#getItemAt(int).color().green()"
  }, {
    "method": "sceneBank.getItemAt.color.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float SceneBank#getItemAt(int).color().blue()"
  }, {
    "method": "sceneBank.getItemAt.color.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).color().isSubscribed()"
  }, {
    "method": "sceneBank.getItemAt.color.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).color().subscribe()"
  }, {
    "method": "sceneBank.getItemAt.color.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).color().unsubscribe()"
  }, {
    "method": "sceneBank.getItemAt.color.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).color().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.getItemAt.launch",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).launch()"
  }, {
    "method": "sceneBank.getItemAt.previousSceneInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).previousSceneInsertionPoint().paste()"
  }, {
    "method": "sceneBank.getItemAt.previousSceneInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).previousSceneInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "sceneBank.getItemAt.previousSceneInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).previousSceneInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "sceneBank.getItemAt.previousSceneInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).previousSceneInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "sceneBank.getItemAt.previousSceneInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).previousSceneInsertionPoint().browse()"
  }, {
    "method": "sceneBank.getItemAt.replaceInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).replaceInsertionPoint().paste()"
  }, {
    "method": "sceneBank.getItemAt.replaceInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).replaceInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "sceneBank.getItemAt.replaceInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).replaceInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "sceneBank.getItemAt.replaceInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).replaceInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "sceneBank.getItemAt.replaceInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).replaceInsertionPoint().browse()"
  }, {
    "method": "sceneBank.getItemAt.nextSceneInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).nextSceneInsertionPoint().paste()"
  }, {
    "method": "sceneBank.getItemAt.nextSceneInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).nextSceneInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "sceneBank.getItemAt.nextSceneInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).nextSceneInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "sceneBank.getItemAt.nextSceneInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).nextSceneInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "sceneBank.getItemAt.nextSceneInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).nextSceneInsertionPoint().browse()"
  }, {
    "method": "sceneBank.getItemAt.sceneIndex",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue SceneBank#getItemAt(int).sceneIndex()"
  }, {
    "method": "sceneBank.getItemAt.sceneIndex.get",
    "params": ["number"],
    "result": "number",
    "expression": "int SceneBank#getItemAt(int).sceneIndex().get()"
  }, {
    "method": "sceneBank.getItemAt.sceneIndex.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int SceneBank#getItemAt(int).sceneIndex().getAsInt()"
  }, {
    "method": "sceneBank.getItemAt.sceneIndex.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).sceneIndex().isSubscribed()"
  }, {
    "method": "sceneBank.getItemAt.sceneIndex.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).sceneIndex().subscribe()"
  }, {
    "method": "sceneBank.getItemAt.sceneIndex.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).sceneIndex().unsubscribe()"
  }, {
    "method": "sceneBank.getItemAt.sceneIndex.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).sceneIndex().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.getItemAt.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).setIndication(boolean)"
  }, {
    "method": "sceneBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).deleteObject()"
  }, {
    "method": "sceneBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue SceneBank#getItemAt(int).exists()"
  }, {
    "method": "sceneBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).exists().get()"
  }, {
    "method": "sceneBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "sceneBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "sceneBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "sceneBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "sceneBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean SceneBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "sceneBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).subscribe()"
  }, {
    "method": "sceneBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "sceneBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void SceneBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue SceneBank#cursorIndex()"
  }, {
    "method": "sceneBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#cursorIndex().set(int)"
  }, {
    "method": "sceneBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#cursorIndex().inc(int)"
  }, {
    "method": "sceneBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#cursorIndex().get()"
  }, {
    "method": "sceneBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#cursorIndex().getAsInt()"
  }, {
    "method": "sceneBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#cursorIndex().isSubscribed()"
  }, {
    "method": "sceneBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#cursorIndex().subscribe()"
  }, {
    "method": "sceneBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#cursorIndex().unsubscribe()"
  }, {
    "method": "sceneBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#scrollPageForwards()"
  }, {
    "method": "sceneBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue SceneBank#exists()"
  }, {
    "method": "sceneBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#exists().get()"
  }, {
    "method": "sceneBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#exists().getAsBoolean()"
  }, {
    "method": "sceneBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#exists().isSubscribed()"
  }, {
    "method": "sceneBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#exists().subscribe()"
  }, {
    "method": "sceneBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#exists().unsubscribe()"
  }, {
    "method": "sceneBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#isSubscribed()"
  }, {
    "method": "sceneBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#subscribe()"
  }, {
    "method": "sceneBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#unsubscribe()"
  }, {
    "method": "sceneBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#scrollBy(int)"
  }, {
    "method": "sceneBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#scrollByPages(int)"
  }, {
    "method": "sceneBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#scrollIntoView(int)"
  }, {
    "method": "sceneBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue SceneBank#canScrollBackwards()"
  }, {
    "method": "sceneBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#canScrollBackwards().get()"
  }, {
    "method": "sceneBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "sceneBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "sceneBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#canScrollBackwards().subscribe()"
  }, {
    "method": "sceneBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "sceneBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue SceneBank#canScrollForwards()"
  }, {
    "method": "sceneBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#canScrollForwards().get()"
  }, {
    "method": "sceneBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "sceneBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "sceneBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#canScrollForwards().subscribe()"
  }, {
    "method": "sceneBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "sceneBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue SceneBank#scrollPosition()"
  }, {
    "method": "sceneBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#scrollPosition().set(int)"
  }, {
    "method": "sceneBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void SceneBank#scrollPosition().inc(int)"
  }, {
    "method": "sceneBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#scrollPosition().get()"
  }, {
    "method": "sceneBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int SceneBank#scrollPosition().getAsInt()"
  }, {
    "method": "sceneBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean SceneBank#scrollPosition().isSubscribed()"
  }, {
    "method": "sceneBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#scrollPosition().subscribe()"
  }, {
    "method": "sceneBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#scrollPosition().unsubscribe()"
  }, {
    "method": "sceneBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void SceneBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "sceneBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#scrollForwards()"
  }, {
    "method": "sceneBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void SceneBank#scrollBackwards()"
  }, {
    "method": "mainTrackBank.scrollToScene",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollToScene(int)"
  }, {
    "method": "mainTrackBank.scrollScenesUp",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesUp()"
  }, {
    "method": "mainTrackBank.scrollScenesDown",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesDown()"
  }, {
    "method": "mainTrackBank.setChannelScrollStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setChannelScrollStepSize(int)"
  }, {
    "method": "mainTrackBank.canScrollChannelsUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsUp()"
  }, {
    "method": "mainTrackBank.canScrollChannelsUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().get()"
  }, {
    "method": "mainTrackBank.canScrollChannelsUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().getAsBoolean()"
  }, {
    "method": "mainTrackBank.canScrollChannelsUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().isSubscribed()"
  }, {
    "method": "mainTrackBank.canScrollChannelsUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().subscribe()"
  }, {
    "method": "mainTrackBank.canScrollChannelsUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().unsubscribe()"
  }, {
    "method": "mainTrackBank.canScrollChannelsUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.canScrollChannelsDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsDown()"
  }, {
    "method": "mainTrackBank.canScrollChannelsDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().get()"
  }, {
    "method": "mainTrackBank.canScrollChannelsDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().getAsBoolean()"
  }, {
    "method": "mainTrackBank.canScrollChannelsDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().isSubscribed()"
  }, {
    "method": "mainTrackBank.canScrollChannelsDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().subscribe()"
  }, {
    "method": "mainTrackBank.canScrollChannelsDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().unsubscribe()"
  }, {
    "method": "mainTrackBank.canScrollChannelsDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.channelCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#channelCount()"
  }, {
    "method": "mainTrackBank.channelCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().get()"
  }, {
    "method": "mainTrackBank.channelCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().getAsInt()"
  }, {
    "method": "mainTrackBank.channelCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#channelCount().isSubscribed()"
  }, {
    "method": "mainTrackBank.channelCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().subscribe()"
  }, {
    "method": "mainTrackBank.channelCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().unsubscribe()"
  }, {
    "method": "mainTrackBank.channelCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#channelCount().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getSizeOfBank()"
  }, {
    "method": "mainTrackBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getCapacityOfBank()"
  }, {
    "method": "mainTrackBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageBackwards()"
  }, {
    "method": "mainTrackBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setSizeOfBank(int)"
  }, {
    "method": "mainTrackBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#itemCount()"
  }, {
    "method": "mainTrackBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().get()"
  }, {
    "method": "mainTrackBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().getAsInt()"
  }, {
    "method": "mainTrackBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#itemCount().isSubscribed()"
  }, {
    "method": "mainTrackBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().subscribe()"
  }, {
    "method": "mainTrackBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().unsubscribe()"
  }, {
    "method": "mainTrackBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.position",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue TrackBank#getItemAt(int).position()"
  }, {
    "method": "mainTrackBank.getItemAt.position.get",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().get()"
  }, {
    "method": "mainTrackBank.getItemAt.position.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().getAsInt()"
  }, {
    "method": "mainTrackBank.getItemAt.position.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).position().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.position.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.position.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.position.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.stop",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stop()"
  }, {
    "method": "mainTrackBank.getItemAt.setName",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setName(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldAudioData()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().get()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldAudioData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).autoMonitor()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().get()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.autoMonitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldNoteData()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().get()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.canHoldNoteData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int)"
  }, {
    "method": "mainTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).getIsPreFader()"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().get()"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.getIsPreFader.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "mainTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int)"
  }, {
    "method": "mainTrackBank.getItemAt.trackType",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).trackType()"
  }, {
    "method": "mainTrackBank.getItemAt.trackType.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().get()"
  }, {
    "method": "mainTrackBank.getItemAt.trackType.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.trackType.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).trackType().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.trackType.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.trackType.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.trackType.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.stopNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stopNote(int, int)"
  }, {
    "method": "mainTrackBank.getItemAt.isQueuedForStop",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isQueuedForStop()"
  }, {
    "method": "mainTrackBank.getItemAt.isQueuedForStop.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().get()"
  }, {
    "method": "mainTrackBank.getItemAt.isQueuedForStop.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.isQueuedForStop.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.isQueuedForStop.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isQueuedForStop.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isQueuedForStop.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.startNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startNote(int, int)"
  }, {
    "method": "mainTrackBank.getItemAt.selectSlot",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectSlot(int)"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().exists()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().get()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.sourceSelector.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.isStopped",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isStopped()"
  }, {
    "method": "mainTrackBank.getItemAt.isStopped.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().get()"
  }, {
    "method": "mainTrackBank.getItemAt.isStopped.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.isStopped.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.isStopped.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isStopped.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isStopped.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.arm",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).arm()"
  }, {
    "method": "mainTrackBank.getItemAt.arm.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.arm.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.arm.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().get()"
  }, {
    "method": "mainTrackBank.getItemAt.arm.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.arm.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.arm.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.arm.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.arm.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.arm.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).monitor()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().get()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.monitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.returnToArrangement",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).returnToArrangement()"
  }, {
    "method": "mainTrackBank.getItemAt.afterTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().paste()"
  }, {
    "method": "mainTrackBank.getItemAt.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "mainTrackBank.getItemAt.afterTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.afterTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.afterTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().browse()"
  }, {
    "method": "mainTrackBank.getItemAt.beforeTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().paste()"
  }, {
    "method": "mainTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "mainTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.beforeTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.beforeTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().browse()"
  }, {
    "method": "mainTrackBank.getItemAt.playNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playNote(int, int)"
  }, {
    "method": "mainTrackBank.getItemAt.sendMidi",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sendMidi(int, int, int)"
  }, {
    "method": "mainTrackBank.getItemAt.crossFadeMode",
    "params": ["number"],
    "result": "object",
    "expression": "SettableEnumValue TrackBank#getItemAt(int).crossFadeMode()"
  }, {
    "method": "mainTrackBank.getItemAt.crossFadeMode.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().set(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.crossFadeMode.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).crossFadeMode().get()"
  }, {
    "method": "mainTrackBank.getItemAt.crossFadeMode.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).crossFadeMode().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.crossFadeMode.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.crossFadeMode.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.crossFadeMode.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.isGroup",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isGroup()"
  }, {
    "method": "mainTrackBank.getItemAt.isGroup.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().get()"
  }, {
    "method": "mainTrackBank.getItemAt.isGroup.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.isGroup.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.isGroup.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isGroup.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isGroup.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.duplicate",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).duplicate()"
  }, {
    "method": "mainTrackBank.getItemAt.color",
    "params": ["number"],
    "result": "object",
    "expression": "SettableColorValue TrackBank#getItemAt(int).color()"
  }, {
    "method": "mainTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float)"
  }, {
    "method": "mainTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float, float)"
  }, {
    "method": "mainTrackBank.getItemAt.color.red",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().red()"
  }, {
    "method": "mainTrackBank.getItemAt.color.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().alpha()"
  }, {
    "method": "mainTrackBank.getItemAt.color.green",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().green()"
  }, {
    "method": "mainTrackBank.getItemAt.color.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().blue()"
  }, {
    "method": "mainTrackBank.getItemAt.color.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).color().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.color.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.color.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.color.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).isActivated()"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().get()"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.isActivated.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.makeVisibleInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInMixer()"
  }, {
    "method": "mainTrackBank.getItemAt.pan",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).pan()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().name()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().name().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).pan().value()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setImmediately(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().incRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getRaw()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getAsDouble()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().value().displayedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().reset()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().touch(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().restoreAutomationControl()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).pan().modulatedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getRaw()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getAsDouble()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().modulatedValue().displayedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIndication(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).pan().exists()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setImmediately(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().incRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getRaw()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getAsDouble()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().displayedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.pan.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().displayedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.pan.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.mute",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).mute()"
  }, {
    "method": "mainTrackBank.getItemAt.mute.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.mute.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.mute.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().get()"
  }, {
    "method": "mainTrackBank.getItemAt.mute.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.mute.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.mute.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.mute.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.mute.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.mute.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.solo",
    "params": ["number"],
    "result": "object",
    "expression": "SoloValue TrackBank#getItemAt(int).solo()"
  }, {
    "method": "mainTrackBank.getItemAt.solo.toggle",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.solo.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().set(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.solo.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle()"
  }, {
    "method": "mainTrackBank.getItemAt.solo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().get()"
  }, {
    "method": "mainTrackBank.getItemAt.solo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.solo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.solo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.solo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.solo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.solo.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().invoke()"
  }, {
    "method": "mainTrackBank.getItemAt.volume",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).volume()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().name()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().name().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).volume().value()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setImmediately(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().incRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getRaw()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getAsDouble()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().value().displayedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().reset()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().touch(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().restoreAutomationControl()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).volume().modulatedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getRaw()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getAsDouble()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().modulatedValue().displayedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIndication(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).volume().exists()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setImmediately(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().incRaw(double)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getRaw()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getAsDouble()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().displayedValue()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().get()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.volume.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().displayedValue().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.volume.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.makeVisibleInArranger",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInArranger()"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.isNotePlaying",
    "params": ["number", "number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isNotePlaying(int)"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.get",
    "params": ["number"],
    "result": "any[]",
    "expression": "Object[] TrackBank#getItemAt(int).playingNotes().get()"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object TrackBank#getItemAt(int).playingNotes().get(int)"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isEmpty()"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.playingNotes.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.isMutedBySolo",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isMutedBySolo()"
  }, {
    "method": "mainTrackBank.getItemAt.isMutedBySolo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().get()"
  }, {
    "method": "mainTrackBank.getItemAt.isMutedBySolo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.isMutedBySolo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.isMutedBySolo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isMutedBySolo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.isMutedBySolo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.selectInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInMixer()"
  }, {
    "method": "mainTrackBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).deleteObject()"
  }, {
    "method": "mainTrackBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue TrackBank#getItemAt(int).name()"
  }, {
    "method": "mainTrackBank.getItemAt.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().set(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().get()"
  }, {
    "method": "mainTrackBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "mainTrackBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "mainTrackBank.getItemAt.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "mainTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "mainTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "mainTrackBank.getItemAt.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "mainTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "mainTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "mainTrackBank.getItemAt.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "mainTrackBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).exists()"
  }, {
    "method": "mainTrackBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().get()"
  }, {
    "method": "mainTrackBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "mainTrackBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.vuMeter",
    "params": ["number"],
    "result": "object",
    "expression": "VuMeterValue TrackBank#getItemAt(int).vuMeter()"
  }, {
    "method": "mainTrackBank.getItemAt.vuMeter.get",
    "params": ["number", "number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel TrackBank#getItemAt(int).vuMeter().get(int, boolean)"
  }, {
    "method": "mainTrackBank.getItemAt.vuMeter.values",
    "params": ["number"],
    "result": "object",
    "expression": "Collection TrackBank#getItemAt(int).vuMeter().values()"
  }, {
    "method": "mainTrackBank.getItemAt.vuMeter.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).vuMeter().isSubscribed()"
  }, {
    "method": "mainTrackBank.getItemAt.vuMeter.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().subscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.vuMeter.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().unsubscribe()"
  }, {
    "method": "mainTrackBank.getItemAt.vuMeter.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#cursorIndex()"
  }, {
    "method": "mainTrackBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().set(int)"
  }, {
    "method": "mainTrackBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().inc(int)"
  }, {
    "method": "mainTrackBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().get()"
  }, {
    "method": "mainTrackBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().getAsInt()"
  }, {
    "method": "mainTrackBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#cursorIndex().isSubscribed()"
  }, {
    "method": "mainTrackBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().subscribe()"
  }, {
    "method": "mainTrackBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().unsubscribe()"
  }, {
    "method": "mainTrackBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageForwards()"
  }, {
    "method": "mainTrackBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#exists()"
  }, {
    "method": "mainTrackBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().get()"
  }, {
    "method": "mainTrackBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().getAsBoolean()"
  }, {
    "method": "mainTrackBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().isSubscribed()"
  }, {
    "method": "mainTrackBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().subscribe()"
  }, {
    "method": "mainTrackBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().unsubscribe()"
  }, {
    "method": "mainTrackBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#isSubscribed()"
  }, {
    "method": "mainTrackBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#subscribe()"
  }, {
    "method": "mainTrackBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#unsubscribe()"
  }, {
    "method": "mainTrackBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollBy(int)"
  }, {
    "method": "mainTrackBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollByPages(int)"
  }, {
    "method": "mainTrackBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollIntoView(int)"
  }, {
    "method": "mainTrackBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollBackwards()"
  }, {
    "method": "mainTrackBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().get()"
  }, {
    "method": "mainTrackBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "mainTrackBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "mainTrackBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().subscribe()"
  }, {
    "method": "mainTrackBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "mainTrackBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollForwards()"
  }, {
    "method": "mainTrackBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().get()"
  }, {
    "method": "mainTrackBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "mainTrackBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "mainTrackBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().subscribe()"
  }, {
    "method": "mainTrackBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "mainTrackBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#scrollPosition()"
  }, {
    "method": "mainTrackBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().set(int)"
  }, {
    "method": "mainTrackBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().inc(int)"
  }, {
    "method": "mainTrackBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().get()"
  }, {
    "method": "mainTrackBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().getAsInt()"
  }, {
    "method": "mainTrackBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#scrollPosition().isSubscribed()"
  }, {
    "method": "mainTrackBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().subscribe()"
  }, {
    "method": "mainTrackBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().unsubscribe()"
  }, {
    "method": "mainTrackBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "mainTrackBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollForwards()"
  }, {
    "method": "mainTrackBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollBackwards()"
  }, {
    "method": "effectTrackBank.scrollToScene",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollToScene(int)"
  }, {
    "method": "effectTrackBank.scrollScenesUp",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesUp()"
  }, {
    "method": "effectTrackBank.scrollScenesDown",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollScenesDown()"
  }, {
    "method": "effectTrackBank.setChannelScrollStepSize",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setChannelScrollStepSize(int)"
  }, {
    "method": "effectTrackBank.canScrollChannelsUp",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsUp()"
  }, {
    "method": "effectTrackBank.canScrollChannelsUp.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().get()"
  }, {
    "method": "effectTrackBank.canScrollChannelsUp.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().getAsBoolean()"
  }, {
    "method": "effectTrackBank.canScrollChannelsUp.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsUp().isSubscribed()"
  }, {
    "method": "effectTrackBank.canScrollChannelsUp.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().subscribe()"
  }, {
    "method": "effectTrackBank.canScrollChannelsUp.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().unsubscribe()"
  }, {
    "method": "effectTrackBank.canScrollChannelsUp.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsUp().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.canScrollChannelsDown",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollChannelsDown()"
  }, {
    "method": "effectTrackBank.canScrollChannelsDown.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().get()"
  }, {
    "method": "effectTrackBank.canScrollChannelsDown.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().getAsBoolean()"
  }, {
    "method": "effectTrackBank.canScrollChannelsDown.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollChannelsDown().isSubscribed()"
  }, {
    "method": "effectTrackBank.canScrollChannelsDown.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().subscribe()"
  }, {
    "method": "effectTrackBank.canScrollChannelsDown.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().unsubscribe()"
  }, {
    "method": "effectTrackBank.canScrollChannelsDown.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollChannelsDown().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.channelCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#channelCount()"
  }, {
    "method": "effectTrackBank.channelCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().get()"
  }, {
    "method": "effectTrackBank.channelCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#channelCount().getAsInt()"
  }, {
    "method": "effectTrackBank.channelCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#channelCount().isSubscribed()"
  }, {
    "method": "effectTrackBank.channelCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().subscribe()"
  }, {
    "method": "effectTrackBank.channelCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#channelCount().unsubscribe()"
  }, {
    "method": "effectTrackBank.channelCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#channelCount().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getSizeOfBank()"
  }, {
    "method": "effectTrackBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#getCapacityOfBank()"
  }, {
    "method": "effectTrackBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageBackwards()"
  }, {
    "method": "effectTrackBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#setSizeOfBank(int)"
  }, {
    "method": "effectTrackBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue TrackBank#itemCount()"
  }, {
    "method": "effectTrackBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().get()"
  }, {
    "method": "effectTrackBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#itemCount().getAsInt()"
  }, {
    "method": "effectTrackBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#itemCount().isSubscribed()"
  }, {
    "method": "effectTrackBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().subscribe()"
  }, {
    "method": "effectTrackBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#itemCount().unsubscribe()"
  }, {
    "method": "effectTrackBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.position",
    "params": ["number"],
    "result": "object",
    "expression": "IntegerValue TrackBank#getItemAt(int).position()"
  }, {
    "method": "effectTrackBank.getItemAt.position.get",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().get()"
  }, {
    "method": "effectTrackBank.getItemAt.position.getAsInt",
    "params": ["number"],
    "result": "number",
    "expression": "int TrackBank#getItemAt(int).position().getAsInt()"
  }, {
    "method": "effectTrackBank.getItemAt.position.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).position().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.position.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.position.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.position.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).position().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.stop",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stop()"
  }, {
    "method": "effectTrackBank.getItemAt.setName",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setName(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldAudioData()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().get()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldAudioData().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldAudioData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldAudioData().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).autoMonitor()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().get()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).autoMonitor().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.autoMonitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).autoMonitor().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).canHoldNoteData()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().get()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).canHoldNoteData().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.canHoldNoteData.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).canHoldNoteData().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int)"
  }, {
    "method": "effectTrackBank.getItemAt.createNewClip",
    "params": ["number", "number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).getIsPreFader()"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().get()"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).getIsPreFader().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.getIsPreFader.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).getIsPreFader().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "effectTrackBank.getItemAt.recordNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).recordNewClip(int)"
  }, {
    "method": "effectTrackBank.getItemAt.trackType",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).trackType()"
  }, {
    "method": "effectTrackBank.getItemAt.trackType.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().get()"
  }, {
    "method": "effectTrackBank.getItemAt.trackType.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).trackType().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.trackType.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).trackType().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.trackType.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.trackType.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.trackType.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).trackType().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.stopNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).stopNote(int, int)"
  }, {
    "method": "effectTrackBank.getItemAt.isQueuedForStop",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isQueuedForStop()"
  }, {
    "method": "effectTrackBank.getItemAt.isQueuedForStop.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().get()"
  }, {
    "method": "effectTrackBank.getItemAt.isQueuedForStop.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.isQueuedForStop.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isQueuedForStop().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.isQueuedForStop.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isQueuedForStop.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isQueuedForStop.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.startNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startNote(int, int)"
  }, {
    "method": "effectTrackBank.getItemAt.selectSlot",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectSlot(int)"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).sourceSelector().exists()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().get()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().exists().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).sourceSelector().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.sourceSelector.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.isStopped",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isStopped()"
  }, {
    "method": "effectTrackBank.getItemAt.isStopped.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().get()"
  }, {
    "method": "effectTrackBank.getItemAt.isStopped.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.isStopped.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isStopped().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.isStopped.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isStopped.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isStopped.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.arm",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).arm()"
  }, {
    "method": "effectTrackBank.getItemAt.arm.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.arm.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.arm.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().get()"
  }, {
    "method": "effectTrackBank.getItemAt.arm.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.arm.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).arm().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.arm.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.arm.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.arm.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.arm.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).arm().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).monitor()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().get()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).monitor().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.monitor.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).monitor().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.returnToArrangement",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).returnToArrangement()"
  }, {
    "method": "effectTrackBank.getItemAt.afterTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().paste()"
  }, {
    "method": "effectTrackBank.getItemAt.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "effectTrackBank.getItemAt.afterTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.afterTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.afterTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).afterTrackInsertionPoint().browse()"
  }, {
    "method": "effectTrackBank.getItemAt.beforeTrackInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().paste()"
  }, {
    "method": "effectTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "effectTrackBank.getItemAt.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.beforeTrackInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.beforeTrackInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).beforeTrackInsertionPoint().browse()"
  }, {
    "method": "effectTrackBank.getItemAt.playNote",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playNote(int, int)"
  }, {
    "method": "effectTrackBank.getItemAt.sendMidi",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).sendMidi(int, int, int)"
  }, {
    "method": "effectTrackBank.getItemAt.crossFadeMode",
    "params": ["number"],
    "result": "object",
    "expression": "SettableEnumValue TrackBank#getItemAt(int).crossFadeMode()"
  }, {
    "method": "effectTrackBank.getItemAt.crossFadeMode.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().set(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.crossFadeMode.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).crossFadeMode().get()"
  }, {
    "method": "effectTrackBank.getItemAt.crossFadeMode.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).crossFadeMode().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.crossFadeMode.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.crossFadeMode.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.crossFadeMode.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.isGroup",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isGroup()"
  }, {
    "method": "effectTrackBank.getItemAt.isGroup.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().get()"
  }, {
    "method": "effectTrackBank.getItemAt.isGroup.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.isGroup.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isGroup().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.isGroup.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isGroup.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isGroup.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.duplicate",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).duplicate()"
  }, {
    "method": "effectTrackBank.getItemAt.color",
    "params": ["number"],
    "result": "object",
    "expression": "SettableColorValue TrackBank#getItemAt(int).color()"
  }, {
    "method": "effectTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float)"
  }, {
    "method": "effectTrackBank.getItemAt.color.set",
    "params": ["number", "number", "number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().set(float, float, float, float)"
  }, {
    "method": "effectTrackBank.getItemAt.color.red",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().red()"
  }, {
    "method": "effectTrackBank.getItemAt.color.alpha",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().alpha()"
  }, {
    "method": "effectTrackBank.getItemAt.color.green",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().green()"
  }, {
    "method": "effectTrackBank.getItemAt.color.blue",
    "params": ["number"],
    "result": "number",
    "expression": "float TrackBank#getItemAt(int).color().blue()"
  }, {
    "method": "effectTrackBank.getItemAt.color.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).color().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.color.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.color.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.color.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).color().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).isActivated()"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().get()"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isActivated().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.isActivated.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isActivated().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.makeVisibleInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInMixer()"
  }, {
    "method": "effectTrackBank.getItemAt.pan",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).pan()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().name()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().name().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().name().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).pan().value()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().set(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().inc(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setImmediately(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().incRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getRaw()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().value().getAsDouble()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().value().displayedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().value().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().reset()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().touch(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().restoreAutomationControl()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).pan().modulatedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getRaw()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().modulatedValue().getAsDouble()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().modulatedValue().displayedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().modulatedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIndication(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).pan().exists()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().exists().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().set(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().inc(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().setImmediately(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().incRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getRaw()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).pan().getAsDouble()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).pan().displayedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).pan().displayedValue().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.pan.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).pan().displayedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.pan.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.mute",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue TrackBank#getItemAt(int).mute()"
  }, {
    "method": "effectTrackBank.getItemAt.mute.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.mute.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.mute.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().get()"
  }, {
    "method": "effectTrackBank.getItemAt.mute.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.mute.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).mute().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.mute.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.mute.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.mute.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.mute.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).mute().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.solo",
    "params": ["number"],
    "result": "object",
    "expression": "SoloValue TrackBank#getItemAt(int).solo()"
  }, {
    "method": "effectTrackBank.getItemAt.solo.toggle",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.solo.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().set(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.solo.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().toggle()"
  }, {
    "method": "effectTrackBank.getItemAt.solo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().get()"
  }, {
    "method": "effectTrackBank.getItemAt.solo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.solo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).solo().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.solo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.solo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.solo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.solo.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).solo().invoke()"
  }, {
    "method": "effectTrackBank.getItemAt.volume",
    "params": ["number"],
    "result": "object",
    "expression": "Parameter TrackBank#getItemAt(int).volume()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().name()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().name().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().name().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value",
    "params": ["number"],
    "result": "object",
    "expression": "SettableRangedValue TrackBank#getItemAt(int).volume().value()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().set(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().inc(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setImmediately(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().incRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getRaw()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().value().getAsDouble()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().value().displayedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().value().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.value.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.reset",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().reset()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.touch",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().touch(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.restoreAutomationControl",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().restoreAutomationControl()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue",
    "params": ["number"],
    "result": "object",
    "expression": "RangedValue TrackBank#getItemAt(int).volume().modulatedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getRaw()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().modulatedValue().getAsDouble()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().modulatedValue().displayedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().modulatedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.modulatedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.setIndication",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIndication(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).volume().exists()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().exists().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().set(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.inc",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().inc(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.setRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.setImmediately",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().setImmediately(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.incRaw",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().incRaw(double)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.get",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.getRaw",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getRaw()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.getAsDouble",
    "params": ["number"],
    "result": "number",
    "expression": "double TrackBank#getItemAt(int).volume().getAsDouble()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.displayedValue",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue TrackBank#getItemAt(int).volume().displayedValue()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.displayedValue.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().get()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.displayedValue.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).volume().displayedValue().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.volume.displayedValue.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).volume().displayedValue().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.displayedValue.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.displayedValue.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.volume.displayedValue.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.makeVisibleInArranger",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).makeVisibleInArranger()"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.isNotePlaying",
    "params": ["number", "number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isNotePlaying(int)"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.get",
    "params": ["number"],
    "result": "any[]",
    "expression": "Object[] TrackBank#getItemAt(int).playingNotes().get()"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.get",
    "params": ["number", "number"],
    "result": "any",
    "expression": "Object TrackBank#getItemAt(int).playingNotes().get(int)"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.isEmpty",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isEmpty()"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).playingNotes().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.playingNotes.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.isMutedBySolo",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).isMutedBySolo()"
  }, {
    "method": "effectTrackBank.getItemAt.isMutedBySolo.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().get()"
  }, {
    "method": "effectTrackBank.getItemAt.isMutedBySolo.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.isMutedBySolo.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isMutedBySolo().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.isMutedBySolo.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isMutedBySolo.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.isMutedBySolo.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.selectInMixer",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInMixer()"
  }, {
    "method": "effectTrackBank.getItemAt.deleteObject",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).deleteObject()"
  }, {
    "method": "effectTrackBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "SettableStringValue TrackBank#getItemAt(int).name()"
  }, {
    "method": "effectTrackBank.getItemAt.name.set",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().set(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().get()"
  }, {
    "method": "effectTrackBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String TrackBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "effectTrackBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.selectInEditor",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).selectInEditor()"
  }, {
    "method": "effectTrackBank.getItemAt.startOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "effectTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "effectTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.startOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "effectTrackBank.getItemAt.endOfDeviceChainInsertionPoint.paste",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "effectTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "effectTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["number", "string"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "effectTrackBank.getItemAt.endOfDeviceChainInsertionPoint.browse",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "effectTrackBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue TrackBank#getItemAt(int).exists()"
  }, {
    "method": "effectTrackBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().get()"
  }, {
    "method": "effectTrackBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "effectTrackBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.vuMeter",
    "params": ["number"],
    "result": "object",
    "expression": "VuMeterValue TrackBank#getItemAt(int).vuMeter()"
  }, {
    "method": "effectTrackBank.getItemAt.vuMeter.get",
    "params": ["number", "number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel TrackBank#getItemAt(int).vuMeter().get(int, boolean)"
  }, {
    "method": "effectTrackBank.getItemAt.vuMeter.values",
    "params": ["number"],
    "result": "object",
    "expression": "Collection TrackBank#getItemAt(int).vuMeter().values()"
  }, {
    "method": "effectTrackBank.getItemAt.vuMeter.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean TrackBank#getItemAt(int).vuMeter().isSubscribed()"
  }, {
    "method": "effectTrackBank.getItemAt.vuMeter.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().subscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.vuMeter.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().unsubscribe()"
  }, {
    "method": "effectTrackBank.getItemAt.vuMeter.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void TrackBank#getItemAt(int).vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#cursorIndex()"
  }, {
    "method": "effectTrackBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().set(int)"
  }, {
    "method": "effectTrackBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().inc(int)"
  }, {
    "method": "effectTrackBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().get()"
  }, {
    "method": "effectTrackBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#cursorIndex().getAsInt()"
  }, {
    "method": "effectTrackBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#cursorIndex().isSubscribed()"
  }, {
    "method": "effectTrackBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().subscribe()"
  }, {
    "method": "effectTrackBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().unsubscribe()"
  }, {
    "method": "effectTrackBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPageForwards()"
  }, {
    "method": "effectTrackBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#exists()"
  }, {
    "method": "effectTrackBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().get()"
  }, {
    "method": "effectTrackBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().getAsBoolean()"
  }, {
    "method": "effectTrackBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#exists().isSubscribed()"
  }, {
    "method": "effectTrackBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().subscribe()"
  }, {
    "method": "effectTrackBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#exists().unsubscribe()"
  }, {
    "method": "effectTrackBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#isSubscribed()"
  }, {
    "method": "effectTrackBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#subscribe()"
  }, {
    "method": "effectTrackBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#unsubscribe()"
  }, {
    "method": "effectTrackBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollBy(int)"
  }, {
    "method": "effectTrackBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollByPages(int)"
  }, {
    "method": "effectTrackBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollIntoView(int)"
  }, {
    "method": "effectTrackBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollBackwards()"
  }, {
    "method": "effectTrackBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().get()"
  }, {
    "method": "effectTrackBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "effectTrackBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "effectTrackBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().subscribe()"
  }, {
    "method": "effectTrackBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "effectTrackBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue TrackBank#canScrollForwards()"
  }, {
    "method": "effectTrackBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().get()"
  }, {
    "method": "effectTrackBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "effectTrackBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "effectTrackBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().subscribe()"
  }, {
    "method": "effectTrackBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "effectTrackBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue TrackBank#scrollPosition()"
  }, {
    "method": "effectTrackBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().set(int)"
  }, {
    "method": "effectTrackBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().inc(int)"
  }, {
    "method": "effectTrackBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().get()"
  }, {
    "method": "effectTrackBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int TrackBank#scrollPosition().getAsInt()"
  }, {
    "method": "effectTrackBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean TrackBank#scrollPosition().isSubscribed()"
  }, {
    "method": "effectTrackBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().subscribe()"
  }, {
    "method": "effectTrackBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().unsubscribe()"
  }, {
    "method": "effectTrackBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void TrackBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "effectTrackBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollForwards()"
  }, {
    "method": "effectTrackBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void TrackBank#scrollBackwards()"
  }, {
    "method": "masterTrack.position",
    "params": [],
    "result": "object",
    "expression": "IntegerValue MasterTrack#position()"
  }, {
    "method": "masterTrack.position.get",
    "params": [],
    "result": "number",
    "expression": "int MasterTrack#position().get()"
  }, {
    "method": "masterTrack.position.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int MasterTrack#position().getAsInt()"
  }, {
    "method": "masterTrack.position.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#position().isSubscribed()"
  }, {
    "method": "masterTrack.position.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#position().subscribe()"
  }, {
    "method": "masterTrack.position.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#position().unsubscribe()"
  }, {
    "method": "masterTrack.position.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#position().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.stop",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#stop()"
  }, {
    "method": "masterTrack.setName",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#setName(java.lang.String)"
  }, {
    "method": "masterTrack.canHoldAudioData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#canHoldAudioData()"
  }, {
    "method": "masterTrack.canHoldAudioData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#canHoldAudioData().set(boolean)"
  }, {
    "method": "masterTrack.canHoldAudioData.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldAudioData().toggle()"
  }, {
    "method": "masterTrack.canHoldAudioData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#canHoldAudioData().get()"
  }, {
    "method": "masterTrack.canHoldAudioData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#canHoldAudioData().getAsBoolean()"
  }, {
    "method": "masterTrack.canHoldAudioData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#canHoldAudioData().isSubscribed()"
  }, {
    "method": "masterTrack.canHoldAudioData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldAudioData().subscribe()"
  }, {
    "method": "masterTrack.canHoldAudioData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldAudioData().unsubscribe()"
  }, {
    "method": "masterTrack.canHoldAudioData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#canHoldAudioData().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.canHoldAudioData.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldAudioData().invoke()"
  }, {
    "method": "masterTrack.autoMonitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#autoMonitor()"
  }, {
    "method": "masterTrack.autoMonitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#autoMonitor().set(boolean)"
  }, {
    "method": "masterTrack.autoMonitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#autoMonitor().toggle()"
  }, {
    "method": "masterTrack.autoMonitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#autoMonitor().get()"
  }, {
    "method": "masterTrack.autoMonitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#autoMonitor().getAsBoolean()"
  }, {
    "method": "masterTrack.autoMonitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#autoMonitor().isSubscribed()"
  }, {
    "method": "masterTrack.autoMonitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#autoMonitor().subscribe()"
  }, {
    "method": "masterTrack.autoMonitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#autoMonitor().unsubscribe()"
  }, {
    "method": "masterTrack.autoMonitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#autoMonitor().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.autoMonitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#autoMonitor().invoke()"
  }, {
    "method": "masterTrack.canHoldNoteData",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#canHoldNoteData()"
  }, {
    "method": "masterTrack.canHoldNoteData.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#canHoldNoteData().set(boolean)"
  }, {
    "method": "masterTrack.canHoldNoteData.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldNoteData().toggle()"
  }, {
    "method": "masterTrack.canHoldNoteData.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#canHoldNoteData().get()"
  }, {
    "method": "masterTrack.canHoldNoteData.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#canHoldNoteData().getAsBoolean()"
  }, {
    "method": "masterTrack.canHoldNoteData.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#canHoldNoteData().isSubscribed()"
  }, {
    "method": "masterTrack.canHoldNoteData.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldNoteData().subscribe()"
  }, {
    "method": "masterTrack.canHoldNoteData.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldNoteData().unsubscribe()"
  }, {
    "method": "masterTrack.canHoldNoteData.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#canHoldNoteData().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.canHoldNoteData.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#canHoldNoteData().invoke()"
  }, {
    "method": "masterTrack.createNewClip",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#createNewClip(int, int)"
  }, {
    "method": "masterTrack.createNewClip",
    "params": ["number", "number", "object"],
    "result": "void",
    "expression": "void MasterTrack#createNewClip(int, int, java.util.function.Consumer)"
  }, {
    "method": "masterTrack.getIsPreFader",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#getIsPreFader()"
  }, {
    "method": "masterTrack.getIsPreFader.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#getIsPreFader().set(boolean)"
  }, {
    "method": "masterTrack.getIsPreFader.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#getIsPreFader().toggle()"
  }, {
    "method": "masterTrack.getIsPreFader.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#getIsPreFader().get()"
  }, {
    "method": "masterTrack.getIsPreFader.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#getIsPreFader().getAsBoolean()"
  }, {
    "method": "masterTrack.getIsPreFader.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#getIsPreFader().isSubscribed()"
  }, {
    "method": "masterTrack.getIsPreFader.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#getIsPreFader().subscribe()"
  }, {
    "method": "masterTrack.getIsPreFader.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#getIsPreFader().unsubscribe()"
  }, {
    "method": "masterTrack.getIsPreFader.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#getIsPreFader().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.getIsPreFader.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#getIsPreFader().invoke()"
  }, {
    "method": "masterTrack.recordNewClip",
    "params": ["number", "object"],
    "result": "void",
    "expression": "void MasterTrack#recordNewClip(int, java.util.function.Consumer)"
  }, {
    "method": "masterTrack.recordNewClip",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#recordNewClip(int)"
  }, {
    "method": "masterTrack.trackType",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#trackType()"
  }, {
    "method": "masterTrack.trackType.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#trackType().get()"
  }, {
    "method": "masterTrack.trackType.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#trackType().getLimited(int)"
  }, {
    "method": "masterTrack.trackType.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#trackType().isSubscribed()"
  }, {
    "method": "masterTrack.trackType.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#trackType().subscribe()"
  }, {
    "method": "masterTrack.trackType.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#trackType().unsubscribe()"
  }, {
    "method": "masterTrack.trackType.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#trackType().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.stopNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#stopNote(int, int)"
  }, {
    "method": "masterTrack.isQueuedForStop",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#isQueuedForStop()"
  }, {
    "method": "masterTrack.isQueuedForStop.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isQueuedForStop().get()"
  }, {
    "method": "masterTrack.isQueuedForStop.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isQueuedForStop().getAsBoolean()"
  }, {
    "method": "masterTrack.isQueuedForStop.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isQueuedForStop().isSubscribed()"
  }, {
    "method": "masterTrack.isQueuedForStop.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isQueuedForStop().subscribe()"
  }, {
    "method": "masterTrack.isQueuedForStop.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isQueuedForStop().unsubscribe()"
  }, {
    "method": "masterTrack.isQueuedForStop.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#isQueuedForStop().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.startNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#startNote(int, int)"
  }, {
    "method": "masterTrack.selectSlot",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#selectSlot(int)"
  }, {
    "method": "masterTrack.sourceSelector.hasNoteInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#sourceSelector().hasNoteInputSelected()"
  }, {
    "method": "masterTrack.sourceSelector.hasNoteInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().hasNoteInputSelected().get()"
  }, {
    "method": "masterTrack.sourceSelector.hasNoteInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().hasNoteInputSelected().getAsBoolean()"
  }, {
    "method": "masterTrack.sourceSelector.hasNoteInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().hasNoteInputSelected().isSubscribed()"
  }, {
    "method": "masterTrack.sourceSelector.hasNoteInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().hasNoteInputSelected().subscribe()"
  }, {
    "method": "masterTrack.sourceSelector.hasNoteInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().hasNoteInputSelected().unsubscribe()"
  }, {
    "method": "masterTrack.sourceSelector.hasNoteInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().hasNoteInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.sourceSelector.hasAudioInputSelected",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#sourceSelector().hasAudioInputSelected()"
  }, {
    "method": "masterTrack.sourceSelector.hasAudioInputSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().hasAudioInputSelected().get()"
  }, {
    "method": "masterTrack.sourceSelector.hasAudioInputSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().hasAudioInputSelected().getAsBoolean()"
  }, {
    "method": "masterTrack.sourceSelector.hasAudioInputSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().hasAudioInputSelected().isSubscribed()"
  }, {
    "method": "masterTrack.sourceSelector.hasAudioInputSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().hasAudioInputSelected().subscribe()"
  }, {
    "method": "masterTrack.sourceSelector.hasAudioInputSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().hasAudioInputSelected().unsubscribe()"
  }, {
    "method": "masterTrack.sourceSelector.hasAudioInputSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().hasAudioInputSelected().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.sourceSelector.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#sourceSelector().exists()"
  }, {
    "method": "masterTrack.sourceSelector.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().exists().get()"
  }, {
    "method": "masterTrack.sourceSelector.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().exists().getAsBoolean()"
  }, {
    "method": "masterTrack.sourceSelector.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().exists().isSubscribed()"
  }, {
    "method": "masterTrack.sourceSelector.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().exists().subscribe()"
  }, {
    "method": "masterTrack.sourceSelector.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().exists().unsubscribe()"
  }, {
    "method": "masterTrack.sourceSelector.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().exists().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.sourceSelector.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#sourceSelector().isSubscribed()"
  }, {
    "method": "masterTrack.sourceSelector.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().subscribe()"
  }, {
    "method": "masterTrack.sourceSelector.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().unsubscribe()"
  }, {
    "method": "masterTrack.sourceSelector.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#sourceSelector().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.isStopped",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#isStopped()"
  }, {
    "method": "masterTrack.isStopped.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isStopped().get()"
  }, {
    "method": "masterTrack.isStopped.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isStopped().getAsBoolean()"
  }, {
    "method": "masterTrack.isStopped.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isStopped().isSubscribed()"
  }, {
    "method": "masterTrack.isStopped.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isStopped().subscribe()"
  }, {
    "method": "masterTrack.isStopped.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isStopped().unsubscribe()"
  }, {
    "method": "masterTrack.isStopped.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#isStopped().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.arm",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#arm()"
  }, {
    "method": "masterTrack.arm.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#arm().set(boolean)"
  }, {
    "method": "masterTrack.arm.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#arm().toggle()"
  }, {
    "method": "masterTrack.arm.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#arm().get()"
  }, {
    "method": "masterTrack.arm.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#arm().getAsBoolean()"
  }, {
    "method": "masterTrack.arm.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#arm().isSubscribed()"
  }, {
    "method": "masterTrack.arm.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#arm().subscribe()"
  }, {
    "method": "masterTrack.arm.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#arm().unsubscribe()"
  }, {
    "method": "masterTrack.arm.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#arm().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.arm.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#arm().invoke()"
  }, {
    "method": "masterTrack.monitor",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#monitor()"
  }, {
    "method": "masterTrack.monitor.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#monitor().set(boolean)"
  }, {
    "method": "masterTrack.monitor.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#monitor().toggle()"
  }, {
    "method": "masterTrack.monitor.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#monitor().get()"
  }, {
    "method": "masterTrack.monitor.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#monitor().getAsBoolean()"
  }, {
    "method": "masterTrack.monitor.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#monitor().isSubscribed()"
  }, {
    "method": "masterTrack.monitor.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#monitor().subscribe()"
  }, {
    "method": "masterTrack.monitor.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#monitor().unsubscribe()"
  }, {
    "method": "masterTrack.monitor.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#monitor().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.monitor.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#monitor().invoke()"
  }, {
    "method": "masterTrack.returnToArrangement",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#returnToArrangement()"
  }, {
    "method": "masterTrack.afterTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#afterTrackInsertionPoint().paste()"
  }, {
    "method": "masterTrack.afterTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#afterTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "masterTrack.afterTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#afterTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "masterTrack.afterTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#afterTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "masterTrack.afterTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#afterTrackInsertionPoint().browse()"
  }, {
    "method": "masterTrack.beforeTrackInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#beforeTrackInsertionPoint().paste()"
  }, {
    "method": "masterTrack.beforeTrackInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#beforeTrackInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "masterTrack.beforeTrackInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#beforeTrackInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "masterTrack.beforeTrackInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#beforeTrackInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "masterTrack.beforeTrackInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#beforeTrackInsertionPoint().browse()"
  }, {
    "method": "masterTrack.playNote",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#playNote(int, int)"
  }, {
    "method": "masterTrack.sendMidi",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void MasterTrack#sendMidi(int, int, int)"
  }, {
    "method": "masterTrack.crossFadeMode",
    "params": [],
    "result": "object",
    "expression": "SettableEnumValue MasterTrack#crossFadeMode()"
  }, {
    "method": "masterTrack.crossFadeMode.set",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#crossFadeMode().set(java.lang.String)"
  }, {
    "method": "masterTrack.crossFadeMode.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#crossFadeMode().get()"
  }, {
    "method": "masterTrack.crossFadeMode.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#crossFadeMode().isSubscribed()"
  }, {
    "method": "masterTrack.crossFadeMode.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#crossFadeMode().subscribe()"
  }, {
    "method": "masterTrack.crossFadeMode.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#crossFadeMode().unsubscribe()"
  }, {
    "method": "masterTrack.crossFadeMode.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#crossFadeMode().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.isGroup",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#isGroup()"
  }, {
    "method": "masterTrack.isGroup.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isGroup().get()"
  }, {
    "method": "masterTrack.isGroup.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isGroup().getAsBoolean()"
  }, {
    "method": "masterTrack.isGroup.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isGroup().isSubscribed()"
  }, {
    "method": "masterTrack.isGroup.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isGroup().subscribe()"
  }, {
    "method": "masterTrack.isGroup.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isGroup().unsubscribe()"
  }, {
    "method": "masterTrack.isGroup.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#isGroup().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.duplicate",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#duplicate()"
  }, {
    "method": "masterTrack.color",
    "params": [],
    "result": "object",
    "expression": "SettableColorValue MasterTrack#color()"
  }, {
    "method": "masterTrack.color.set",
    "params": ["number", "number", "number"],
    "result": "void",
    "expression": "void MasterTrack#color().set(float, float, float)"
  }, {
    "method": "masterTrack.color.set",
    "params": ["number", "number", "number", "number"],
    "result": "void",
    "expression": "void MasterTrack#color().set(float, float, float, float)"
  }, {
    "method": "masterTrack.color.red",
    "params": [],
    "result": "number",
    "expression": "float MasterTrack#color().red()"
  }, {
    "method": "masterTrack.color.alpha",
    "params": [],
    "result": "number",
    "expression": "float MasterTrack#color().alpha()"
  }, {
    "method": "masterTrack.color.green",
    "params": [],
    "result": "number",
    "expression": "float MasterTrack#color().green()"
  }, {
    "method": "masterTrack.color.blue",
    "params": [],
    "result": "number",
    "expression": "float MasterTrack#color().blue()"
  }, {
    "method": "masterTrack.color.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#color().isSubscribed()"
  }, {
    "method": "masterTrack.color.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#color().subscribe()"
  }, {
    "method": "masterTrack.color.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#color().unsubscribe()"
  }, {
    "method": "masterTrack.color.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#color().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.isActivated",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#isActivated()"
  }, {
    "method": "masterTrack.isActivated.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#isActivated().set(boolean)"
  }, {
    "method": "masterTrack.isActivated.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isActivated().toggle()"
  }, {
    "method": "masterTrack.isActivated.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isActivated().get()"
  }, {
    "method": "masterTrack.isActivated.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isActivated().getAsBoolean()"
  }, {
    "method": "masterTrack.isActivated.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isActivated().isSubscribed()"
  }, {
    "method": "masterTrack.isActivated.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isActivated().subscribe()"
  }, {
    "method": "masterTrack.isActivated.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isActivated().unsubscribe()"
  }, {
    "method": "masterTrack.isActivated.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#isActivated().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.isActivated.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isActivated().invoke()"
  }, {
    "method": "masterTrack.makeVisibleInMixer",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#makeVisibleInMixer()"
  }, {
    "method": "masterTrack.pan",
    "params": [],
    "result": "object",
    "expression": "Parameter MasterTrack#pan()"
  }, {
    "method": "masterTrack.pan.name",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#pan().name()"
  }, {
    "method": "masterTrack.pan.name.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#pan().name().get()"
  }, {
    "method": "masterTrack.pan.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#pan().name().getLimited(int)"
  }, {
    "method": "masterTrack.pan.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().name().isSubscribed()"
  }, {
    "method": "masterTrack.pan.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().name().subscribe()"
  }, {
    "method": "masterTrack.pan.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().name().unsubscribe()"
  }, {
    "method": "masterTrack.pan.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().name().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.pan.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue MasterTrack#pan().value()"
  }, {
    "method": "masterTrack.pan.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.pan.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().set(double)"
  }, {
    "method": "masterTrack.pan.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.pan.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().inc(double)"
  }, {
    "method": "masterTrack.pan.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().setRaw(double)"
  }, {
    "method": "masterTrack.pan.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().setImmediately(double)"
  }, {
    "method": "masterTrack.pan.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().incRaw(double)"
  }, {
    "method": "masterTrack.pan.value.get",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().value().get()"
  }, {
    "method": "masterTrack.pan.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().value().getRaw()"
  }, {
    "method": "masterTrack.pan.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().value().getAsDouble()"
  }, {
    "method": "masterTrack.pan.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#pan().value().displayedValue()"
  }, {
    "method": "masterTrack.pan.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#pan().value().displayedValue().get()"
  }, {
    "method": "masterTrack.pan.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#pan().value().displayedValue().getLimited(int)"
  }, {
    "method": "masterTrack.pan.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().value().displayedValue().isSubscribed()"
  }, {
    "method": "masterTrack.pan.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().value().displayedValue().subscribe()"
  }, {
    "method": "masterTrack.pan.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().value().displayedValue().unsubscribe()"
  }, {
    "method": "masterTrack.pan.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.pan.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().value().isSubscribed()"
  }, {
    "method": "masterTrack.pan.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().value().subscribe()"
  }, {
    "method": "masterTrack.pan.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().value().unsubscribe()"
  }, {
    "method": "masterTrack.pan.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().value().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.pan.reset",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().reset()"
  }, {
    "method": "masterTrack.pan.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().touch(boolean)"
  }, {
    "method": "masterTrack.pan.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().restoreAutomationControl()"
  }, {
    "method": "masterTrack.pan.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue MasterTrack#pan().modulatedValue()"
  }, {
    "method": "masterTrack.pan.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().modulatedValue().get()"
  }, {
    "method": "masterTrack.pan.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().modulatedValue().getRaw()"
  }, {
    "method": "masterTrack.pan.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().modulatedValue().getAsDouble()"
  }, {
    "method": "masterTrack.pan.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#pan().modulatedValue().displayedValue()"
  }, {
    "method": "masterTrack.pan.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#pan().modulatedValue().displayedValue().get()"
  }, {
    "method": "masterTrack.pan.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#pan().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "masterTrack.pan.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "masterTrack.pan.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "masterTrack.pan.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "masterTrack.pan.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.pan.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().modulatedValue().isSubscribed()"
  }, {
    "method": "masterTrack.pan.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().modulatedValue().subscribe()"
  }, {
    "method": "masterTrack.pan.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().modulatedValue().unsubscribe()"
  }, {
    "method": "masterTrack.pan.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.pan.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().setIndication(boolean)"
  }, {
    "method": "masterTrack.pan.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#pan().exists()"
  }, {
    "method": "masterTrack.pan.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().exists().get()"
  }, {
    "method": "masterTrack.pan.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().exists().getAsBoolean()"
  }, {
    "method": "masterTrack.pan.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().exists().isSubscribed()"
  }, {
    "method": "masterTrack.pan.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().exists().subscribe()"
  }, {
    "method": "masterTrack.pan.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().exists().unsubscribe()"
  }, {
    "method": "masterTrack.pan.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().exists().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.pan.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().isSubscribed()"
  }, {
    "method": "masterTrack.pan.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().subscribe()"
  }, {
    "method": "masterTrack.pan.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().unsubscribe()"
  }, {
    "method": "masterTrack.pan.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.pan.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#pan().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.pan.set",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().set(double)"
  }, {
    "method": "masterTrack.pan.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#pan().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.pan.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().inc(double)"
  }, {
    "method": "masterTrack.pan.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().setRaw(double)"
  }, {
    "method": "masterTrack.pan.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().setImmediately(double)"
  }, {
    "method": "masterTrack.pan.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#pan().incRaw(double)"
  }, {
    "method": "masterTrack.pan.get",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().get()"
  }, {
    "method": "masterTrack.pan.getRaw",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().getRaw()"
  }, {
    "method": "masterTrack.pan.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#pan().getAsDouble()"
  }, {
    "method": "masterTrack.pan.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#pan().displayedValue()"
  }, {
    "method": "masterTrack.pan.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#pan().displayedValue().get()"
  }, {
    "method": "masterTrack.pan.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#pan().displayedValue().getLimited(int)"
  }, {
    "method": "masterTrack.pan.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#pan().displayedValue().isSubscribed()"
  }, {
    "method": "masterTrack.pan.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().displayedValue().subscribe()"
  }, {
    "method": "masterTrack.pan.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#pan().displayedValue().unsubscribe()"
  }, {
    "method": "masterTrack.pan.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#pan().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.mute",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue MasterTrack#mute()"
  }, {
    "method": "masterTrack.mute.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#mute().set(boolean)"
  }, {
    "method": "masterTrack.mute.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#mute().toggle()"
  }, {
    "method": "masterTrack.mute.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#mute().get()"
  }, {
    "method": "masterTrack.mute.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#mute().getAsBoolean()"
  }, {
    "method": "masterTrack.mute.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#mute().isSubscribed()"
  }, {
    "method": "masterTrack.mute.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#mute().subscribe()"
  }, {
    "method": "masterTrack.mute.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#mute().unsubscribe()"
  }, {
    "method": "masterTrack.mute.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#mute().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.mute.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#mute().invoke()"
  }, {
    "method": "masterTrack.solo",
    "params": [],
    "result": "object",
    "expression": "SoloValue MasterTrack#solo()"
  }, {
    "method": "masterTrack.solo.toggle",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#solo().toggle(boolean)"
  }, {
    "method": "masterTrack.solo.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#solo().set(boolean)"
  }, {
    "method": "masterTrack.solo.toggle",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#solo().toggle()"
  }, {
    "method": "masterTrack.solo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#solo().get()"
  }, {
    "method": "masterTrack.solo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#solo().getAsBoolean()"
  }, {
    "method": "masterTrack.solo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#solo().isSubscribed()"
  }, {
    "method": "masterTrack.solo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#solo().subscribe()"
  }, {
    "method": "masterTrack.solo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#solo().unsubscribe()"
  }, {
    "method": "masterTrack.solo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#solo().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.solo.invoke",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#solo().invoke()"
  }, {
    "method": "masterTrack.volume",
    "params": [],
    "result": "object",
    "expression": "Parameter MasterTrack#volume()"
  }, {
    "method": "masterTrack.volume.name",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#volume().name()"
  }, {
    "method": "masterTrack.volume.name.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#volume().name().get()"
  }, {
    "method": "masterTrack.volume.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#volume().name().getLimited(int)"
  }, {
    "method": "masterTrack.volume.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().name().isSubscribed()"
  }, {
    "method": "masterTrack.volume.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().name().subscribe()"
  }, {
    "method": "masterTrack.volume.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().name().unsubscribe()"
  }, {
    "method": "masterTrack.volume.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().name().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.volume.value",
    "params": [],
    "result": "object",
    "expression": "SettableRangedValue MasterTrack#volume().value()"
  }, {
    "method": "masterTrack.volume.value.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.volume.value.set",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().set(double)"
  }, {
    "method": "masterTrack.volume.value.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.volume.value.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().inc(double)"
  }, {
    "method": "masterTrack.volume.value.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().setRaw(double)"
  }, {
    "method": "masterTrack.volume.value.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().setImmediately(double)"
  }, {
    "method": "masterTrack.volume.value.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().incRaw(double)"
  }, {
    "method": "masterTrack.volume.value.get",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().value().get()"
  }, {
    "method": "masterTrack.volume.value.getRaw",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().value().getRaw()"
  }, {
    "method": "masterTrack.volume.value.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().value().getAsDouble()"
  }, {
    "method": "masterTrack.volume.value.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#volume().value().displayedValue()"
  }, {
    "method": "masterTrack.volume.value.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#volume().value().displayedValue().get()"
  }, {
    "method": "masterTrack.volume.value.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#volume().value().displayedValue().getLimited(int)"
  }, {
    "method": "masterTrack.volume.value.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().value().displayedValue().isSubscribed()"
  }, {
    "method": "masterTrack.volume.value.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().value().displayedValue().subscribe()"
  }, {
    "method": "masterTrack.volume.value.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().value().displayedValue().unsubscribe()"
  }, {
    "method": "masterTrack.volume.value.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.volume.value.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().value().isSubscribed()"
  }, {
    "method": "masterTrack.volume.value.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().value().subscribe()"
  }, {
    "method": "masterTrack.volume.value.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().value().unsubscribe()"
  }, {
    "method": "masterTrack.volume.value.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().value().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.volume.reset",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().reset()"
  }, {
    "method": "masterTrack.volume.touch",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().touch(boolean)"
  }, {
    "method": "masterTrack.volume.restoreAutomationControl",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().restoreAutomationControl()"
  }, {
    "method": "masterTrack.volume.modulatedValue",
    "params": [],
    "result": "object",
    "expression": "RangedValue MasterTrack#volume().modulatedValue()"
  }, {
    "method": "masterTrack.volume.modulatedValue.get",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().modulatedValue().get()"
  }, {
    "method": "masterTrack.volume.modulatedValue.getRaw",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().modulatedValue().getRaw()"
  }, {
    "method": "masterTrack.volume.modulatedValue.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().modulatedValue().getAsDouble()"
  }, {
    "method": "masterTrack.volume.modulatedValue.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#volume().modulatedValue().displayedValue()"
  }, {
    "method": "masterTrack.volume.modulatedValue.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#volume().modulatedValue().displayedValue().get()"
  }, {
    "method": "masterTrack.volume.modulatedValue.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#volume().modulatedValue().displayedValue().getLimited(int)"
  }, {
    "method": "masterTrack.volume.modulatedValue.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().modulatedValue().displayedValue().isSubscribed()"
  }, {
    "method": "masterTrack.volume.modulatedValue.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().modulatedValue().displayedValue().subscribe()"
  }, {
    "method": "masterTrack.volume.modulatedValue.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().modulatedValue().displayedValue().unsubscribe()"
  }, {
    "method": "masterTrack.volume.modulatedValue.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().modulatedValue().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.volume.modulatedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().modulatedValue().isSubscribed()"
  }, {
    "method": "masterTrack.volume.modulatedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().modulatedValue().subscribe()"
  }, {
    "method": "masterTrack.volume.modulatedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().modulatedValue().unsubscribe()"
  }, {
    "method": "masterTrack.volume.modulatedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().modulatedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.volume.setIndication",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().setIndication(boolean)"
  }, {
    "method": "masterTrack.volume.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#volume().exists()"
  }, {
    "method": "masterTrack.volume.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().exists().get()"
  }, {
    "method": "masterTrack.volume.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().exists().getAsBoolean()"
  }, {
    "method": "masterTrack.volume.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().exists().isSubscribed()"
  }, {
    "method": "masterTrack.volume.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().exists().subscribe()"
  }, {
    "method": "masterTrack.volume.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().exists().unsubscribe()"
  }, {
    "method": "masterTrack.volume.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().exists().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.volume.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().isSubscribed()"
  }, {
    "method": "masterTrack.volume.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().subscribe()"
  }, {
    "method": "masterTrack.volume.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().unsubscribe()"
  }, {
    "method": "masterTrack.volume.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.volume.set",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#volume().set(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.volume.set",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().set(double)"
  }, {
    "method": "masterTrack.volume.inc",
    "params": ["number", "number"],
    "result": "void",
    "expression": "void MasterTrack#volume().inc(java.lang.Number, java.lang.Number)"
  }, {
    "method": "masterTrack.volume.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().inc(double)"
  }, {
    "method": "masterTrack.volume.setRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().setRaw(double)"
  }, {
    "method": "masterTrack.volume.setImmediately",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().setImmediately(double)"
  }, {
    "method": "masterTrack.volume.incRaw",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#volume().incRaw(double)"
  }, {
    "method": "masterTrack.volume.get",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().get()"
  }, {
    "method": "masterTrack.volume.getRaw",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().getRaw()"
  }, {
    "method": "masterTrack.volume.getAsDouble",
    "params": [],
    "result": "number",
    "expression": "double MasterTrack#volume().getAsDouble()"
  }, {
    "method": "masterTrack.volume.displayedValue",
    "params": [],
    "result": "object",
    "expression": "StringValue MasterTrack#volume().displayedValue()"
  }, {
    "method": "masterTrack.volume.displayedValue.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#volume().displayedValue().get()"
  }, {
    "method": "masterTrack.volume.displayedValue.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#volume().displayedValue().getLimited(int)"
  }, {
    "method": "masterTrack.volume.displayedValue.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#volume().displayedValue().isSubscribed()"
  }, {
    "method": "masterTrack.volume.displayedValue.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().displayedValue().subscribe()"
  }, {
    "method": "masterTrack.volume.displayedValue.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#volume().displayedValue().unsubscribe()"
  }, {
    "method": "masterTrack.volume.displayedValue.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#volume().displayedValue().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.makeVisibleInArranger",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#makeVisibleInArranger()"
  }, {
    "method": "masterTrack.playingNotes.isNotePlaying",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean MasterTrack#playingNotes().isNotePlaying(int)"
  }, {
    "method": "masterTrack.playingNotes.get",
    "params": [],
    "result": "any[]",
    "expression": "Object[] MasterTrack#playingNotes().get()"
  }, {
    "method": "masterTrack.playingNotes.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object MasterTrack#playingNotes().get(int)"
  }, {
    "method": "masterTrack.playingNotes.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#playingNotes().isEmpty()"
  }, {
    "method": "masterTrack.playingNotes.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#playingNotes().isSubscribed()"
  }, {
    "method": "masterTrack.playingNotes.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#playingNotes().subscribe()"
  }, {
    "method": "masterTrack.playingNotes.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#playingNotes().unsubscribe()"
  }, {
    "method": "masterTrack.playingNotes.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#playingNotes().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.isMutedBySolo",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#isMutedBySolo()"
  }, {
    "method": "masterTrack.isMutedBySolo.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isMutedBySolo().get()"
  }, {
    "method": "masterTrack.isMutedBySolo.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isMutedBySolo().getAsBoolean()"
  }, {
    "method": "masterTrack.isMutedBySolo.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isMutedBySolo().isSubscribed()"
  }, {
    "method": "masterTrack.isMutedBySolo.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isMutedBySolo().subscribe()"
  }, {
    "method": "masterTrack.isMutedBySolo.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#isMutedBySolo().unsubscribe()"
  }, {
    "method": "masterTrack.isMutedBySolo.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#isMutedBySolo().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.selectInMixer",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#selectInMixer()"
  }, {
    "method": "masterTrack.deleteObject",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#deleteObject()"
  }, {
    "method": "masterTrack.name",
    "params": [],
    "result": "object",
    "expression": "SettableStringValue MasterTrack#name()"
  }, {
    "method": "masterTrack.name.set",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#name().set(java.lang.String)"
  }, {
    "method": "masterTrack.name.get",
    "params": [],
    "result": "string",
    "expression": "String MasterTrack#name().get()"
  }, {
    "method": "masterTrack.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String MasterTrack#name().getLimited(int)"
  }, {
    "method": "masterTrack.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#name().isSubscribed()"
  }, {
    "method": "masterTrack.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#name().subscribe()"
  }, {
    "method": "masterTrack.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#name().unsubscribe()"
  }, {
    "method": "masterTrack.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#name().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.selectInEditor",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#selectInEditor()"
  }, {
    "method": "masterTrack.startOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#startOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "masterTrack.startOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#startOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "masterTrack.startOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#startOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "masterTrack.startOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#startOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "masterTrack.startOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#startOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "masterTrack.endOfDeviceChainInsertionPoint.paste",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#endOfDeviceChainInsertionPoint().paste()"
  }, {
    "method": "masterTrack.endOfDeviceChainInsertionPoint.insertVST2Device",
    "params": ["number"],
    "result": "void",
    "expression": "void MasterTrack#endOfDeviceChainInsertionPoint().insertVST2Device(int)"
  }, {
    "method": "masterTrack.endOfDeviceChainInsertionPoint.insertVST3Device",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#endOfDeviceChainInsertionPoint().insertVST3Device(java.lang.String)"
  }, {
    "method": "masterTrack.endOfDeviceChainInsertionPoint.insertFile",
    "params": ["string"],
    "result": "void",
    "expression": "void MasterTrack#endOfDeviceChainInsertionPoint().insertFile(java.lang.String)"
  }, {
    "method": "masterTrack.endOfDeviceChainInsertionPoint.browse",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#endOfDeviceChainInsertionPoint().browse()"
  }, {
    "method": "masterTrack.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue MasterTrack#exists()"
  }, {
    "method": "masterTrack.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#exists().get()"
  }, {
    "method": "masterTrack.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#exists().getAsBoolean()"
  }, {
    "method": "masterTrack.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#exists().isSubscribed()"
  }, {
    "method": "masterTrack.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#exists().subscribe()"
  }, {
    "method": "masterTrack.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#exists().unsubscribe()"
  }, {
    "method": "masterTrack.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#exists().setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#isSubscribed()"
  }, {
    "method": "masterTrack.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#subscribe()"
  }, {
    "method": "masterTrack.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#unsubscribe()"
  }, {
    "method": "masterTrack.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#setIsSubscribed(boolean)"
  }, {
    "method": "masterTrack.vuMeter",
    "params": [],
    "result": "object",
    "expression": "VuMeterValue MasterTrack#vuMeter()"
  }, {
    "method": "masterTrack.vuMeter.get",
    "params": ["number", "boolean"],
    "result": "object",
    "expression": "VuMeterLevel MasterTrack#vuMeter().get(int, boolean)"
  }, {
    "method": "masterTrack.vuMeter.values",
    "params": [],
    "result": "object",
    "expression": "Collection MasterTrack#vuMeter().values()"
  }, {
    "method": "masterTrack.vuMeter.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean MasterTrack#vuMeter().isSubscribed()"
  }, {
    "method": "masterTrack.vuMeter.subscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#vuMeter().subscribe()"
  }, {
    "method": "masterTrack.vuMeter.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void MasterTrack#vuMeter().unsubscribe()"
  }, {
    "method": "masterTrack.vuMeter.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void MasterTrack#vuMeter().setIsSubscribed(boolean)"
  }, {
    "method": "browser.shouldAudition",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#shouldAudition()"
  }, {
    "method": "browser.shouldAudition.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#shouldAudition().set(boolean)"
  }, {
    "method": "browser.shouldAudition.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#shouldAudition().toggle()"
  }, {
    "method": "browser.shouldAudition.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#shouldAudition().get()"
  }, {
    "method": "browser.shouldAudition.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#shouldAudition().getAsBoolean()"
  }, {
    "method": "browser.shouldAudition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#shouldAudition().isSubscribed()"
  }, {
    "method": "browser.shouldAudition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#shouldAudition().subscribe()"
  }, {
    "method": "browser.shouldAudition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#shouldAudition().unsubscribe()"
  }, {
    "method": "browser.shouldAudition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#shouldAudition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.shouldAudition.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#shouldAudition().invoke()"
  }, {
    "method": "browser.locationColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#locationColumn().name()"
  }, {
    "method": "browser.locationColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#locationColumn().name().get()"
  }, {
    "method": "browser.locationColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#locationColumn().name().getLimited(int)"
  }, {
    "method": "browser.locationColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().name().isSubscribed()"
  }, {
    "method": "browser.locationColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().name().subscribe()"
  }, {
    "method": "browser.locationColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().name().unsubscribe()"
  }, {
    "method": "browser.locationColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#locationColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#locationColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#locationColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#locationColumn().getWildcardItem().name()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#locationColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#locationColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.locationColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#locationColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#locationColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.locationColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#locationColumn().entryCount()"
  }, {
    "method": "browser.locationColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#locationColumn().entryCount().get()"
  }, {
    "method": "browser.locationColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#locationColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.locationColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.locationColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().entryCount().subscribe()"
  }, {
    "method": "browser.locationColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.locationColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#locationColumn().exists()"
  }, {
    "method": "browser.locationColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().exists().get()"
  }, {
    "method": "browser.locationColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().exists().isSubscribed()"
  }, {
    "method": "browser.locationColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().exists().subscribe()"
  }, {
    "method": "browser.locationColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().exists().unsubscribe()"
  }, {
    "method": "browser.locationColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#locationColumn().isSubscribed()"
  }, {
    "method": "browser.locationColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().subscribe()"
  }, {
    "method": "browser.locationColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().unsubscribe()"
  }, {
    "method": "browser.locationColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#locationColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#tagColumn().name()"
  }, {
    "method": "browser.tagColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#tagColumn().name().get()"
  }, {
    "method": "browser.tagColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#tagColumn().name().getLimited(int)"
  }, {
    "method": "browser.tagColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().name().isSubscribed()"
  }, {
    "method": "browser.tagColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().name().subscribe()"
  }, {
    "method": "browser.tagColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().name().unsubscribe()"
  }, {
    "method": "browser.tagColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#tagColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#tagColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#tagColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#tagColumn().getWildcardItem().name()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#tagColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#tagColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.tagColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#tagColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#tagColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.tagColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#tagColumn().entryCount()"
  }, {
    "method": "browser.tagColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#tagColumn().entryCount().get()"
  }, {
    "method": "browser.tagColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#tagColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.tagColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.tagColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().entryCount().subscribe()"
  }, {
    "method": "browser.tagColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.tagColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#tagColumn().exists()"
  }, {
    "method": "browser.tagColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().exists().get()"
  }, {
    "method": "browser.tagColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().exists().isSubscribed()"
  }, {
    "method": "browser.tagColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().exists().subscribe()"
  }, {
    "method": "browser.tagColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().exists().unsubscribe()"
  }, {
    "method": "browser.tagColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#tagColumn().isSubscribed()"
  }, {
    "method": "browser.tagColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().subscribe()"
  }, {
    "method": "browser.tagColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().unsubscribe()"
  }, {
    "method": "browser.tagColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#tagColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.contentTypeNames",
    "params": [],
    "result": "object",
    "expression": "StringArrayValue PopupBrowser#contentTypeNames()"
  }, {
    "method": "browser.contentTypeNames.get",
    "params": [],
    "result": "string[]",
    "expression": "String[] PopupBrowser#contentTypeNames().get()"
  }, {
    "method": "browser.contentTypeNames.get",
    "params": ["number"],
    "result": "any",
    "expression": "Object PopupBrowser#contentTypeNames().get(int)"
  }, {
    "method": "browser.contentTypeNames.isEmpty",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#contentTypeNames().isEmpty()"
  }, {
    "method": "browser.contentTypeNames.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#contentTypeNames().isSubscribed()"
  }, {
    "method": "browser.contentTypeNames.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#contentTypeNames().subscribe()"
  }, {
    "method": "browser.contentTypeNames.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#contentTypeNames().unsubscribe()"
  }, {
    "method": "browser.contentTypeNames.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#contentTypeNames().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#deviceColumn().name()"
  }, {
    "method": "browser.deviceColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#deviceColumn().name().get()"
  }, {
    "method": "browser.deviceColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#deviceColumn().name().getLimited(int)"
  }, {
    "method": "browser.deviceColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().name().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().name().subscribe()"
  }, {
    "method": "browser.deviceColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().name().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#deviceColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#deviceColumn().getWildcardItem().name()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#deviceColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#deviceColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#deviceColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#deviceColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#deviceColumn().entryCount()"
  }, {
    "method": "browser.deviceColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceColumn().entryCount().get()"
  }, {
    "method": "browser.deviceColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.deviceColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().entryCount().subscribe()"
  }, {
    "method": "browser.deviceColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#deviceColumn().exists()"
  }, {
    "method": "browser.deviceColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().exists().get()"
  }, {
    "method": "browser.deviceColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().exists().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().exists().subscribe()"
  }, {
    "method": "browser.deviceColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().exists().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceColumn().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().subscribe()"
  }, {
    "method": "browser.deviceColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#fileTypeColumn().name()"
  }, {
    "method": "browser.fileTypeColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#fileTypeColumn().name().get()"
  }, {
    "method": "browser.fileTypeColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#fileTypeColumn().name().getLimited(int)"
  }, {
    "method": "browser.fileTypeColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().name().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().name().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().name().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#fileTypeColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#fileTypeColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#fileTypeColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#fileTypeColumn().getWildcardItem().name()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#fileTypeColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#fileTypeColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#fileTypeColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#fileTypeColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#fileTypeColumn().entryCount()"
  }, {
    "method": "browser.fileTypeColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#fileTypeColumn().entryCount().get()"
  }, {
    "method": "browser.fileTypeColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#fileTypeColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.fileTypeColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().entryCount().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#fileTypeColumn().exists()"
  }, {
    "method": "browser.fileTypeColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().exists().get()"
  }, {
    "method": "browser.fileTypeColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().exists().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().exists().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().exists().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#fileTypeColumn().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#fileTypeColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.selectFirstFile",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectFirstFile()"
  }, {
    "method": "browser.canAudition",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#canAudition()"
  }, {
    "method": "browser.canAudition.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#canAudition().get()"
  }, {
    "method": "browser.canAudition.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#canAudition().getAsBoolean()"
  }, {
    "method": "browser.canAudition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#canAudition().isSubscribed()"
  }, {
    "method": "browser.canAudition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#canAudition().subscribe()"
  }, {
    "method": "browser.canAudition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#canAudition().unsubscribe()"
  }, {
    "method": "browser.canAudition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#canAudition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.selectLastFile",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectLastFile()"
  }, {
    "method": "browser.commit",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#commit()"
  }, {
    "method": "browser.title",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#title()"
  }, {
    "method": "browser.title.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#title().get()"
  }, {
    "method": "browser.title.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#title().getLimited(int)"
  }, {
    "method": "browser.title.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#title().isSubscribed()"
  }, {
    "method": "browser.title.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#title().subscribe()"
  }, {
    "method": "browser.title.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#title().unsubscribe()"
  }, {
    "method": "browser.title.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#title().setIsSubscribed(boolean)"
  }, {
    "method": "browser.cancel",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#cancel()"
  }, {
    "method": "browser.selectedContentTypeName",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#selectedContentTypeName()"
  }, {
    "method": "browser.selectedContentTypeName.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#selectedContentTypeName().get()"
  }, {
    "method": "browser.selectedContentTypeName.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#selectedContentTypeName().getLimited(int)"
  }, {
    "method": "browser.selectedContentTypeName.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#selectedContentTypeName().isSubscribed()"
  }, {
    "method": "browser.selectedContentTypeName.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeName().subscribe()"
  }, {
    "method": "browser.selectedContentTypeName.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeName().unsubscribe()"
  }, {
    "method": "browser.selectedContentTypeName.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeName().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#smartCollectionColumn().name()"
  }, {
    "method": "browser.smartCollectionColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#smartCollectionColumn().name().get()"
  }, {
    "method": "browser.smartCollectionColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#smartCollectionColumn().name().getLimited(int)"
  }, {
    "method": "browser.smartCollectionColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().name().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().name().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().name().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#smartCollectionColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#smartCollectionColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#smartCollectionColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#smartCollectionColumn().getWildcardItem().name()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#smartCollectionColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#smartCollectionColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#smartCollectionColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#smartCollectionColumn().entryCount()"
  }, {
    "method": "browser.smartCollectionColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#smartCollectionColumn().entryCount().get()"
  }, {
    "method": "browser.smartCollectionColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#smartCollectionColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.smartCollectionColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().entryCount().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#smartCollectionColumn().exists()"
  }, {
    "method": "browser.smartCollectionColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().exists().get()"
  }, {
    "method": "browser.smartCollectionColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().exists().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().exists().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().exists().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#smartCollectionColumn().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#smartCollectionColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#deviceTypeColumn().name()"
  }, {
    "method": "browser.deviceTypeColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#deviceTypeColumn().name().get()"
  }, {
    "method": "browser.deviceTypeColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#deviceTypeColumn().name().getLimited(int)"
  }, {
    "method": "browser.deviceTypeColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().name().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().name().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().name().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#deviceTypeColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceTypeColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceTypeColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#deviceTypeColumn().getWildcardItem().name()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#deviceTypeColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#deviceTypeColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#deviceTypeColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#deviceTypeColumn().entryCount()"
  }, {
    "method": "browser.deviceTypeColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceTypeColumn().entryCount().get()"
  }, {
    "method": "browser.deviceTypeColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#deviceTypeColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.deviceTypeColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().entryCount().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#deviceTypeColumn().exists()"
  }, {
    "method": "browser.deviceTypeColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().exists().get()"
  }, {
    "method": "browser.deviceTypeColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().exists().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().exists().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().exists().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#deviceTypeColumn().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#deviceTypeColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#categoryColumn().name()"
  }, {
    "method": "browser.categoryColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#categoryColumn().name().get()"
  }, {
    "method": "browser.categoryColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#categoryColumn().name().getLimited(int)"
  }, {
    "method": "browser.categoryColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().name().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().name().subscribe()"
  }, {
    "method": "browser.categoryColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().name().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#categoryColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#categoryColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#categoryColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#categoryColumn().getWildcardItem().name()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#categoryColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#categoryColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#categoryColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#categoryColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#categoryColumn().entryCount()"
  }, {
    "method": "browser.categoryColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#categoryColumn().entryCount().get()"
  }, {
    "method": "browser.categoryColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#categoryColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.categoryColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().entryCount().subscribe()"
  }, {
    "method": "browser.categoryColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#categoryColumn().exists()"
  }, {
    "method": "browser.categoryColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().exists().get()"
  }, {
    "method": "browser.categoryColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().exists().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().exists().subscribe()"
  }, {
    "method": "browser.categoryColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().exists().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#categoryColumn().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().subscribe()"
  }, {
    "method": "browser.categoryColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#categoryColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#resultsColumn().entryCount()"
  }, {
    "method": "browser.resultsColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#resultsColumn().entryCount().get()"
  }, {
    "method": "browser.resultsColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#resultsColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.resultsColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#resultsColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().entryCount().subscribe()"
  }, {
    "method": "browser.resultsColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#resultsColumn().exists()"
  }, {
    "method": "browser.resultsColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#resultsColumn().exists().get()"
  }, {
    "method": "browser.resultsColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#resultsColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#resultsColumn().exists().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().exists().subscribe()"
  }, {
    "method": "browser.resultsColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().exists().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#resultsColumn().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().subscribe()"
  }, {
    "method": "browser.resultsColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#resultsColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#creatorColumn().name()"
  }, {
    "method": "browser.creatorColumn.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#creatorColumn().name().get()"
  }, {
    "method": "browser.creatorColumn.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#creatorColumn().name().getLimited(int)"
  }, {
    "method": "browser.creatorColumn.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().name().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().name().subscribe()"
  }, {
    "method": "browser.creatorColumn.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().name().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#creatorColumn().getWildcardItem().hitCount()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#creatorColumn().getWildcardItem().hitCount().get()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#creatorColumn().getWildcardItem().hitCount().getAsInt()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().hitCount().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().hitCount().subscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().hitCount().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue PopupBrowser#creatorColumn().getWildcardItem().name()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String PopupBrowser#creatorColumn().getWildcardItem().name().get()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String PopupBrowser#creatorColumn().getWildcardItem().name().getLimited(int)"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().name().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().name().subscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().name().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue PopupBrowser#creatorColumn().getWildcardItem().isSelected()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().isSelected().set(boolean)"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().isSelected().toggle()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().isSelected().get()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().isSelected().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().isSelected().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().isSelected().subscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().isSelected().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().isSelected().invoke()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#creatorColumn().getWildcardItem().exists()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().exists().get()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().exists().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().exists().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().exists().subscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().exists().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().getWildcardItem().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().subscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.getWildcardItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().getWildcardItem().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.entryCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue PopupBrowser#creatorColumn().entryCount()"
  }, {
    "method": "browser.creatorColumn.entryCount.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#creatorColumn().entryCount().get()"
  }, {
    "method": "browser.creatorColumn.entryCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#creatorColumn().entryCount().getAsInt()"
  }, {
    "method": "browser.creatorColumn.entryCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().entryCount().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.entryCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().entryCount().subscribe()"
  }, {
    "method": "browser.creatorColumn.entryCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().entryCount().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.entryCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().entryCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#creatorColumn().exists()"
  }, {
    "method": "browser.creatorColumn.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().exists().get()"
  }, {
    "method": "browser.creatorColumn.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().exists().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().exists().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().exists().subscribe()"
  }, {
    "method": "browser.creatorColumn.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().exists().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#creatorColumn().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().subscribe()"
  }, {
    "method": "browser.creatorColumn.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#creatorColumn().setIsSubscribed(boolean)"
  }, {
    "method": "browser.selectNextFile",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectNextFile()"
  }, {
    "method": "browser.selectPreviousFile",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectPreviousFile()"
  }, {
    "method": "browser.selectedContentTypeIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue PopupBrowser#selectedContentTypeIndex()"
  }, {
    "method": "browser.selectedContentTypeIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeIndex().set(int)"
  }, {
    "method": "browser.selectedContentTypeIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeIndex().inc(int)"
  }, {
    "method": "browser.selectedContentTypeIndex.get",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#selectedContentTypeIndex().get()"
  }, {
    "method": "browser.selectedContentTypeIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int PopupBrowser#selectedContentTypeIndex().getAsInt()"
  }, {
    "method": "browser.selectedContentTypeIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#selectedContentTypeIndex().isSubscribed()"
  }, {
    "method": "browser.selectedContentTypeIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeIndex().subscribe()"
  }, {
    "method": "browser.selectedContentTypeIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeIndex().unsubscribe()"
  }, {
    "method": "browser.selectedContentTypeIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#selectedContentTypeIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue PopupBrowser#exists()"
  }, {
    "method": "browser.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#exists().get()"
  }, {
    "method": "browser.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#exists().getAsBoolean()"
  }, {
    "method": "browser.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#exists().isSubscribed()"
  }, {
    "method": "browser.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#exists().subscribe()"
  }, {
    "method": "browser.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#exists().unsubscribe()"
  }, {
    "method": "browser.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean PopupBrowser#isSubscribed()"
  }, {
    "method": "browser.subscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#subscribe()"
  }, {
    "method": "browser.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void PopupBrowser#unsubscribe()"
  }, {
    "method": "browser.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void PopupBrowser#setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.smartCollectionColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.locationColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.locationColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.locationColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.locationColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.locationColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.locationColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.locationColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.locationColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.locationColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.locationColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.locationColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.locationColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.locationColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.locationColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.locationColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.locationColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.locationColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.locationColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.locationColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.locationColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.locationColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.locationColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.locationColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.locationColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.locationColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.locationColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.deviceColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.deviceColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.deviceColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.deviceColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.deviceColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.deviceColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.deviceColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.deviceColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.deviceColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.deviceColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.deviceColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.deviceColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.deviceColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.deviceColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.deviceColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.deviceColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.deviceColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.deviceColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.deviceColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.categoryColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.categoryColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.categoryColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.categoryColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.categoryColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.categoryColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.categoryColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.categoryColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.categoryColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.categoryColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.categoryColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.categoryColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.categoryColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.categoryColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.categoryColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.categoryColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.categoryColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.categoryColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.categoryColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.tagColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.tagColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.tagColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.tagColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.tagColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.tagColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.tagColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.tagColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.tagColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.tagColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.tagColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.tagColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.tagColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.tagColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.tagColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.tagColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.tagColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.tagColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.tagColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.tagColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.tagColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.tagColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.tagColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.tagColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.tagColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.tagColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.deviceTypeColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.fileTypeColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.creatorColumn.cursorItem.hitCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItem#hitCount()"
  }, {
    "method": "browser.creatorColumn.cursorItem.hitCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().get()"
  }, {
    "method": "browser.creatorColumn.cursorItem.hitCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItem#hitCount().getAsInt()"
  }, {
    "method": "browser.creatorColumn.cursorItem.hitCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#hitCount().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.cursorItem.hitCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().subscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.hitCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.hitCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#hitCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserFilterItem#name()"
  }, {
    "method": "browser.creatorColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserFilterItem#name().get()"
  }, {
    "method": "browser.creatorColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItem#name().getLimited(int)"
  }, {
    "method": "browser.creatorColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#name().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().subscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#name().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItem#isSelected()"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().set(boolean)"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().toggle()"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().get()"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().subscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#isSelected().invoke()"
  }, {
    "method": "browser.creatorColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItem#exists()"
  }, {
    "method": "browser.creatorColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().get()"
  }, {
    "method": "browser.creatorColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#exists().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().subscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItem#isSubscribed()"
  }, {
    "method": "browser.creatorColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#subscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItem#unsubscribe()"
  }, {
    "method": "browser.creatorColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getSizeOfBank()"
  }, {
    "method": "browser.creatorColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.creatorColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserFilterItemBank#itemCount()"
  }, {
    "method": "browser.creatorColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.creatorColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserFilterItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserFilterItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserFilterItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#cursorIndex()"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPageForwards()"
  }, {
    "method": "browser.creatorColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#exists()"
  }, {
    "method": "browser.creatorColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBy(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollByPages(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollBackwards()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserFilterItemBank#canScrollForwards()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserFilterItemBank#scrollPosition()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().get()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserFilterItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserFilterItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollForwards()"
  }, {
    "method": "browser.creatorColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserFilterItemBank#scrollBackwards()"
  }, {
    "method": "browser.resultsColumn.cursorItem.name",
    "params": [],
    "result": "object",
    "expression": "StringValue BrowserResultsItem#name()"
  }, {
    "method": "browser.resultsColumn.cursorItem.name.get",
    "params": [],
    "result": "string",
    "expression": "String BrowserResultsItem#name().get()"
  }, {
    "method": "browser.resultsColumn.cursorItem.name.getLimited",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserResultsItem#name().getLimited(int)"
  }, {
    "method": "browser.resultsColumn.cursorItem.name.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#name().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.cursorItem.name.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#name().subscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.name.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#name().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.name.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItem#name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected",
    "params": [],
    "result": "object",
    "expression": "SettableBooleanValue BrowserResultsItem#isSelected()"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.set",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItem#isSelected().set(boolean)"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.toggle",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#isSelected().toggle()"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#isSelected().get()"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#isSelected().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#isSelected().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#isSelected().subscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#isSelected().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItem#isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSelected.invoke",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#isSelected().invoke()"
  }, {
    "method": "browser.resultsColumn.cursorItem.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserResultsItem#exists()"
  }, {
    "method": "browser.resultsColumn.cursorItem.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#exists().get()"
  }, {
    "method": "browser.resultsColumn.cursorItem.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#exists().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.cursorItem.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#exists().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.cursorItem.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#exists().subscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#exists().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItem#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.cursorItem.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItem#isSubscribed()"
  }, {
    "method": "browser.resultsColumn.cursorItem.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#subscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItem#unsubscribe()"
  }, {
    "method": "browser.resultsColumn.cursorItem.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItem#setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.getSizeOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#getSizeOfBank()"
  }, {
    "method": "browser.resultsColumn.itemBank.getCapacityOfBank",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#getCapacityOfBank()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPageBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollPageBackwards()"
  }, {
    "method": "browser.resultsColumn.itemBank.setSizeOfBank",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#setSizeOfBank(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.itemCount",
    "params": [],
    "result": "object",
    "expression": "IntegerValue BrowserResultsItemBank#itemCount()"
  }, {
    "method": "browser.resultsColumn.itemBank.itemCount.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#itemCount().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.itemCount.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#itemCount().getAsInt()"
  }, {
    "method": "browser.resultsColumn.itemBank.itemCount.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#itemCount().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.itemCount.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#itemCount().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.itemCount.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#itemCount().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.itemCount.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#itemCount().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.name",
    "params": ["number"],
    "result": "object",
    "expression": "StringValue BrowserResultsItemBank#getItemAt(int).name()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.name.get",
    "params": ["number"],
    "result": "string",
    "expression": "String BrowserResultsItemBank#getItemAt(int).name().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.name.getLimited",
    "params": ["number", "number"],
    "result": "string",
    "expression": "String BrowserResultsItemBank#getItemAt(int).name().getLimited(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.name.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).name().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.name.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).name().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.name.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).name().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.name.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).name().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected",
    "params": ["number"],
    "result": "object",
    "expression": "SettableBooleanValue BrowserResultsItemBank#getItemAt(int).isSelected()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.set",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).isSelected().set(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.toggle",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).isSelected().toggle()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).isSelected().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).isSelected().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).isSelected().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).isSelected().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).isSelected().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).isSelected().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSelected.invoke",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).isSelected().invoke()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.exists",
    "params": ["number"],
    "result": "object",
    "expression": "BooleanValue BrowserResultsItemBank#getItemAt(int).exists()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.exists.get",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).exists().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.exists.getAsBoolean",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).exists().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.exists.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).exists().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.exists.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).exists().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.exists.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).exists().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.exists.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.isSubscribed",
    "params": ["number"],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#getItemAt(int).isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.subscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.unsubscribe",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.getItemAt.setIsSubscribed",
    "params": ["number", "boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#getItemAt(int).setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserResultsItemBank#cursorIndex()"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#cursorIndex().set(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#cursorIndex().inc(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#cursorIndex().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#cursorIndex().getAsInt()"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#cursorIndex().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#cursorIndex().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#cursorIndex().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.cursorIndex.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#cursorIndex().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPageForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollPageForwards()"
  }, {
    "method": "browser.resultsColumn.itemBank.exists",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserResultsItemBank#exists()"
  }, {
    "method": "browser.resultsColumn.itemBank.exists.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#exists().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.exists.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#exists().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.itemBank.exists.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#exists().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.exists.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#exists().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.exists.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#exists().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.exists.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#exists().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollBy",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollBy(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollByPages",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollByPages(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollIntoView",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollIntoView(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollBackwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserResultsItemBank#canScrollBackwards()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollBackwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#canScrollBackwards().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollBackwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#canScrollBackwards().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollBackwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#canScrollBackwards().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollBackwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#canScrollBackwards().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollBackwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#canScrollBackwards().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollBackwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#canScrollBackwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollForwards",
    "params": [],
    "result": "object",
    "expression": "BooleanValue BrowserResultsItemBank#canScrollForwards()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollForwards.get",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#canScrollForwards().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollForwards.getAsBoolean",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#canScrollForwards().getAsBoolean()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollForwards.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#canScrollForwards().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollForwards.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#canScrollForwards().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollForwards.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#canScrollForwards().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.canScrollForwards.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#canScrollForwards().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition",
    "params": [],
    "result": "object",
    "expression": "SettableIntegerValue BrowserResultsItemBank#scrollPosition()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.set",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollPosition().set(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.inc",
    "params": ["number"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollPosition().inc(int)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.get",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#scrollPosition().get()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.getAsInt",
    "params": [],
    "result": "number",
    "expression": "int BrowserResultsItemBank#scrollPosition().getAsInt()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.isSubscribed",
    "params": [],
    "result": "boolean",
    "expression": "boolean BrowserResultsItemBank#scrollPosition().isSubscribed()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.subscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollPosition().subscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.unsubscribe",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollPosition().unsubscribe()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollPosition.setIsSubscribed",
    "params": ["boolean"],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollPosition().setIsSubscribed(boolean)"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollForwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollForwards()"
  }, {
    "method": "browser.resultsColumn.itemBank.scrollBackwards",
    "params": [],
    "result": "void",
    "expression": "void BrowserResultsItemBank#scrollBackwards()"
  }],
  "events": [{
    "event": "rpc.log"
  }, {
    "event": "host.getNotificationSettings.getUserNotificationsEnabled"
  }, {
    "event": "application.displayProfile"
  }, {
    "event": "application.panelLayout"
  }, {
    "event": "application.projectName"
  }, {
    "event": "application.hasActiveEngine"
  }, {
    "event": "application.recordQuantizeNoteLength"
  }, {
    "event": "application.recordQuantizationGrid"
  }, {
    "event": "application.observedAction"
  }, {
    "event": "transport.preRoll"
  }, {
    "event": "transport.metronomeVolume"
  }, {
    "event": "transport.metronomeVolume.displayedValue"
  }, {
    "event": "transport.timeSignature"
  }, {
    "event": "transport.timeSignature.ticks"
  }, {
    "event": "transport.timeSignature.denominator"
  }, {
    "event": "transport.timeSignature.numerator"
  }, {
    "event": "transport.tempo.name"
  }, {
    "event": "transport.tempo.value"
  }, {
    "event": "transport.tempo.value.displayedValue"
  }, {
    "event": "transport.tempo.modulatedValue"
  }, {
    "event": "transport.tempo.modulatedValue.displayedValue"
  }, {
    "event": "transport.tempo.exists"
  }, {
    "event": "transport.tempo.displayedValue"
  }, {
    "event": "transport.crossfade.name"
  }, {
    "event": "transport.crossfade.value"
  }, {
    "event": "transport.crossfade.value.displayedValue"
  }, {
    "event": "transport.crossfade.modulatedValue"
  }, {
    "event": "transport.crossfade.modulatedValue.displayedValue"
  }, {
    "event": "transport.crossfade.exists"
  }, {
    "event": "transport.crossfade.displayedValue"
  }, {
    "event": "transport.isClipLauncherAutomationWriteEnabled"
  }, {
    "event": "transport.isClipLauncherOverdubEnabled"
  }, {
    "event": "transport.defaultLaunchQuantization"
  }, {
    "event": "transport.isArrangerRecordEnabled"
  }, {
    "event": "transport.isArrangerAutomationWriteEnabled"
  }, {
    "event": "transport.isArrangerOverdubEnabled"
  }, {
    "event": "transport.clipLauncherPostRecordingAction"
  }, {
    "event": "transport.isMetronomeAudibleDuringPreRoll"
  }, {
    "event": "transport.isAutomationOverrideActive"
  }, {
    "event": "transport.isMetronomeTickPlaybackEnabled"
  }, {
    "event": "transport.getPosition"
  }, {
    "event": "transport.getClipLauncherPostRecordingTimeOffset"
  }, {
    "event": "transport.isArrangerLoopEnabled"
  }, {
    "event": "transport.getOutPosition"
  }, {
    "event": "transport.getInPosition"
  }, {
    "event": "transport.isPunchInEnabled"
  }, {
    "event": "transport.isPunchOutEnabled"
  }, {
    "event": "transport.automationWriteMode"
  }, {
    "event": "transport.isPlaying"
  }, {
    "event": "transport.isMetronomeEnabled"
  }, {
    "event": "transport.exists"
  }, {
    "event": "arranger.isTimelineVisible"
  }, {
    "event": "arranger.isIoSectionVisible"
  }, {
    "event": "arranger.areCueMarkersVisible"
  }, {
    "event": "arranger.isPlaybackFollowEnabled"
  }, {
    "event": "arranger.areEffectTracksVisible"
  }, {
    "event": "arranger.hasDoubleRowTrackHeight"
  }, {
    "event": "arranger.isClipLauncherVisible"
  }, {
    "event": "arranger.cueMarkerBank.itemCount"
  }, {
    "event": "arranger.cueMarkerBank.getItemAt.getName",
    "bankDimension": [16]
  }, {
    "event": "arranger.cueMarkerBank.getItemAt.getColor",
    "bankDimension": [16]
  }, {
    "event": "arranger.cueMarkerBank.getItemAt.exists",
    "bankDimension": [16]
  }, {
    "event": "arranger.cueMarkerBank.cursorIndex"
  }, {
    "event": "arranger.cueMarkerBank.exists"
  }, {
    "event": "arranger.cueMarkerBank.canScrollBackwards"
  }, {
    "event": "arranger.cueMarkerBank.canScrollForwards"
  }, {
    "event": "arranger.cueMarkerBank.scrollPosition"
  }, {
    "event": "groove.getEnabled.name"
  }, {
    "event": "groove.getEnabled.value"
  }, {
    "event": "groove.getEnabled.value.displayedValue"
  }, {
    "event": "groove.getEnabled.modulatedValue"
  }, {
    "event": "groove.getEnabled.modulatedValue.displayedValue"
  }, {
    "event": "groove.getEnabled.exists"
  }, {
    "event": "groove.getEnabled.displayedValue"
  }, {
    "event": "groove.getAccentAmount.name"
  }, {
    "event": "groove.getAccentAmount.value"
  }, {
    "event": "groove.getAccentAmount.value.displayedValue"
  }, {
    "event": "groove.getAccentAmount.modulatedValue"
  }, {
    "event": "groove.getAccentAmount.modulatedValue.displayedValue"
  }, {
    "event": "groove.getAccentAmount.exists"
  }, {
    "event": "groove.getAccentAmount.displayedValue"
  }, {
    "event": "groove.getAccentPhase.name"
  }, {
    "event": "groove.getAccentPhase.value"
  }, {
    "event": "groove.getAccentPhase.value.displayedValue"
  }, {
    "event": "groove.getAccentPhase.modulatedValue"
  }, {
    "event": "groove.getAccentPhase.modulatedValue.displayedValue"
  }, {
    "event": "groove.getAccentPhase.exists"
  }, {
    "event": "groove.getAccentPhase.displayedValue"
  }, {
    "event": "groove.getShuffleRate.name"
  }, {
    "event": "groove.getShuffleRate.value"
  }, {
    "event": "groove.getShuffleRate.value.displayedValue"
  }, {
    "event": "groove.getShuffleRate.modulatedValue"
  }, {
    "event": "groove.getShuffleRate.modulatedValue.displayedValue"
  }, {
    "event": "groove.getShuffleRate.exists"
  }, {
    "event": "groove.getShuffleRate.displayedValue"
  }, {
    "event": "groove.getAccentRate.name"
  }, {
    "event": "groove.getAccentRate.value"
  }, {
    "event": "groove.getAccentRate.value.displayedValue"
  }, {
    "event": "groove.getAccentRate.modulatedValue"
  }, {
    "event": "groove.getAccentRate.modulatedValue.displayedValue"
  }, {
    "event": "groove.getAccentRate.exists"
  }, {
    "event": "groove.getAccentRate.displayedValue"
  }, {
    "event": "groove.getShuffleAmount.name"
  }, {
    "event": "groove.getShuffleAmount.value"
  }, {
    "event": "groove.getShuffleAmount.value.displayedValue"
  }, {
    "event": "groove.getShuffleAmount.modulatedValue"
  }, {
    "event": "groove.getShuffleAmount.modulatedValue.displayedValue"
  }, {
    "event": "groove.getShuffleAmount.exists"
  }, {
    "event": "groove.getShuffleAmount.displayedValue"
  }, {
    "event": "mixer.isIoSectionVisible"
  }, {
    "event": "mixer.isSendSectionVisible"
  }, {
    "event": "mixer.isDeviceSectionVisible"
  }, {
    "event": "mixer.isCrossFadeSectionVisible"
  }, {
    "event": "mixer.isClipLauncherSectionVisible"
  }, {
    "event": "mixer.isMeterSectionVisible"
  }, {
    "event": "arrangerCursorClip.color"
  }, {
    "event": "arrangerCursorClip.getShuffle"
  }, {
    "event": "arrangerCursorClip.launchMode"
  }, {
    "event": "arrangerCursorClip.launchQuantization"
  }, {
    "event": "arrangerCursorClip.getAccent"
  }, {
    "event": "arrangerCursorClip.getAccent.displayedValue"
  }, {
    "event": "arrangerCursorClip.isLoopEnabled"
  }, {
    "event": "arrangerCursorClip.useLoopStartAsQuantizationReference"
  }, {
    "event": "arrangerCursorClip.canScrollKeysDown"
  }, {
    "event": "arrangerCursorClip.canScrollKeysUp"
  }, {
    "event": "arrangerCursorClip.getLoopStart"
  }, {
    "event": "arrangerCursorClip.getPlayStart"
  }, {
    "event": "arrangerCursorClip.playingStep"
  }, {
    "event": "arrangerCursorClip.getPlayStop"
  }, {
    "event": "arrangerCursorClip.getLoopLength"
  }, {
    "event": "arrangerCursorClip.getTrack.position"
  }, {
    "event": "arrangerCursorClip.getTrack.canHoldAudioData"
  }, {
    "event": "arrangerCursorClip.getTrack.autoMonitor"
  }, {
    "event": "arrangerCursorClip.getTrack.canHoldNoteData"
  }, {
    "event": "arrangerCursorClip.getTrack.getIsPreFader"
  }, {
    "event": "arrangerCursorClip.getTrack.trackType"
  }, {
    "event": "arrangerCursorClip.getTrack.isQueuedForStop"
  }, {
    "event": "arrangerCursorClip.getTrack.sourceSelector.hasNoteInputSelected"
  }, {
    "event": "arrangerCursorClip.getTrack.sourceSelector.hasAudioInputSelected"
  }, {
    "event": "arrangerCursorClip.getTrack.sourceSelector.exists"
  }, {
    "event": "arrangerCursorClip.getTrack.isStopped"
  }, {
    "event": "arrangerCursorClip.getTrack.arm"
  }, {
    "event": "arrangerCursorClip.getTrack.monitor"
  }, {
    "event": "arrangerCursorClip.getTrack.crossFadeMode"
  }, {
    "event": "arrangerCursorClip.getTrack.isGroup"
  }, {
    "event": "arrangerCursorClip.getTrack.color"
  }, {
    "event": "arrangerCursorClip.getTrack.isActivated"
  }, {
    "event": "arrangerCursorClip.getTrack.pan.name"
  }, {
    "event": "arrangerCursorClip.getTrack.pan.value"
  }, {
    "event": "arrangerCursorClip.getTrack.pan.value.displayedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.pan.modulatedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.pan.modulatedValue.displayedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.pan.exists"
  }, {
    "event": "arrangerCursorClip.getTrack.pan.displayedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.mute"
  }, {
    "event": "arrangerCursorClip.getTrack.solo"
  }, {
    "event": "arrangerCursorClip.getTrack.volume.name"
  }, {
    "event": "arrangerCursorClip.getTrack.volume.value"
  }, {
    "event": "arrangerCursorClip.getTrack.volume.value.displayedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.volume.modulatedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.volume.modulatedValue.displayedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.volume.exists"
  }, {
    "event": "arrangerCursorClip.getTrack.volume.displayedValue"
  }, {
    "event": "arrangerCursorClip.getTrack.playingNotes"
  }, {
    "event": "arrangerCursorClip.getTrack.isMutedBySolo"
  }, {
    "event": "arrangerCursorClip.getTrack.name"
  }, {
    "event": "arrangerCursorClip.getTrack.exists"
  }, {
    "event": "arrangerCursorClip.getTrack.vuMeter"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.color"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.isSelected"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.isPlaying"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.isPlaybackQueued"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.isStopQueued"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.isRecordingQueued"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.isRecording"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.hasContent"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.name"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.sceneIndex"
  }, {
    "event": "arrangerCursorClip.clipLauncherSlot.exists"
  }, {
    "event": "arrangerCursorClip.canScrollStepsBackwards"
  }, {
    "event": "arrangerCursorClip.canScrollStepsForwards"
  }, {
    "event": "arrangerCursorClip.exists"
  }, {
    "event": "launcherCursorClip.color"
  }, {
    "event": "launcherCursorClip.getShuffle"
  }, {
    "event": "launcherCursorClip.launchMode"
  }, {
    "event": "launcherCursorClip.launchQuantization"
  }, {
    "event": "launcherCursorClip.getAccent"
  }, {
    "event": "launcherCursorClip.getAccent.displayedValue"
  }, {
    "event": "launcherCursorClip.isLoopEnabled"
  }, {
    "event": "launcherCursorClip.useLoopStartAsQuantizationReference"
  }, {
    "event": "launcherCursorClip.canScrollKeysDown"
  }, {
    "event": "launcherCursorClip.canScrollKeysUp"
  }, {
    "event": "launcherCursorClip.getLoopStart"
  }, {
    "event": "launcherCursorClip.getPlayStart"
  }, {
    "event": "launcherCursorClip.playingStep"
  }, {
    "event": "launcherCursorClip.getPlayStop"
  }, {
    "event": "launcherCursorClip.getLoopLength"
  }, {
    "event": "launcherCursorClip.getTrack.position"
  }, {
    "event": "launcherCursorClip.getTrack.canHoldAudioData"
  }, {
    "event": "launcherCursorClip.getTrack.autoMonitor"
  }, {
    "event": "launcherCursorClip.getTrack.canHoldNoteData"
  }, {
    "event": "launcherCursorClip.getTrack.getIsPreFader"
  }, {
    "event": "launcherCursorClip.getTrack.trackType"
  }, {
    "event": "launcherCursorClip.getTrack.isQueuedForStop"
  }, {
    "event": "launcherCursorClip.getTrack.sourceSelector.hasNoteInputSelected"
  }, {
    "event": "launcherCursorClip.getTrack.sourceSelector.hasAudioInputSelected"
  }, {
    "event": "launcherCursorClip.getTrack.sourceSelector.exists"
  }, {
    "event": "launcherCursorClip.getTrack.isStopped"
  }, {
    "event": "launcherCursorClip.getTrack.arm"
  }, {
    "event": "launcherCursorClip.getTrack.monitor"
  }, {
    "event": "launcherCursorClip.getTrack.crossFadeMode"
  }, {
    "event": "launcherCursorClip.getTrack.isGroup"
  }, {
    "event": "launcherCursorClip.getTrack.color"
  }, {
    "event": "launcherCursorClip.getTrack.isActivated"
  }, {
    "event": "launcherCursorClip.getTrack.pan.name"
  }, {
    "event": "launcherCursorClip.getTrack.pan.value"
  }, {
    "event": "launcherCursorClip.getTrack.pan.value.displayedValue"
  }, {
    "event": "launcherCursorClip.getTrack.pan.modulatedValue"
  }, {
    "event": "launcherCursorClip.getTrack.pan.modulatedValue.displayedValue"
  }, {
    "event": "launcherCursorClip.getTrack.pan.exists"
  }, {
    "event": "launcherCursorClip.getTrack.pan.displayedValue"
  }, {
    "event": "launcherCursorClip.getTrack.mute"
  }, {
    "event": "launcherCursorClip.getTrack.solo"
  }, {
    "event": "launcherCursorClip.getTrack.volume.name"
  }, {
    "event": "launcherCursorClip.getTrack.volume.value"
  }, {
    "event": "launcherCursorClip.getTrack.volume.value.displayedValue"
  }, {
    "event": "launcherCursorClip.getTrack.volume.modulatedValue"
  }, {
    "event": "launcherCursorClip.getTrack.volume.modulatedValue.displayedValue"
  }, {
    "event": "launcherCursorClip.getTrack.volume.exists"
  }, {
    "event": "launcherCursorClip.getTrack.volume.displayedValue"
  }, {
    "event": "launcherCursorClip.getTrack.playingNotes"
  }, {
    "event": "launcherCursorClip.getTrack.isMutedBySolo"
  }, {
    "event": "launcherCursorClip.getTrack.name"
  }, {
    "event": "launcherCursorClip.getTrack.exists"
  }, {
    "event": "launcherCursorClip.getTrack.vuMeter"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.color"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.isSelected"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.isPlaying"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.isPlaybackQueued"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.isStopQueued"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.isRecordingQueued"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.isRecording"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.hasContent"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.name"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.sceneIndex"
  }, {
    "event": "launcherCursorClip.clipLauncherSlot.exists"
  }, {
    "event": "launcherCursorClip.canScrollStepsBackwards"
  }, {
    "event": "launcherCursorClip.canScrollStepsForwards"
  }, {
    "event": "launcherCursorClip.exists"
  }, {
    "event": "cursorTrack.color"
  }, {
    "event": "cursorTrack.isActivated"
  }, {
    "event": "cursorTrack.pan.name"
  }, {
    "event": "cursorTrack.pan.value"
  }, {
    "event": "cursorTrack.pan.value.displayedValue"
  }, {
    "event": "cursorTrack.pan.modulatedValue"
  }, {
    "event": "cursorTrack.pan.modulatedValue.displayedValue"
  }, {
    "event": "cursorTrack.pan.exists"
  }, {
    "event": "cursorTrack.pan.displayedValue"
  }, {
    "event": "cursorTrack.mute"
  }, {
    "event": "cursorTrack.solo"
  }, {
    "event": "cursorTrack.volume.name"
  }, {
    "event": "cursorTrack.volume.value"
  }, {
    "event": "cursorTrack.volume.value.displayedValue"
  }, {
    "event": "cursorTrack.volume.modulatedValue"
  }, {
    "event": "cursorTrack.volume.modulatedValue.displayedValue"
  }, {
    "event": "cursorTrack.volume.exists"
  }, {
    "event": "cursorTrack.volume.displayedValue"
  }, {
    "event": "cursorTrack.playingNotes"
  }, {
    "event": "cursorTrack.isMutedBySolo"
  }, {
    "event": "cursorTrack.name"
  }, {
    "event": "cursorTrack.exists"
  }, {
    "event": "cursorTrack.hasNext"
  }, {
    "event": "cursorTrack.hasPrevious"
  }, {
    "event": "cursorTrack.isPinned"
  }, {
    "event": "cursorTrack.position"
  }, {
    "event": "cursorTrack.canHoldAudioData"
  }, {
    "event": "cursorTrack.autoMonitor"
  }, {
    "event": "cursorTrack.canHoldNoteData"
  }, {
    "event": "cursorTrack.getIsPreFader"
  }, {
    "event": "cursorTrack.trackType"
  }, {
    "event": "cursorTrack.isQueuedForStop"
  }, {
    "event": "cursorTrack.sourceSelector.hasNoteInputSelected"
  }, {
    "event": "cursorTrack.sourceSelector.hasAudioInputSelected"
  }, {
    "event": "cursorTrack.sourceSelector.exists"
  }, {
    "event": "cursorTrack.isStopped"
  }, {
    "event": "cursorTrack.arm"
  }, {
    "event": "cursorTrack.monitor"
  }, {
    "event": "cursorTrack.crossFadeMode"
  }, {
    "event": "cursorTrack.isGroup"
  }, {
    "event": "cursorTrack.vuMeter"
  }, {
    "event": "siblingsTrackBank.canScrollChannelsUp"
  }, {
    "event": "siblingsTrackBank.canScrollChannelsDown"
  }, {
    "event": "siblingsTrackBank.channelCount"
  }, {
    "event": "siblingsTrackBank.itemCount"
  }, {
    "event": "siblingsTrackBank.getItemAt.position",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.canHoldAudioData",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.autoMonitor",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.canHoldNoteData",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.getIsPreFader",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.trackType",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.isQueuedForStop",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.sourceSelector.exists",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.isStopped",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.arm",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.monitor",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.crossFadeMode",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.isGroup",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.color",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.isActivated",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.pan.name",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.pan.value",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.pan.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.pan.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.pan.exists",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.pan.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.mute",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.solo",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.volume.name",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.volume.value",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.volume.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.volume.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.volume.exists",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.volume.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.playingNotes",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.isMutedBySolo",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.name",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.exists",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.getItemAt.vuMeter",
    "bankDimension": [8]
  }, {
    "event": "siblingsTrackBank.cursorIndex"
  }, {
    "event": "siblingsTrackBank.exists"
  }, {
    "event": "siblingsTrackBank.canScrollBackwards"
  }, {
    "event": "siblingsTrackBank.canScrollForwards"
  }, {
    "event": "siblingsTrackBank.scrollPosition"
  }, {
    "event": "childTrackBank.canScrollChannelsUp"
  }, {
    "event": "childTrackBank.canScrollChannelsDown"
  }, {
    "event": "childTrackBank.channelCount"
  }, {
    "event": "childTrackBank.itemCount"
  }, {
    "event": "childTrackBank.getItemAt.position",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.canHoldAudioData",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.autoMonitor",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.canHoldNoteData",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.getIsPreFader",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.trackType",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.isQueuedForStop",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.sourceSelector.exists",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.isStopped",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.arm",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.monitor",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.crossFadeMode",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.isGroup",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.color",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.isActivated",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.pan.name",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.pan.value",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.pan.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.pan.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.pan.exists",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.pan.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.mute",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.solo",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.volume.name",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.volume.value",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.volume.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.volume.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.volume.exists",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.volume.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.playingNotes",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.isMutedBySolo",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.name",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.exists",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.getItemAt.vuMeter",
    "bankDimension": [8]
  }, {
    "event": "childTrackBank.cursorIndex"
  }, {
    "event": "childTrackBank.exists"
  }, {
    "event": "childTrackBank.canScrollBackwards"
  }, {
    "event": "childTrackBank.canScrollForwards"
  }, {
    "event": "childTrackBank.scrollPosition"
  }, {
    "event": "cursorDevice.channel.color"
  }, {
    "event": "cursorDevice.channel.isActivated"
  }, {
    "event": "cursorDevice.channel.pan.name"
  }, {
    "event": "cursorDevice.channel.pan.value"
  }, {
    "event": "cursorDevice.channel.pan.value.displayedValue"
  }, {
    "event": "cursorDevice.channel.pan.modulatedValue"
  }, {
    "event": "cursorDevice.channel.pan.modulatedValue.displayedValue"
  }, {
    "event": "cursorDevice.channel.pan.exists"
  }, {
    "event": "cursorDevice.channel.pan.displayedValue"
  }, {
    "event": "cursorDevice.channel.mute"
  }, {
    "event": "cursorDevice.channel.solo"
  }, {
    "event": "cursorDevice.channel.volume.name"
  }, {
    "event": "cursorDevice.channel.volume.value"
  }, {
    "event": "cursorDevice.channel.volume.value.displayedValue"
  }, {
    "event": "cursorDevice.channel.volume.modulatedValue"
  }, {
    "event": "cursorDevice.channel.volume.modulatedValue.displayedValue"
  }, {
    "event": "cursorDevice.channel.volume.exists"
  }, {
    "event": "cursorDevice.channel.volume.displayedValue"
  }, {
    "event": "cursorDevice.channel.playingNotes"
  }, {
    "event": "cursorDevice.channel.isMutedBySolo"
  }, {
    "event": "cursorDevice.channel.name"
  }, {
    "event": "cursorDevice.channel.exists"
  }, {
    "event": "cursorDevice.channel.vuMeter"
  }, {
    "event": "cursorDevice.hasNext"
  }, {
    "event": "cursorDevice.hasPrevious"
  }, {
    "event": "cursorDevice.name"
  }, {
    "event": "cursorDevice.position"
  }, {
    "event": "cursorDevice.isEnabled"
  }, {
    "event": "cursorDevice.hasLayers"
  }, {
    "event": "cursorDevice.getCursorSlot.name"
  }, {
    "event": "cursorDevice.getCursorSlot.exists"
  }, {
    "event": "cursorDevice.sampleName"
  }, {
    "event": "cursorDevice.hasSlots"
  }, {
    "event": "cursorDevice.slotNames"
  }, {
    "event": "cursorDevice.isNested"
  }, {
    "event": "cursorDevice.isExpanded"
  }, {
    "event": "cursorDevice.isPlugin"
  }, {
    "event": "cursorDevice.isRemoteControlsSectionVisible"
  }, {
    "event": "cursorDevice.presetCategory"
  }, {
    "event": "cursorDevice.presetCreator"
  }, {
    "event": "cursorDevice.presetName"
  }, {
    "event": "cursorDevice.deviceChain.name"
  }, {
    "event": "cursorDevice.deviceChain.exists"
  }, {
    "event": "cursorDevice.isWindowOpen"
  }, {
    "event": "cursorDevice.hasDrumPads"
  }, {
    "event": "cursorDevice.exists"
  }, {
    "event": "cursorDevice.isPinned"
  }, {
    "event": "cursorDevice.observedDirectParameterNormalizedValue"
  }, {
    "event": "cursorDevice.observedDirectParameterDisplayValue"
  }, {
    "event": "cursorDevice.directParameterIdArray"
  }, {
    "event": "cursorDevice.observedDirectParameterName"
  }, {
    "event": "chainSelector.chainCount"
  }, {
    "event": "chainSelector.activeChain.color"
  }, {
    "event": "chainSelector.activeChain.isActivated"
  }, {
    "event": "chainSelector.activeChain.pan.name"
  }, {
    "event": "chainSelector.activeChain.pan.value"
  }, {
    "event": "chainSelector.activeChain.pan.value.displayedValue"
  }, {
    "event": "chainSelector.activeChain.pan.modulatedValue"
  }, {
    "event": "chainSelector.activeChain.pan.modulatedValue.displayedValue"
  }, {
    "event": "chainSelector.activeChain.pan.exists"
  }, {
    "event": "chainSelector.activeChain.pan.displayedValue"
  }, {
    "event": "chainSelector.activeChain.mute"
  }, {
    "event": "chainSelector.activeChain.solo"
  }, {
    "event": "chainSelector.activeChain.volume.name"
  }, {
    "event": "chainSelector.activeChain.volume.value"
  }, {
    "event": "chainSelector.activeChain.volume.value.displayedValue"
  }, {
    "event": "chainSelector.activeChain.volume.modulatedValue"
  }, {
    "event": "chainSelector.activeChain.volume.modulatedValue.displayedValue"
  }, {
    "event": "chainSelector.activeChain.volume.exists"
  }, {
    "event": "chainSelector.activeChain.volume.displayedValue"
  }, {
    "event": "chainSelector.activeChain.playingNotes"
  }, {
    "event": "chainSelector.activeChain.isMutedBySolo"
  }, {
    "event": "chainSelector.activeChain.name"
  }, {
    "event": "chainSelector.activeChain.exists"
  }, {
    "event": "chainSelector.activeChain.vuMeter"
  }, {
    "event": "chainSelector.activeChainIndex"
  }, {
    "event": "chainSelector.hasNext"
  }, {
    "event": "chainSelector.hasPrevious"
  }, {
    "event": "chainSelector.exists"
  }, {
    "event": "cursorDeviceLayer.color"
  }, {
    "event": "cursorDeviceLayer.isActivated"
  }, {
    "event": "cursorDeviceLayer.pan.name"
  }, {
    "event": "cursorDeviceLayer.pan.value"
  }, {
    "event": "cursorDeviceLayer.pan.value.displayedValue"
  }, {
    "event": "cursorDeviceLayer.pan.modulatedValue"
  }, {
    "event": "cursorDeviceLayer.pan.modulatedValue.displayedValue"
  }, {
    "event": "cursorDeviceLayer.pan.exists"
  }, {
    "event": "cursorDeviceLayer.pan.displayedValue"
  }, {
    "event": "cursorDeviceLayer.mute"
  }, {
    "event": "cursorDeviceLayer.solo"
  }, {
    "event": "cursorDeviceLayer.volume.name"
  }, {
    "event": "cursorDeviceLayer.volume.value"
  }, {
    "event": "cursorDeviceLayer.volume.value.displayedValue"
  }, {
    "event": "cursorDeviceLayer.volume.modulatedValue"
  }, {
    "event": "cursorDeviceLayer.volume.modulatedValue.displayedValue"
  }, {
    "event": "cursorDeviceLayer.volume.exists"
  }, {
    "event": "cursorDeviceLayer.volume.displayedValue"
  }, {
    "event": "cursorDeviceLayer.playingNotes"
  }, {
    "event": "cursorDeviceLayer.isMutedBySolo"
  }, {
    "event": "cursorDeviceLayer.name"
  }, {
    "event": "cursorDeviceLayer.exists"
  }, {
    "event": "cursorDeviceLayer.hasNext"
  }, {
    "event": "cursorDeviceLayer.hasPrevious"
  }, {
    "event": "cursorDeviceLayer.vuMeter"
  }, {
    "event": "cursorRemoteControlsPage.pageCount"
  }, {
    "event": "cursorRemoteControlsPage.pageNames"
  }, {
    "event": "cursorRemoteControlsPage.selectedPageIndex"
  }, {
    "event": "cursorRemoteControlsPage.hasNext"
  }, {
    "event": "cursorRemoteControlsPage.hasPrevious"
  }, {
    "event": "cursorRemoteControlsPage.getName"
  }, {
    "event": "cursorRemoteControlsPage.getParameter.name",
    "bankDimension": [8]
  }, {
    "event": "cursorRemoteControlsPage.getParameter.value",
    "bankDimension": [8]
  }, {
    "event": "cursorRemoteControlsPage.getParameter.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "cursorRemoteControlsPage.getParameter.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "cursorRemoteControlsPage.getParameter.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "cursorRemoteControlsPage.getParameter.exists",
    "bankDimension": [8]
  }, {
    "event": "cursorRemoteControlsPage.getParameter.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.canScrollChannelsUp"
  }, {
    "event": "deviceLayerBank.canScrollChannelsDown"
  }, {
    "event": "deviceLayerBank.channelCount"
  }, {
    "event": "deviceLayerBank.itemCount"
  }, {
    "event": "deviceLayerBank.getItemAt.color",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.isActivated",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.pan.name",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.pan.value",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.pan.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.pan.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.pan.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.pan.exists",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.pan.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.mute",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.solo",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.volume.name",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.volume.value",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.volume.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.volume.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.volume.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.volume.exists",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.volume.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.playingNotes",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.isMutedBySolo",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.name",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.exists",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.getItemAt.vuMeter",
    "bankDimension": [8]
  }, {
    "event": "deviceLayerBank.cursorIndex"
  }, {
    "event": "deviceLayerBank.exists"
  }, {
    "event": "deviceLayerBank.canScrollBackwards"
  }, {
    "event": "deviceLayerBank.canScrollForwards"
  }, {
    "event": "deviceLayerBank.scrollPosition"
  }, {
    "event": "drumPadBank.hasMutedPads"
  }, {
    "event": "drumPadBank.hasSoloedPads"
  }, {
    "event": "drumPadBank.canScrollChannelsUp"
  }, {
    "event": "drumPadBank.canScrollChannelsDown"
  }, {
    "event": "drumPadBank.channelCount"
  }, {
    "event": "drumPadBank.itemCount"
  }, {
    "event": "drumPadBank.getItemAt.color",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.isActivated",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.pan.name",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.pan.value",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.pan.value.displayedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.pan.modulatedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.pan.modulatedValue.displayedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.pan.exists",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.pan.displayedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.mute",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.solo",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.volume.name",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.volume.value",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.volume.value.displayedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.volume.modulatedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.volume.modulatedValue.displayedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.volume.exists",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.volume.displayedValue",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.playingNotes",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.isMutedBySolo",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.name",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.exists",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.getItemAt.vuMeter",
    "bankDimension": [16]
  }, {
    "event": "drumPadBank.cursorIndex"
  }, {
    "event": "drumPadBank.exists"
  }, {
    "event": "drumPadBank.canScrollBackwards"
  }, {
    "event": "drumPadBank.canScrollForwards"
  }, {
    "event": "drumPadBank.scrollPosition"
  }, {
    "event": "siblingsDeviceBank.getDeviceChain.name"
  }, {
    "event": "siblingsDeviceBank.getDeviceChain.exists"
  }, {
    "event": "siblingsDeviceBank.itemCount"
  }, {
    "event": "siblingsDeviceBank.getItemAt.name",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.position",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.isEnabled",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.hasLayers",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.getCursorSlot.name",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.getCursorSlot.exists",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.sampleName",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.hasSlots",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.slotNames",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.isNested",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.isExpanded",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.isPlugin",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.isRemoteControlsSectionVisible",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.presetCategory",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.presetCreator",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.presetName",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.deviceChain.name",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.deviceChain.exists",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.isWindowOpen",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.hasDrumPads",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.getItemAt.exists",
    "bankDimension": [4]
  }, {
    "event": "siblingsDeviceBank.cursorIndex"
  }, {
    "event": "siblingsDeviceBank.exists"
  }, {
    "event": "siblingsDeviceBank.canScrollBackwards"
  }, {
    "event": "siblingsDeviceBank.canScrollForwards"
  }, {
    "event": "siblingsDeviceBank.scrollPosition"
  }, {
    "event": "chainDeviceBank.getDeviceChain.name"
  }, {
    "event": "chainDeviceBank.getDeviceChain.exists"
  }, {
    "event": "chainDeviceBank.itemCount"
  }, {
    "event": "chainDeviceBank.getItemAt.name",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.position",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.isEnabled",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.hasLayers",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.getCursorSlot.name",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.getCursorSlot.exists",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.sampleName",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.hasSlots",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.slotNames",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.isNested",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.isExpanded",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.isPlugin",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.isRemoteControlsSectionVisible",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.presetCategory",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.presetCreator",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.presetName",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.deviceChain.name",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.deviceChain.exists",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.isWindowOpen",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.hasDrumPads",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.getItemAt.exists",
    "bankDimension": [4]
  }, {
    "event": "chainDeviceBank.cursorIndex"
  }, {
    "event": "chainDeviceBank.exists"
  }, {
    "event": "chainDeviceBank.canScrollBackwards"
  }, {
    "event": "chainDeviceBank.canScrollForwards"
  }, {
    "event": "chainDeviceBank.scrollPosition"
  }, {
    "event": "sceneBank.itemCount"
  }, {
    "event": "sceneBank.getItemAt.name",
    "bankDimension": [8]
  }, {
    "event": "sceneBank.getItemAt.clipCount",
    "bankDimension": [8]
  }, {
    "event": "sceneBank.getItemAt.color",
    "bankDimension": [8]
  }, {
    "event": "sceneBank.getItemAt.sceneIndex",
    "bankDimension": [8]
  }, {
    "event": "sceneBank.getItemAt.exists",
    "bankDimension": [8]
  }, {
    "event": "sceneBank.cursorIndex"
  }, {
    "event": "sceneBank.exists"
  }, {
    "event": "sceneBank.canScrollBackwards"
  }, {
    "event": "sceneBank.canScrollForwards"
  }, {
    "event": "sceneBank.scrollPosition"
  }, {
    "event": "mainTrackBank.canScrollChannelsUp"
  }, {
    "event": "mainTrackBank.canScrollChannelsDown"
  }, {
    "event": "mainTrackBank.channelCount"
  }, {
    "event": "mainTrackBank.itemCount"
  }, {
    "event": "mainTrackBank.getItemAt.position",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.canHoldAudioData",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.autoMonitor",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.canHoldNoteData",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.getIsPreFader",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.trackType",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.isQueuedForStop",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.sourceSelector.exists",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.isStopped",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.arm",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.monitor",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.crossFadeMode",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.isGroup",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.color",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.isActivated",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.pan.name",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.pan.value",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.pan.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.pan.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.pan.exists",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.pan.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.mute",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.solo",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.volume.name",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.volume.value",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.volume.value.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.volume.modulatedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.volume.exists",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.volume.displayedValue",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.playingNotes",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.isMutedBySolo",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.name",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.exists",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.getItemAt.vuMeter",
    "bankDimension": [8]
  }, {
    "event": "mainTrackBank.cursorIndex"
  }, {
    "event": "mainTrackBank.exists"
  }, {
    "event": "mainTrackBank.canScrollBackwards"
  }, {
    "event": "mainTrackBank.canScrollForwards"
  }, {
    "event": "mainTrackBank.scrollPosition"
  }, {
    "event": "effectTrackBank.canScrollChannelsUp"
  }, {
    "event": "effectTrackBank.canScrollChannelsDown"
  }, {
    "event": "effectTrackBank.channelCount"
  }, {
    "event": "effectTrackBank.itemCount"
  }, {
    "event": "effectTrackBank.getItemAt.position",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.canHoldAudioData",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.autoMonitor",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.canHoldNoteData",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.getIsPreFader",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.trackType",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.isQueuedForStop",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.sourceSelector.hasNoteInputSelected",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.sourceSelector.hasAudioInputSelected",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.sourceSelector.exists",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.isStopped",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.arm",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.monitor",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.crossFadeMode",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.isGroup",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.color",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.isActivated",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.pan.name",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.pan.value",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.pan.value.displayedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.pan.modulatedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.pan.modulatedValue.displayedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.pan.exists",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.pan.displayedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.mute",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.solo",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.volume.name",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.volume.value",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.volume.value.displayedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.volume.modulatedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.volume.modulatedValue.displayedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.volume.exists",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.volume.displayedValue",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.playingNotes",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.isMutedBySolo",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.name",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.exists",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.getItemAt.vuMeter",
    "bankDimension": [2]
  }, {
    "event": "effectTrackBank.cursorIndex"
  }, {
    "event": "effectTrackBank.exists"
  }, {
    "event": "effectTrackBank.canScrollBackwards"
  }, {
    "event": "effectTrackBank.canScrollForwards"
  }, {
    "event": "effectTrackBank.scrollPosition"
  }, {
    "event": "masterTrack.position"
  }, {
    "event": "masterTrack.canHoldAudioData"
  }, {
    "event": "masterTrack.autoMonitor"
  }, {
    "event": "masterTrack.canHoldNoteData"
  }, {
    "event": "masterTrack.getIsPreFader"
  }, {
    "event": "masterTrack.trackType"
  }, {
    "event": "masterTrack.isQueuedForStop"
  }, {
    "event": "masterTrack.sourceSelector.hasNoteInputSelected"
  }, {
    "event": "masterTrack.sourceSelector.hasAudioInputSelected"
  }, {
    "event": "masterTrack.sourceSelector.exists"
  }, {
    "event": "masterTrack.isStopped"
  }, {
    "event": "masterTrack.arm"
  }, {
    "event": "masterTrack.monitor"
  }, {
    "event": "masterTrack.crossFadeMode"
  }, {
    "event": "masterTrack.isGroup"
  }, {
    "event": "masterTrack.color"
  }, {
    "event": "masterTrack.isActivated"
  }, {
    "event": "masterTrack.pan.name"
  }, {
    "event": "masterTrack.pan.value"
  }, {
    "event": "masterTrack.pan.value.displayedValue"
  }, {
    "event": "masterTrack.pan.modulatedValue"
  }, {
    "event": "masterTrack.pan.modulatedValue.displayedValue"
  }, {
    "event": "masterTrack.pan.exists"
  }, {
    "event": "masterTrack.pan.displayedValue"
  }, {
    "event": "masterTrack.mute"
  }, {
    "event": "masterTrack.solo"
  }, {
    "event": "masterTrack.volume.name"
  }, {
    "event": "masterTrack.volume.value"
  }, {
    "event": "masterTrack.volume.value.displayedValue"
  }, {
    "event": "masterTrack.volume.modulatedValue"
  }, {
    "event": "masterTrack.volume.modulatedValue.displayedValue"
  }, {
    "event": "masterTrack.volume.exists"
  }, {
    "event": "masterTrack.volume.displayedValue"
  }, {
    "event": "masterTrack.playingNotes"
  }, {
    "event": "masterTrack.isMutedBySolo"
  }, {
    "event": "masterTrack.name"
  }, {
    "event": "masterTrack.exists"
  }, {
    "event": "masterTrack.vuMeter"
  }, {
    "event": "browser.shouldAudition"
  }, {
    "event": "browser.locationColumn.name"
  }, {
    "event": "browser.locationColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.locationColumn.getWildcardItem.name"
  }, {
    "event": "browser.locationColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.locationColumn.getWildcardItem.exists"
  }, {
    "event": "browser.locationColumn.entryCount"
  }, {
    "event": "browser.locationColumn.exists"
  }, {
    "event": "browser.tagColumn.name"
  }, {
    "event": "browser.tagColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.tagColumn.getWildcardItem.name"
  }, {
    "event": "browser.tagColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.tagColumn.getWildcardItem.exists"
  }, {
    "event": "browser.tagColumn.entryCount"
  }, {
    "event": "browser.tagColumn.exists"
  }, {
    "event": "browser.contentTypeNames"
  }, {
    "event": "browser.deviceColumn.name"
  }, {
    "event": "browser.deviceColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.deviceColumn.getWildcardItem.name"
  }, {
    "event": "browser.deviceColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.deviceColumn.getWildcardItem.exists"
  }, {
    "event": "browser.deviceColumn.entryCount"
  }, {
    "event": "browser.deviceColumn.exists"
  }, {
    "event": "browser.fileTypeColumn.name"
  }, {
    "event": "browser.fileTypeColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.fileTypeColumn.getWildcardItem.name"
  }, {
    "event": "browser.fileTypeColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.fileTypeColumn.getWildcardItem.exists"
  }, {
    "event": "browser.fileTypeColumn.entryCount"
  }, {
    "event": "browser.fileTypeColumn.exists"
  }, {
    "event": "browser.canAudition"
  }, {
    "event": "browser.title"
  }, {
    "event": "browser.selectedContentTypeName"
  }, {
    "event": "browser.smartCollectionColumn.name"
  }, {
    "event": "browser.smartCollectionColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.smartCollectionColumn.getWildcardItem.name"
  }, {
    "event": "browser.smartCollectionColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.smartCollectionColumn.getWildcardItem.exists"
  }, {
    "event": "browser.smartCollectionColumn.entryCount"
  }, {
    "event": "browser.smartCollectionColumn.exists"
  }, {
    "event": "browser.deviceTypeColumn.name"
  }, {
    "event": "browser.deviceTypeColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.deviceTypeColumn.getWildcardItem.name"
  }, {
    "event": "browser.deviceTypeColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.deviceTypeColumn.getWildcardItem.exists"
  }, {
    "event": "browser.deviceTypeColumn.entryCount"
  }, {
    "event": "browser.deviceTypeColumn.exists"
  }, {
    "event": "browser.categoryColumn.name"
  }, {
    "event": "browser.categoryColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.categoryColumn.getWildcardItem.name"
  }, {
    "event": "browser.categoryColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.categoryColumn.getWildcardItem.exists"
  }, {
    "event": "browser.categoryColumn.entryCount"
  }, {
    "event": "browser.categoryColumn.exists"
  }, {
    "event": "browser.resultsColumn.entryCount"
  }, {
    "event": "browser.resultsColumn.exists"
  }, {
    "event": "browser.creatorColumn.name"
  }, {
    "event": "browser.creatorColumn.getWildcardItem.hitCount"
  }, {
    "event": "browser.creatorColumn.getWildcardItem.name"
  }, {
    "event": "browser.creatorColumn.getWildcardItem.isSelected"
  }, {
    "event": "browser.creatorColumn.getWildcardItem.exists"
  }, {
    "event": "browser.creatorColumn.entryCount"
  }, {
    "event": "browser.creatorColumn.exists"
  }, {
    "event": "browser.selectedContentTypeIndex"
  }, {
    "event": "browser.exists"
  }, {
    "event": "browser.smartCollectionColumn.cursorItem.hitCount"
  }, {
    "event": "browser.smartCollectionColumn.cursorItem.name"
  }, {
    "event": "browser.smartCollectionColumn.cursorItem.isSelected"
  }, {
    "event": "browser.smartCollectionColumn.cursorItem.exists"
  }, {
    "event": "browser.smartCollectionColumn.itemBank.itemCount"
  }, {
    "event": "browser.smartCollectionColumn.itemBank.getItemAt.name",
    "bankDimension": [16]
  }, {
    "event": "browser.smartCollectionColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [16]
  }, {
    "event": "browser.smartCollectionColumn.itemBank.getItemAt.exists",
    "bankDimension": [16]
  }, {
    "event": "browser.smartCollectionColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.smartCollectionColumn.itemBank.exists"
  }, {
    "event": "browser.smartCollectionColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.smartCollectionColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.smartCollectionColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.locationColumn.cursorItem.hitCount"
  }, {
    "event": "browser.locationColumn.cursorItem.name"
  }, {
    "event": "browser.locationColumn.cursorItem.isSelected"
  }, {
    "event": "browser.locationColumn.cursorItem.exists"
  }, {
    "event": "browser.locationColumn.itemBank.itemCount"
  }, {
    "event": "browser.locationColumn.itemBank.getItemAt.name",
    "bankDimension": [32]
  }, {
    "event": "browser.locationColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [32]
  }, {
    "event": "browser.locationColumn.itemBank.getItemAt.exists",
    "bankDimension": [32]
  }, {
    "event": "browser.locationColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.locationColumn.itemBank.exists"
  }, {
    "event": "browser.locationColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.locationColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.locationColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.deviceColumn.cursorItem.hitCount"
  }, {
    "event": "browser.deviceColumn.cursorItem.name"
  }, {
    "event": "browser.deviceColumn.cursorItem.isSelected"
  }, {
    "event": "browser.deviceColumn.cursorItem.exists"
  }, {
    "event": "browser.deviceColumn.itemBank.itemCount"
  }, {
    "event": "browser.deviceColumn.itemBank.getItemAt.name",
    "bankDimension": [32]
  }, {
    "event": "browser.deviceColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [32]
  }, {
    "event": "browser.deviceColumn.itemBank.getItemAt.exists",
    "bankDimension": [32]
  }, {
    "event": "browser.deviceColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.deviceColumn.itemBank.exists"
  }, {
    "event": "browser.deviceColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.deviceColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.deviceColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.categoryColumn.cursorItem.hitCount"
  }, {
    "event": "browser.categoryColumn.cursorItem.name"
  }, {
    "event": "browser.categoryColumn.cursorItem.isSelected"
  }, {
    "event": "browser.categoryColumn.cursorItem.exists"
  }, {
    "event": "browser.categoryColumn.itemBank.itemCount"
  }, {
    "event": "browser.categoryColumn.itemBank.getItemAt.name",
    "bankDimension": [32]
  }, {
    "event": "browser.categoryColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [32]
  }, {
    "event": "browser.categoryColumn.itemBank.getItemAt.exists",
    "bankDimension": [32]
  }, {
    "event": "browser.categoryColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.categoryColumn.itemBank.exists"
  }, {
    "event": "browser.categoryColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.categoryColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.categoryColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.tagColumn.cursorItem.hitCount"
  }, {
    "event": "browser.tagColumn.cursorItem.name"
  }, {
    "event": "browser.tagColumn.cursorItem.isSelected"
  }, {
    "event": "browser.tagColumn.cursorItem.exists"
  }, {
    "event": "browser.tagColumn.itemBank.itemCount"
  }, {
    "event": "browser.tagColumn.itemBank.getItemAt.name",
    "bankDimension": [32]
  }, {
    "event": "browser.tagColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [32]
  }, {
    "event": "browser.tagColumn.itemBank.getItemAt.exists",
    "bankDimension": [32]
  }, {
    "event": "browser.tagColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.tagColumn.itemBank.exists"
  }, {
    "event": "browser.tagColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.tagColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.tagColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.deviceTypeColumn.cursorItem.hitCount"
  }, {
    "event": "browser.deviceTypeColumn.cursorItem.name"
  }, {
    "event": "browser.deviceTypeColumn.cursorItem.isSelected"
  }, {
    "event": "browser.deviceTypeColumn.cursorItem.exists"
  }, {
    "event": "browser.deviceTypeColumn.itemBank.itemCount"
  }, {
    "event": "browser.deviceTypeColumn.itemBank.getItemAt.name",
    "bankDimension": [16]
  }, {
    "event": "browser.deviceTypeColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [16]
  }, {
    "event": "browser.deviceTypeColumn.itemBank.getItemAt.exists",
    "bankDimension": [16]
  }, {
    "event": "browser.deviceTypeColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.deviceTypeColumn.itemBank.exists"
  }, {
    "event": "browser.deviceTypeColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.deviceTypeColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.deviceTypeColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.fileTypeColumn.cursorItem.hitCount"
  }, {
    "event": "browser.fileTypeColumn.cursorItem.name"
  }, {
    "event": "browser.fileTypeColumn.cursorItem.isSelected"
  }, {
    "event": "browser.fileTypeColumn.cursorItem.exists"
  }, {
    "event": "browser.fileTypeColumn.itemBank.itemCount"
  }, {
    "event": "browser.fileTypeColumn.itemBank.getItemAt.name",
    "bankDimension": [16]
  }, {
    "event": "browser.fileTypeColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [16]
  }, {
    "event": "browser.fileTypeColumn.itemBank.getItemAt.exists",
    "bankDimension": [16]
  }, {
    "event": "browser.fileTypeColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.fileTypeColumn.itemBank.exists"
  }, {
    "event": "browser.fileTypeColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.fileTypeColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.fileTypeColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.creatorColumn.cursorItem.hitCount"
  }, {
    "event": "browser.creatorColumn.cursorItem.name"
  }, {
    "event": "browser.creatorColumn.cursorItem.isSelected"
  }, {
    "event": "browser.creatorColumn.cursorItem.exists"
  }, {
    "event": "browser.creatorColumn.itemBank.itemCount"
  }, {
    "event": "browser.creatorColumn.itemBank.getItemAt.name",
    "bankDimension": [32]
  }, {
    "event": "browser.creatorColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [32]
  }, {
    "event": "browser.creatorColumn.itemBank.getItemAt.exists",
    "bankDimension": [32]
  }, {
    "event": "browser.creatorColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.creatorColumn.itemBank.exists"
  }, {
    "event": "browser.creatorColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.creatorColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.creatorColumn.itemBank.scrollPosition"
  }, {
    "event": "browser.resultsColumn.cursorItem.name"
  }, {
    "event": "browser.resultsColumn.cursorItem.isSelected"
  }, {
    "event": "browser.resultsColumn.cursorItem.exists"
  }, {
    "event": "browser.resultsColumn.itemBank.itemCount"
  }, {
    "event": "browser.resultsColumn.itemBank.getItemAt.name",
    "bankDimension": [32]
  }, {
    "event": "browser.resultsColumn.itemBank.getItemAt.isSelected",
    "bankDimension": [32]
  }, {
    "event": "browser.resultsColumn.itemBank.getItemAt.exists",
    "bankDimension": [32]
  }, {
    "event": "browser.resultsColumn.itemBank.cursorIndex"
  }, {
    "event": "browser.resultsColumn.itemBank.exists"
  }, {
    "event": "browser.resultsColumn.itemBank.canScrollBackwards"
  }, {
    "event": "browser.resultsColumn.itemBank.canScrollForwards"
  }, {
    "event": "browser.resultsColumn.itemBank.scrollPosition"
  }]
}
