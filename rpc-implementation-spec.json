{
  "extension": {
    "author": "hogehoge",
    "name": "WebSocket RPC",
    "requiredApiVersion": 7,
    "version": "snapshot"
  },
  "reportedOn": "Jul 26, 2018 11:36:02 PM",
  "host": {
    "product": "Bitwig Studio",
    "apiVersion": 7,
    "vendor": "Bitwig",
    "platformType": "MAC",
    "version": "2.4 Beta 1"
  },
  "modules": [{
    "methods": [{
      "result": "void",
      "method": "rpc.broadcast",
      "params": ["String", "Object[]"]
    }, {
      "result": "String",
      "method": "rpc.echo",
      "params": ["String"]
    }, {
      "event": "rpc.log"
    }, {
      "result": "boolean",
      "method": "rpc.log.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "rpc.log.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "rpc.log.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "rpc.log.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "rpc.log.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "rpc.nextTick",
      "params": []
    }, {
      "result": "void",
      "method": "rpc.nextTick",
      "params": ["Number"]
    }, {
      "result": "Object",
      "method": "rpc.off",
      "params": ["String[]"]
    }, {
      "result": "Object",
      "method": "rpc.on",
      "params": ["String[]"]
    }, {
      "result": "Object",
      "method": "rpc.once",
      "params": ["String[]"]
    }, {
      "result": "Object",
      "method": "rpc.report",
      "params": []
    }],
    "events": [{
      "event": "rpc.log"
    }]
  }, {
    "methods": [{
      "result": "String",
      "method": "test.concat",
      "params": ["Object"]
    }, {
      "result": "String",
      "method": "test.concat",
      "params": ["String[]"]
    }, {
      "result": "String",
      "method": "test.concat",
      "params": ["String", "String"]
    }, {
      "result": "void",
      "method": "test.consume",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "test.consume",
      "params": ["Number[]"]
    }, {
      "result": "void",
      "method": "test.consume",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "test.consume",
      "params": ["Number", "Number", "Number"]
    }, {
      "result": "String",
      "method": "test.echo",
      "params": ["String"]
    }, {
      "result": "String",
      "method": "test.hello",
      "params": []
    }, {
      "result": "void",
      "method": "test.nop",
      "params": []
    }, {
      "result": "String",
      "method": "test.repeat",
      "params": ["Object"]
    }, {
      "result": "String",
      "method": "test.repeat",
      "params": ["String", "Number"]
    }, {
      "result": "Number",
      "method": "test.sum",
      "params": ["Object"]
    }, {
      "result": "Number",
      "method": "test.sum",
      "params": ["Number[]"]
    }, {
      "result": "Number",
      "method": "test.sum",
      "params": ["Number", "Number"]
    }, {
      "result": "Number",
      "method": "test.sum",
      "params": ["Number", "Number", "Number"]
    }],
    "events": []
  }, {
    "methods": [{
      "event": "transport.automationWriteMode"
    }, {
      "result": "String",
      "method": "transport.automationWriteMode.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.automationWriteMode.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.automationWriteMode.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.automationWriteMode.set",
      "params": ["String"]
    }, {
      "result": "void",
      "method": "transport.automationWriteMode.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.automationWriteMode.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.automationWriteMode.unsubscribe",
      "params": []
    }, {
      "event": "transport.clipLauncherPostRecordingAction"
    }, {
      "result": "String",
      "method": "transport.clipLauncherPostRecordingAction.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.clipLauncherPostRecordingAction.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.clipLauncherPostRecordingAction.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.clipLauncherPostRecordingAction.set",
      "params": ["String"]
    }, {
      "result": "void",
      "method": "transport.clipLauncherPostRecordingAction.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.clipLauncherPostRecordingAction.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.clipLauncherPostRecordingAction.unsubscribe",
      "params": []
    }, {
      "event": "transport.createEqualsValue"
    }, {
      "result": "boolean",
      "method": "transport.createEqualsValue.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.createEqualsValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.createEqualsValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.createEqualsValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.createEqualsValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.createEqualsValue.unsubscribe",
      "params": []
    }, {
      "event": "transport.crossfade"
    }, {
      "event": "transport.crossfade.createEqualsValue"
    }, {
      "result": "boolean",
      "method": "transport.crossfade.createEqualsValue.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.crossfade.createEqualsValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.createEqualsValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.createEqualsValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.createEqualsValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.createEqualsValue.unsubscribe",
      "params": []
    }, {
      "event": "transport.crossfade.displayedValue"
    }, {
      "result": "String",
      "method": "transport.crossfade.displayedValue.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.crossfade.displayedValue.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.crossfade.displayedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.displayedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.displayedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.displayedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.displayedValue.unsubscribe",
      "params": []
    }, {
      "event": "transport.crossfade.exists"
    }, {
      "result": "boolean",
      "method": "transport.crossfade.exists.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.crossfade.exists.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.exists.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.exists.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.exists.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.exists.unsubscribe",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.crossfade.get",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.crossfade.getRaw",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.inc",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.inc",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.incRaw",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.crossfade.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.markInterested",
      "params": []
    }, {
      "event": "transport.crossfade.modulatedValue"
    }, {
      "event": "transport.crossfade.modulatedValue.displayedValue"
    }, {
      "result": "String",
      "method": "transport.crossfade.modulatedValue.displayedValue.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.crossfade.modulatedValue.displayedValue.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.crossfade.modulatedValue.displayedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.displayedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.displayedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.displayedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.displayedValue.unsubscribe",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.crossfade.modulatedValue.get",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.crossfade.modulatedValue.getRaw",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.crossfade.modulatedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.modulatedValue.unsubscribe",
      "params": []
    }, {
      "event": "transport.crossfade.name"
    }, {
      "result": "String",
      "method": "transport.crossfade.name.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.crossfade.name.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.crossfade.name.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.name.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.name.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.name.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.name.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.reset",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.restoreAutomationControl",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.set",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.setImmediately",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.setIndication",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.setLabel",
      "params": ["String"]
    }, {
      "result": "void",
      "method": "transport.crossfade.setRaw",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.touch",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.unsubscribe",
      "params": []
    }, {
      "event": "transport.crossfade.value"
    }, {
      "event": "transport.crossfade.value.displayedValue"
    }, {
      "result": "String",
      "method": "transport.crossfade.value.displayedValue.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.crossfade.value.displayedValue.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.crossfade.value.displayedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.value.displayedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.value.displayedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.displayedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.value.displayedValue.unsubscribe",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.crossfade.value.get",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.crossfade.value.getRaw",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.value.inc",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.inc",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.incRaw",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.crossfade.value.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.value.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.value.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.set",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.setImmediately",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.setRaw",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.crossfade.value.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.crossfade.value.unsubscribe",
      "params": []
    }, {
      "event": "transport.exists"
    }, {
      "result": "boolean",
      "method": "transport.exists.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.exists.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.exists.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.exists.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.exists.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.exists.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.fastForward",
      "params": []
    }, {
      "event": "transport.getClipLauncherPostRecordingTimeOffset"
    }, {
      "result": "Number",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.getFormatted",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.getFormatted",
      "params": ["Object"]
    }, {
      "result": "void",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.inc",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getClipLauncherPostRecordingTimeOffset.unsubscribe",
      "params": []
    }, {
      "event": "transport.getInPosition"
    }, {
      "result": "Number",
      "method": "transport.getInPosition.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getInPosition.getFormatted",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getInPosition.getFormatted",
      "params": ["Object"]
    }, {
      "result": "void",
      "method": "transport.getInPosition.inc",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.getInPosition.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getInPosition.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getInPosition.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.getInPosition.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.getInPosition.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getInPosition.unsubscribe",
      "params": []
    }, {
      "event": "transport.getOutPosition"
    }, {
      "result": "Number",
      "method": "transport.getOutPosition.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getOutPosition.getFormatted",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getOutPosition.getFormatted",
      "params": ["Object"]
    }, {
      "result": "void",
      "method": "transport.getOutPosition.inc",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.getOutPosition.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getOutPosition.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getOutPosition.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.getOutPosition.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.getOutPosition.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getOutPosition.unsubscribe",
      "params": []
    }, {
      "event": "transport.getPosition"
    }, {
      "result": "Number",
      "method": "transport.getPosition.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getPosition.getFormatted",
      "params": []
    }, {
      "result": "String",
      "method": "transport.getPosition.getFormatted",
      "params": ["Object"]
    }, {
      "result": "void",
      "method": "transport.getPosition.inc",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.getPosition.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getPosition.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getPosition.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.getPosition.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.getPosition.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.getPosition.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.incPosition",
      "params": ["Number", "boolean"]
    }, {
      "result": "void",
      "method": "transport.increaseTempo",
      "params": ["Number", "Number"]
    }, {
      "event": "transport.isArrangerAutomationWriteEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isArrangerAutomationWriteEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isArrangerAutomationWriteEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerAutomationWriteEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerAutomationWriteEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerAutomationWriteEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerAutomationWriteEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerAutomationWriteEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerAutomationWriteEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isArrangerLoopEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isArrangerLoopEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isArrangerLoopEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerLoopEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerLoopEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerLoopEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerLoopEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerLoopEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerLoopEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isArrangerOverdubEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isArrangerOverdubEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isArrangerOverdubEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerOverdubEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerOverdubEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerOverdubEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerOverdubEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerOverdubEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerOverdubEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isArrangerRecordEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isArrangerRecordEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isArrangerRecordEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerRecordEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerRecordEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerRecordEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isArrangerRecordEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerRecordEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isArrangerRecordEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isAutomationOverrideActive"
    }, {
      "result": "boolean",
      "method": "transport.isAutomationOverrideActive.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isAutomationOverrideActive.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isAutomationOverrideActive.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isAutomationOverrideActive.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isAutomationOverrideActive.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isAutomationOverrideActive.unsubscribe",
      "params": []
    }, {
      "event": "transport.isClipLauncherAutomationWriteEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isClipLauncherAutomationWriteEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isClipLauncherAutomationWriteEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherAutomationWriteEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherAutomationWriteEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isClipLauncherAutomationWriteEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isClipLauncherAutomationWriteEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherAutomationWriteEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherAutomationWriteEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isClipLauncherOverdubEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isClipLauncherOverdubEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isClipLauncherOverdubEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherOverdubEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherOverdubEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isClipLauncherOverdubEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isClipLauncherOverdubEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherOverdubEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isClipLauncherOverdubEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isMetronomeAudibleDuringPreRoll"
    }, {
      "result": "boolean",
      "method": "transport.isMetronomeAudibleDuringPreRoll.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isMetronomeAudibleDuringPreRoll.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeAudibleDuringPreRoll.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeAudibleDuringPreRoll.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isMetronomeAudibleDuringPreRoll.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isMetronomeAudibleDuringPreRoll.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeAudibleDuringPreRoll.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeAudibleDuringPreRoll.unsubscribe",
      "params": []
    }, {
      "event": "transport.isMetronomeEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isMetronomeEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isMetronomeEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isMetronomeEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isMetronomeEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isMetronomeTickPlaybackEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isMetronomeTickPlaybackEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isMetronomeTickPlaybackEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeTickPlaybackEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeTickPlaybackEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isMetronomeTickPlaybackEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isMetronomeTickPlaybackEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeTickPlaybackEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isMetronomeTickPlaybackEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isPlaying"
    }, {
      "result": "boolean",
      "method": "transport.isPlaying.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isPlaying.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPlaying.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPlaying.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isPlaying.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isPlaying.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPlaying.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPlaying.unsubscribe",
      "params": []
    }, {
      "event": "transport.isPunchInEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isPunchInEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isPunchInEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchInEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchInEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isPunchInEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isPunchInEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchInEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchInEnabled.unsubscribe",
      "params": []
    }, {
      "event": "transport.isPunchOutEnabled"
    }, {
      "result": "boolean",
      "method": "transport.isPunchOutEnabled.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isPunchOutEnabled.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchOutEnabled.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchOutEnabled.set",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isPunchOutEnabled.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.isPunchOutEnabled.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchOutEnabled.toggle",
      "params": []
    }, {
      "result": "void",
      "method": "transport.isPunchOutEnabled.unsubscribe",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.isSubscribed",
      "params": []
    }, {
      "event": "transport.metronomeVolume"
    }, {
      "event": "transport.metronomeVolume.displayedValue"
    }, {
      "result": "String",
      "method": "transport.metronomeVolume.displayedValue.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.metronomeVolume.displayedValue.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.metronomeVolume.displayedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.displayedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.displayedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.displayedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.displayedValue.unsubscribe",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.metronomeVolume.get",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.metronomeVolume.getRaw",
      "params": []
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.inc",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.inc",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.incRaw",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.metronomeVolume.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.set",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.setImmediately",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.setRaw",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.metronomeVolume.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.play",
      "params": []
    }, {
      "event": "transport.preRoll"
    }, {
      "result": "String",
      "method": "transport.preRoll.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.preRoll.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.preRoll.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.preRoll.set",
      "params": ["String"]
    }, {
      "result": "void",
      "method": "transport.preRoll.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.preRoll.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.preRoll.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.record",
      "params": []
    }, {
      "result": "void",
      "method": "transport.resetAutomationOverrides",
      "params": []
    }, {
      "result": "void",
      "method": "transport.restart",
      "params": []
    }, {
      "result": "void",
      "method": "transport.returnToArrangement",
      "params": []
    }, {
      "result": "void",
      "method": "transport.rewind",
      "params": []
    }, {
      "result": "void",
      "method": "transport.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.setPosition",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.stop",
      "params": []
    }, {
      "result": "void",
      "method": "transport.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tapTempo",
      "params": []
    }, {
      "event": "transport.tempo"
    }, {
      "event": "transport.tempo.createEqualsValue"
    }, {
      "result": "boolean",
      "method": "transport.tempo.createEqualsValue.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.tempo.createEqualsValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.createEqualsValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.createEqualsValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.createEqualsValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.createEqualsValue.unsubscribe",
      "params": []
    }, {
      "event": "transport.tempo.displayedValue"
    }, {
      "result": "String",
      "method": "transport.tempo.displayedValue.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.tempo.displayedValue.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.tempo.displayedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.displayedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.displayedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.displayedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.displayedValue.unsubscribe",
      "params": []
    }, {
      "event": "transport.tempo.exists"
    }, {
      "result": "boolean",
      "method": "transport.tempo.exists.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.tempo.exists.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.exists.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.exists.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.exists.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.exists.unsubscribe",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.tempo.get",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.tempo.getRaw",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.inc",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.inc",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.incRaw",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.tempo.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.markInterested",
      "params": []
    }, {
      "event": "transport.tempo.modulatedValue"
    }, {
      "event": "transport.tempo.modulatedValue.displayedValue"
    }, {
      "result": "String",
      "method": "transport.tempo.modulatedValue.displayedValue.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.tempo.modulatedValue.displayedValue.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.tempo.modulatedValue.displayedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.displayedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.displayedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.displayedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.displayedValue.unsubscribe",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.tempo.modulatedValue.get",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.tempo.modulatedValue.getRaw",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.tempo.modulatedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.modulatedValue.unsubscribe",
      "params": []
    }, {
      "event": "transport.tempo.name"
    }, {
      "result": "String",
      "method": "transport.tempo.name.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.tempo.name.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.tempo.name.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.name.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.name.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.name.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.name.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.reset",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.restoreAutomationControl",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.set",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.setImmediately",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.setIndication",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.setLabel",
      "params": ["String"]
    }, {
      "result": "void",
      "method": "transport.tempo.setRaw",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.touch",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.unsubscribe",
      "params": []
    }, {
      "event": "transport.tempo.value"
    }, {
      "event": "transport.tempo.value.displayedValue"
    }, {
      "result": "String",
      "method": "transport.tempo.value.displayedValue.get",
      "params": []
    }, {
      "result": "String",
      "method": "transport.tempo.value.displayedValue.getLimited",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.tempo.value.displayedValue.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.value.displayedValue.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.value.displayedValue.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.displayedValue.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.value.displayedValue.unsubscribe",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.tempo.value.get",
      "params": []
    }, {
      "result": "Number",
      "method": "transport.tempo.value.getRaw",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.value.inc",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.inc",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.incRaw",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.tempo.value.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.value.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.value.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.set",
      "params": ["Number", "Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.setImmediately",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.setRaw",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.tempo.value.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.tempo.value.unsubscribe",
      "params": []
    }, {
      "event": "transport.timeSignature"
    }, {
      "event": "transport.timeSignature.denominator"
    }, {
      "result": "Number",
      "method": "transport.timeSignature.denominator.get",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.denominator.inc",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.timeSignature.denominator.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.denominator.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.denominator.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.denominator.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.denominator.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.denominator.unsubscribe",
      "params": []
    }, {
      "result": "String",
      "method": "transport.timeSignature.get",
      "params": []
    }, {
      "result": "boolean",
      "method": "transport.timeSignature.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.markInterested",
      "params": []
    }, {
      "event": "transport.timeSignature.numerator"
    }, {
      "result": "Number",
      "method": "transport.timeSignature.numerator.get",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.numerator.inc",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.timeSignature.numerator.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.numerator.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.numerator.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.numerator.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.numerator.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.numerator.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.set",
      "params": ["String"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.subscribe",
      "params": []
    }, {
      "event": "transport.timeSignature.ticks"
    }, {
      "result": "Number",
      "method": "transport.timeSignature.ticks.get",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.ticks.inc",
      "params": ["Number"]
    }, {
      "result": "boolean",
      "method": "transport.timeSignature.ticks.isSubscribed",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.ticks.markInterested",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.ticks.set",
      "params": ["Number"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.ticks.setIsSubscribed",
      "params": ["boolean"]
    }, {
      "result": "void",
      "method": "transport.timeSignature.ticks.subscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.ticks.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.timeSignature.unsubscribe",
      "params": []
    }, {
      "result": "void",
      "method": "transport.toggleLatchAutomationWriteMode",
      "params": []
    }, {
      "result": "void",
      "method": "transport.togglePlay",
      "params": []
    }, {
      "result": "void",
      "method": "transport.toggleWriteArrangerAutomation",
      "params": []
    }, {
      "result": "void",
      "method": "transport.toggleWriteClipLauncherAutomation",
      "params": []
    }, {
      "result": "void",
      "method": "transport.unsubscribe",
      "params": []
    }],
    "events": [{
      "event": "transport.automationWriteMode"
    }, {
      "event": "transport.clipLauncherPostRecordingAction"
    }, {
      "event": "transport.createEqualsValue"
    }, {
      "event": "transport.crossfade"
    }, {
      "event": "transport.crossfade.createEqualsValue"
    }, {
      "event": "transport.crossfade.displayedValue"
    }, {
      "event": "transport.crossfade.exists"
    }, {
      "event": "transport.crossfade.modulatedValue"
    }, {
      "event": "transport.crossfade.modulatedValue.displayedValue"
    }, {
      "event": "transport.crossfade.name"
    }, {
      "event": "transport.crossfade.value"
    }, {
      "event": "transport.crossfade.value.displayedValue"
    }, {
      "event": "transport.exists"
    }, {
      "event": "transport.getClipLauncherPostRecordingTimeOffset"
    }, {
      "event": "transport.getInPosition"
    }, {
      "event": "transport.getOutPosition"
    }, {
      "event": "transport.getPosition"
    }, {
      "event": "transport.isArrangerAutomationWriteEnabled"
    }, {
      "event": "transport.isArrangerLoopEnabled"
    }, {
      "event": "transport.isArrangerOverdubEnabled"
    }, {
      "event": "transport.isArrangerRecordEnabled"
    }, {
      "event": "transport.isAutomationOverrideActive"
    }, {
      "event": "transport.isClipLauncherAutomationWriteEnabled"
    }, {
      "event": "transport.isClipLauncherOverdubEnabled"
    }, {
      "event": "transport.isMetronomeAudibleDuringPreRoll"
    }, {
      "event": "transport.isMetronomeEnabled"
    }, {
      "event": "transport.isMetronomeTickPlaybackEnabled"
    }, {
      "event": "transport.isPlaying"
    }, {
      "event": "transport.isPunchInEnabled"
    }, {
      "event": "transport.isPunchOutEnabled"
    }, {
      "event": "transport.metronomeVolume"
    }, {
      "event": "transport.metronomeVolume.displayedValue"
    }, {
      "event": "transport.preRoll"
    }, {
      "event": "transport.tempo"
    }, {
      "event": "transport.tempo.createEqualsValue"
    }, {
      "event": "transport.tempo.displayedValue"
    }, {
      "event": "transport.tempo.exists"
    }, {
      "event": "transport.tempo.modulatedValue"
    }, {
      "event": "transport.tempo.modulatedValue.displayedValue"
    }, {
      "event": "transport.tempo.name"
    }, {
      "event": "transport.tempo.value"
    }, {
      "event": "transport.tempo.value.displayedValue"
    }, {
      "event": "transport.timeSignature"
    }, {
      "event": "transport.timeSignature.denominator"
    }, {
      "event": "transport.timeSignature.numerator"
    }, {
      "event": "transport.timeSignature.ticks"
    }]
  }]
}